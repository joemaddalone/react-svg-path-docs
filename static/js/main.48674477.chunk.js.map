{"version":3,"sources":["util/no-focus-event.js","components/demos/Elements/index.js","components/demos/Elements/Atom.js","components/demos/Elements/Modal.js","i18n/i18n.js","index.js"],"names":["document","body","addEventListener","e","which","documentElement","classList","remove","add","Atom","cx","cy","shells","circ","step","length","electron_config","slice","reverse","incrementalRing","map","s","i","shellPoints","Path","radialPoints","times","arr","min","n","Math","max","floor","random","getTimes","width","height","className","style","animationDuration","size","fill","stroke","strokeWidth","p","q","Modal","close","children","onClick","x","y","fillOpacity","ox","oy","elements","data","xpos","ypos","grid","index","push","Array","from","forEach","cells","positionByArray","modal","h","w","Table","React","useState","open","setOpen","scale","maxWidth","transform","margin","value","stopPropagation","radius","category","replace","dy","symbol","number","name","fontSize","capitalizeFirst","str","charAt","toUpperCase","i18n","use","Cache","LanguageDetector","init","interpolation","escapeValue","format","split","join","capitalizeAll","toLowerCase","resources","en","fallbackLng","react","useSuspense","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.48674477.chunk.js","sourcesContent":["(() => {\n  document.body.addEventListener('keyup', (e) => {\n    if (e.which === 9) {\n      document.documentElement.classList.remove('no-focus-outline');\n    } else {\n      document.documentElement.classList.add('no-focus-outline');\n    }\n  });\n\n  document.body.addEventListener('click', () => {\n    document.documentElement.classList.add('no-focus-outline');\n  });\n})();\n","import React from \"react\";\nimport Path, { Svg, Group, RoundedSquare, Text, Rect } from \"react-svg-path\";\nimport Atom from \"./Atom\";\nimport Modal from \"./Modal\";\nimport data from \"./data.json\";\nimport \"./style.css\";\n\nconst elements = data.elements\n  .slice()\n  .map((e) => ({ ...e, xpos: e.xpos - 1, ypos: e.ypos - 1 }));\n\nconst grid = [];\nfor (let index = 0; index < 10; index++) {\n  grid.push(Array.from({ length: 17 }));\n}\nelements.forEach((e) => {\n  grid[e.ypos][e.xpos] = e;\n});\n\nconst cellSize = 95;\nconst cells = Path.positionByArray(cellSize, grid, 0, 0);\nconst margin = 40;\nconst w = 18 * cellSize;\nconst h = 10 * cellSize;\nconst modal = {\n  height: h - 100,\n  width: w / 2,\n};\n\nconst Table = () => {\n  const [open, setOpen] = React.useState(null);\n  return (\n    <Svg\n      width={w + margin}\n      height={h + margin}\n      scale\n      style={{ maxWidth: 1200 }}\n    >\n      <Group transform={`translate(${margin / 2}, ${margin / 2})`}>\n        <Group>\n          {cells.map(({ cx, cy, size, value }, index) => (\n            <RoundedSquare\n              onClick={(e) => {\n                e.stopPropagation();\n                if (!open) {\n                  setOpen(value);\n                }\n              }}\n              radius={10}\n              className={`cell ${value.category.replace(/ /g, \"-\")}`}\n              cx={cx}\n              cy={cy}\n              key={value}\n              size={size * 0.95}\n            >\n              <Text dy={10} className=\"big middle\">\n                {value.symbol}\n              </Text>\n              <Text ox={-size / 2 + 10} oy={-size / 2 + 25} className=\"small\">\n                {value.number}\n              </Text>\n            </RoundedSquare>\n          ))}\n        </Group>\n      </Group>\n      {open ? (\n        <Modal\n          width={modal.width}\n          height={modal.height}\n          close={() => setOpen(null)}\n        >\n          <Text className=\"middle big\" oy={-350}>\n            {open.name} ({open.symbol})\n          </Text>\n          <Group transform=\"translate(0, 40)\">\n            <Atom circ={500} shells={open.shells} />\n            <Text\n              className=\"middle\"\n              style={{ fontSize: \"175%\" }}\n              transform=\"translate(0, 340)\"\n            >\n              Electron configuration of {open.name}\n            </Text>\n          </Group>\n        </Modal>\n      ) : null}\n    </Svg>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport Path, { Circle, Group, Rect } from \"react-svg-path\";\n\nconst Atom = ({ cx, cy, shells, circ = 350 }) => {\n  const step = circ/shells.length\n  const electron_config = shells.slice().reverse();\n  const incrementalRing = electron_config.map((s, i) => circ - step * i);\n  const shellPoints = electron_config.map((s, i) =>\n    Path.radialPoints(incrementalRing[i] / 2, cx, cy, s)\n  );\n\n  const getTimes = (arr) => {\n    const max = 5000;\n    let min;\n    return arr.map((n) => {\n      min = Math.max(n * 1000, max);\n      return Math.floor(Math.random() * (max - min)) + min;\n    });\n  };\n\n  const times = getTimes(electron_config);\n\n  return (\n    <Rect width={circ} height={circ} cx={cx} cy={cy} className=\"atom\">\n      {incrementalRing.map((s, i) => (\n        <Group\n          key={i}\n          className=\"ring\"\n          style={{ animationDuration: `${times[i] / 1000}s` }}\n        >\n          <Circle size={s} fill=\"none\" stroke=\"#222\" strokeWidth={0.5} />\n          {shellPoints[i].map((p, q) => {\n            return (\n              <Circle\n                key={`${q}`}\n                cx={+p[0]}\n                cy={+p[1]}\n                size={13}\n                fill=\"#20a0c1\"\n              />\n            );\n          })}\n        </Group>\n      ))}\n    </Rect>\n  );\n};\n\nexport default Atom;\n","import React from \"react\";\nimport { Group, Rect, SymX } from \"react-svg-path\";\n\nconst Modal = ({\n  className,\n  width,\n  height,\n  close,\n  cx,\n  cy,\n  children,\n  fill = \"#f8f8f8\",\n}) => {\n  return (\n    <>\n      <rect\n        onClick={close}\n        x={0}\n        y={0}\n        width=\"100%\"\n        height=\"100%\"\n        fill=\"#fff\"\n        fillOpacity={0.4}\n      />\n      <Rect\n        className={`modal ${className}`}\n        cx={cx}\n        cy={cy}\n        width={width}\n        height={height}\n        fill={fill}\n        stroke=\"#ddd\"\n        strokeWidth={2}\n      >\n        <Rect\n          ox={width / 2 - 25}\n          oy={-(height / 2) + 25}\n          className=\"pointer\"\n          width={15}\n          height={15}\n          onClick={close}\n          fill=\"transparent\"\n        >\n          <SymX\n            className=\"no-pointer\"\n            width={15}\n            height={15}\n            stroke=\"black\"\n            strokeWidth={3}\n          />\n        </Rect>\n        {children}\n      </Rect>\n    </>\n  );\n};\n\nexport default Modal;\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Cache from 'i18next-localstorage-cache';\nimport en from './en.json';\n\nconst capitalizeFirst = (str) =>\n  `${str.charAt(0).toUpperCase()}${str.slice(1)}`;\n\nconst capitalizeAll = (str) => {\n  if (!str) return;\n  return str\n    .split(' ')\n    .map((str) => capitalizeFirst(str))\n    .join(' ');\n};\n\ni18n\n  .use(Cache)\n  .use(LanguageDetector)\n  .init({\n    interpolation: {\n      escapeValue: false,\n      format: function (value, format) {\n        switch (format) {\n          case 'uppercase':\n            return value.toUpperCase();\n          case 'capitalize':\n            return capitalizeAll(value);\n          case 'lowercase':\n            return value.toLowerCase();\n          case 'sentence':\n            return capitalizeFirst(value);\n          default:\n            return value;\n        }\n      }\n    },\n    resources: { en },\n    fallbackLng: 'en',\n    react: {\n      useSuspense: false\n    }\n  });\n\nexport const setNamespace = (keys) => (value, options = {}) => {\n  return i18n.t(value, { ns: [...keys], ...options }) || value;\n};\n\nexport const translate = (path, options) => {\n  const [namespace, ...rest] = path.split('.');\n  const t = setNamespace([namespace]);\n  return t(rest.join('.'), options);\n};\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './App';\nimport App from './components/demos/Elements';\n// eslint-disable-next-line no-unused-vars\nimport i18n from './i18n/i18n';\nimport './util/no-focus-event';\n\nif (process.env.NODE_ENV === 'development') {\n  const axe = require('react-axe');\n  axe(React, ReactDOM, 1000);\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}