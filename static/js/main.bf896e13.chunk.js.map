{"version":3,"sources":["util/no-focus-event.js","docs/docs.mjs","i18n/i18n.js","components/demos/Elements/index.js","components/Nav.js","components/demo-builders/PointArray.js","components/demo-builders/TwoDArray.js","components/demo-builders/ComponentKnobs.js","components/demo-builders/PathKnobs.js","components/demo-builders/Tabs.js","docs/demos.mjs","components/demo-builders/BasicShapeDemo.js","components/demo-builders/CurveDemo.js","components/pages/nesting/NestingDemo1.js","components/pages/nesting/NestingDemo2.js","components/pages/nesting/NestingDemo3.js","components/pages/nesting/index.js","components/demos/dag/dagSetup.js","components/demos/dag/DagNodes.js","components/demos/complex/Pie.js","components/demos/complex/Donut.js","components/demos/complex/SparkLine.js","components/demos/complex/BarChart/SortControls.js","components/demos/complex/BarChart/Frame.js","components/demos/complex/BarChart/Ticks.js","components/demos/complex/BarChart/Bars.js","components/demos/complex/BarChart/BarChart.js","components/demos/complex/Football/Football.js","components/demos/complex/Dimensions/Dimensions.js","components/demos/targets/Targets.js","components/demos/targets/TargetDemo.js","components/demos/complex/Clock.js","components/demos/Elements/Atom.js","components/demos/Elements/Modal.js","components/pages/demos/index.js","components/pages/merge/MergeDemo.js","components/pages/Introduction.js","components/pages/markers/MarkerDemo.js","components/pages/textpath/TextPathDemo.js","components/pages/CenterEndDemo.js","components/pages/svg/SvgDemo.js","components/pages/distance/DistanceDemo.js","components/pages/ToComponent.js","components/pages/PathIntro.js","components/ScrollToTop.js","App.js","index.js"],"names":["document","body","addEventListener","e","which","documentElement","classList","remove","add","commonNumberValidator","value","isNaN","pointArrayValidator","arr","Array","length","some","p","Error","every","points","err","message","centeredShapeNestingProps","ex","ey","sx","sy","commonNumber","type","isRequired","validator","cx","description","cy","shorthands","sxy","default","k","exy","cxy","rxy","centerEnd","docs","circle","category","Component","command","args","props","size","nestingProps","ellipse","width","height","kite","dh","lens","omino","shape","a","lined","polygon","pointsLength","polygram","vertexSkip","polyline","relative","line","preCommand","preArgs","radialLines","outerSize","innerSize","rect","roundedRect","radius","regPolygon","sides","sector","startAngle","endAngle","segment","square","roundedSquare","star","triangle","symX","symI","symH","cross","arc","rx","ry","rotation","sweep","cubic","postCommand","cx1","cy1","cx2","cy2","S","s","endX","endY","quad","T","t","basicShapes","Object","keys","filter","reduce","accum","cur","curves","capitalizeFirst","str","charAt","toUpperCase","slice","i18n","use","Cache","LanguageDetector","init","interpolation","escapeValue","format","split","map","join","capitalizeAll","toLowerCase","resources","en","fallbackLng","react","useSuspense","translate","path","options","namespace","rest","ns","Nav","overlay","className","style","paddingBottom","exact","to","sort","c","index","paddingTop","PointArray","label","pointLength","onChange","useState","setPoints","useEffect","flexBasis","pointValues","Fragment","htmlFor","from","_","i","current","target","disabled","onClick","splice","padding","push","fill","TwoDArray","Number","ComponentKnobs","id","inputMode","tabIndex","checked","pathAttributes","stroke","strokeWidth","step","strokeMiterlimit","strokeLinecap","strokeDashoffset","strokeDasharray","pattern","strokeLinejoin","strokeOpacity","min","max","fillOpacity","PathKnobs","initData","opt","paddingLeft","Tabs","activeTabIndex","setActiveTabIndex","activeTab","children","tab","title","transform","basicSvgDimensions","w","h","curveSvgDimensions","demos","svgDimensions","BasicShapeDemo","demoDocs","initialState","d","demoValues","setDemoValues","setPathAttributes","C","Shapes","Svg","trim","sh","shi","scale","maxWidth","JSON","stringify","v","CurveDemo","curve","parse","NestingDemo1","genPolylineZag","centerY","y","shift","NestingDemo2","dx","dy","attach","NestingDemo3","dangerouslySetInnerHTML","__html","oy","ox","Nesting","setupDag","dir","algo","elk","ELK","elkNodes","elkLinks","items","forEach","item","source","elkGraph","layoutOptions","separateConnectedComponents","edges","layout","algorithms","DagNodes","React","loading","setLoading","data","setData","setAlgo","createDag","onChangeAlgo","dagSetup","then","catch","finally","squareNodes","x","circleNodes","name","Path","sections","M","startPoint","bendPoints","b","L","endPoint","toString","createConnectors","alert","dominantBaseline","textAnchor","Pie","percentToDegree","sectors","total","percent","color","Donut","segments","Grid","cols","rows","close","extra","colWidth","rowHeight","horizontal","vertical","concat","SparkLine","clone","myScale","opts","dataStart","domain","dataStop","chartStart","range","chartStop","pointDistance","parseInt","newDataPoint","xSize","ySize","margin","SortControls","sorter","setSorter","Frame","margins","left","right","Ticks","ticks","yScale","fontSize","Bars","values","variable","barCount","barWidth","BarChart","variables","currentVariable","setCurrentVariable","sorters","alphaa","localeCompare","alphad","valuea","valued","Math","apply","o","top","bottom","scaleLinear","sortedValues","Football","canvasWidth","scaleProps","scaleUnit","canvasHeight","field","endzoneWidth","playingWidth","tickLength","topTickY","bottomTickY","bottomNumY","topNumY","tickCount","toFixed","commonTickProps","outline","open","marginX","marginY","isFifth","abs","markers","App","quarterWidth","quarterHeight","markerEnd","text","dotted","markerStart","Target1","Target2","Target3","Target4","Target5","Target6","Target7","Target8","Target9","Target10","Target11","TargetDemo","g","positionByArray","xy","degreeToAngle","division","degree","polarToCartesian","time","Date","second","getSeconds","minute","getMinutes","hour","getHours","millis","getMilliseconds","date","getDate","day","toLocaleDateString","weekday","month","Clock","fontBase","state","setState","interval","setInterval","clearInterval","hoursPoints","radialPoints","minutePoints","hours","point","m","Atom","shells","circ","electron_config","reverse","incrementalRing","shellPoints","times","n","floor","random","getTimes","animationDuration","q","Modal","elements","xpos","ypos","grid","cells","modal","Table","setOpen","stopPropagation","replace","symbol","number","Demos","pieData","nested","sparkData","ceil","display","flexDirection","Elements","href","rel","val","qty","Dimensions","minHeight","pd","flat","MergeDemo","Introduction","r","offsetY","offsetX","ypoints","MarkerSelector","MarkerDemo","startMarker","setStartMarker","endMarker","setEndMarker","midMarker","setMidMarker","quadDemo","markerMid","marginLeft","TextPathDemo","exampleText","startOffset","textLength","repeat","CenterEndDemo","SvgDemo","DistanceDemo","Triangle","l","toComponent","ToComponent","pathCommands","primitives","cmd","friendly","helpers","shapes","PathIntro","ScrollToTop","cb","pathname","location","querySelector","scrollTop","propTypes","PropTypes","node","object","withRouter","overlayNav","setOverlayNav","shapesDemos","curveDemos","basename","backgroundColor","marginRight","cursor","borderRadius","border","console","log","component","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.bf896e13.chunk.js","sourcesContent":["(() => {\n  document.body.addEventListener('keyup', (e) => {\n    if (e.which === 9) {\n      document.documentElement.classList.remove('no-focus-outline');\n    } else {\n      document.documentElement.classList.add('no-focus-outline');\n    }\n  });\n\n  document.body.addEventListener('click', () => {\n    document.documentElement.classList.add('no-focus-outline');\n  });\n})();\n","const commonNumberValidator = (value) => !isNaN(value);\nconst pointArrayValidator = (arr) => {\n  try {\n    if (\n      !(arr instanceof Array) ||\n      !arr.length ||\n      arr.some((p) => !(p instanceof Array))\n    ) {\n      throw new Error('bad points, bad!.');\n    }\n    const result = arr.every((points) => points.every((p) => !isNaN(p)));\n    return result;\n  } catch (err) {\n    return err.message;\n  }\n};\n\nconst nestedArrayValidator = (arr) => {\n  try {\n    if (\n      !(arr instanceof Array) ||\n      !arr.length ||\n      arr.some((p) => !(p instanceof Array))\n    ) {\n      throw new Error('not a 2s array, bad!.');\n    }\n    const result = arr.every((a) => a instanceof Array);\n    return result;\n  } catch (err) {\n    return err.message;\n  }\n};\n\nconst centeredShapeNestingProps = {\n  ex: 'cx',\n  ey: 'cy',\n  sx: 'cx',\n  sy: 'cy'\n};\n\nconst commonNumber = {\n  type: 'number',\n  isRequired: true,\n  validator: commonNumberValidator\n};\n\nconst cx = {\n  ...commonNumber,\n  description: 'Center x coordinate of the shape.'\n};\n\nconst cy = {\n  ...commonNumber,\n  description: 'Center x coordinate of the shape.'\n};\n\nexport const shorthands = {\n  sxy: {\n    ...commonNumber,\n    isRequired: false,\n    default: null,\n    k: 'sxy',\n    p: ['sx', 'sy'],\n    description:\n      'If sx and sy are equal values you can use the shortcut \"sxy\" to set both at once.'\n  },\n  exy: {\n    ...commonNumber,\n    isRequired: false,\n    default: null,\n    k: 'exy',\n    p: ['ex', 'ey'],\n    description:\n      'If ex and ey are equal values you can use the shortcut \"exy\" to set both at once.'\n  },\n  cxy: {\n    ...commonNumber,\n    isRequired: false,\n    default: null,\n    k: 'cxy',\n    p: ['cx', 'cy'],\n    description:\n      'If cx and cy are equal values you can use the shortcut \"cxy\" to set both at once.'\n  },\n  rxy: {\n    ...commonNumber,\n    isRequired: false,\n    default: null,\n    k: 'rxy',\n    p: ['rx', 'ry'],\n    description:\n      'If rx and ry are equal values you can use the shortcut \"rxy\" to set both at once.'\n  }\n};\n\nconst centerEnd = {\n  default: true,\n  type: 'boolean',\n  isRequired: false,\n  description:\n    'Determines whether cursor should return to cx & cy as a last step.'\n};\n\nconst docs = {\n  circle: {\n    category: 'basicShapes',\n    Component: 'Circle',\n    command: 'circle',\n    args: ['size', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Circle is drawn from center points (cx & cy). The cursor is then moved to the center points.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Circumference of the Circle.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  ellipse: {\n    category: 'basicShapes',\n    Component: 'Ellipse',\n    command: 'ellipse',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Ellipse is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the Ellipse.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the Ellipse.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  kite: {\n    category: 'basicShapes',\n    Component: 'Kite',\n    command: 'kite',\n    args: ['width', 'height', 'dh', 'cx', 'cy', 'centerEnd'],\n    description:\n      '.kite is drawn from center point (cx & cy). dh = position of the left & right points from the top of the shape. The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the Kite.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the Kite.'\n      },\n      dh: {\n        ...commonNumber,\n        description:\n          'Vertical position of the left and right points from the top.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  lens: {\n    category: 'basicShapes',\n    Component: 'Lens',\n    command: 'lens',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Lens is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the Lens.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the Lens.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  omino: {\n    category: 'basicShapes',\n    Component: 'Omino',\n    command: 'omino',\n    args: ['size', 'shape', 'sx', 'sy', 'lined'],\n    description:\n      'Omino is drawn based on the positive values positioned in an 2d array. Think Tetris pieces.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Size of the squares.'\n      },\n      shape: {\n        type: '2d-array',\n        isRequired: true,\n        validator: nestedArrayValidator,\n        description: '2d array of the shape.'\n      },\n      sx: {\n        ...commonNumber,\n        description: 'Starting x coordinate for left.'\n      },\n      sy: {\n        ...commonNumber,\n        description: 'Starting y coordinate for top.'\n      },\n      lined: {\n        default: false,\n        type: 'boolean',\n        isRequired: false,\n        description: 'Draw inner lines or not.'\n      }\n    },\n    shorthands: [shorthands.sxy],\n    nestingProps: ({ sx, sy }) => {\n      return { ex: sx, ey: sy, sx, sy };\n    }\n  },\n  polygon: {\n    category: 'basicShapes',\n    Component: 'Polygon',\n    command: 'polygon',\n    args: ['points'],\n    description:\n      'Polygon accepts an array of [x, y] coordinates and then draws lines connecting those points.  The path will start from the first point and end on the first point - closing the shape.',\n    props: {\n      points: {\n        type: 'point-array',\n        pointsLength: 2,\n        isRequired: true,\n        validator: pointArrayValidator,\n        description: 'x, y, points of the polygon.'\n      }\n    },\n    nestingProps: ({ points }) => {\n      const [sx, sy] = points[0];\n      const [ex, ey] = points[points.length - 1];\n      return { ex: sx, ey: sy, sx: ex, sy: ey };\n    }\n  },\n  polygram: {\n    category: 'basicShapes',\n    Component: 'Polygram',\n    command: 'polygram',\n    args: ['size', 'points', 'cx', 'cy', 'vertexSkip', 'centerEnd'],\n    description:\n      'Polygram is drawn from center point (cx & cy). The first outer point of the shape will always be at top center. The cursor is then moved to the center point.  Skipping a vertex is what makes a polygram appear as intersecting lines, a vertexSkip of 1 will result in a regular polygon.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Size of the underlying polygon.'\n      },\n      points: {\n        ...commonNumber,\n        description: 'Number of points to create.'\n      },\n      cx,\n      cy,\n      vertexSkip: {\n        ...commonNumber,\n        isRequired: false,\n        default: 2,\n        description:\n          'Integer representing which vertex to go to next relative to current.'\n      },\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  polyline: {\n    category: 'basicShapes',\n    Component: 'Polyline',\n    command: 'polyline',\n    args: ['points', 'relative'],\n    description:\n      'Polyline accepts an array of [x, y] coordinates and then draws lines connecting those points.  The path will start from the first point and end on the last.  points can be absolute or relative.',\n    props: {\n      points: {\n        type: 'point-array',\n        pointsLength: 2,\n        isRequired: true,\n        validator: pointArrayValidator,\n        description: 'x, y, points of the Polyline.'\n      },\n      relative: {\n        type: 'boolean',\n        isRequired: false,\n        default: false,\n        description: 'If set to true all points will be relative.'\n      }\n    },\n    nestingProps: ({ points }) => {\n      const [sx, sy] = points[0];\n      const [ex, ey] = points[points.length - 1];\n      return { ex: sx, ey: sy, sx: ex, sy: ey };\n    }\n  },\n  line: {\n    category: 'basicShapes',\n    Component: 'Line',\n    command: 'lineTo',\n    args: ['ex', 'ey', 'relative'],\n    preCommand: 'moveTo',\n    preArgs: ['sx', 'sy'],\n    description:\n      'Line is drawn from starting points (sx & sy) to ending points (ex & ey). sx (starting x) & sy (starting y) will always be absolutely positioned, however with relative=true the ex and ey points can relative to sx & sy.',\n    props: {\n      sx: {\n        ...commonNumber,\n        description: 'Starting x coordinate for the Line.'\n      },\n      sy: {\n        ...commonNumber,\n        description: 'Starting y coordinate for the Line.'\n      },\n      ex: {\n        ...commonNumber,\n        description: 'Ending x coordinate for the Line.'\n      },\n      ey: {\n        ...commonNumber,\n        description: 'Ending y coordinate for the Line.'\n      },\n      relative: {\n        type: 'boolean',\n        default: false,\n        isRequired: true,\n        description: 'If set to true ex & ey will become relative to sx & sy.'\n      }\n    },\n    nestingProps: ({ sx, sy, ex, ey }) => {\n      return { ex: sx, ey: sy, sx: ex, sy: ey };\n    },\n    shorthands: [shorthands.exy, shorthands.sxy]\n  },\n  radialLines: {\n    category: 'basicShapes',\n    Component: 'RadialLines',\n    command: 'radialLines',\n    args: ['outerSize', 'innerSize', 'points', 'cx', 'cy', 'centerEnd'],\n    description:\n      'RadialLines is drawn from center point (cx & cy). The first outer point of the shape will always be at top center. The cursor is then moved to the center point.',\n    props: {\n      outerSize: {\n        ...commonNumber,\n        description: 'Circumference of the outer circle.'\n      },\n      innerSize: {\n        ...commonNumber,\n        description: 'Circumference of the inner circle.'\n      },\n      points: {\n        ...commonNumber,\n        description: 'Number of lines to draw.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  rect: {\n    category: 'basicShapes',\n    Component: 'Rect',\n    command: 'rect',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Rect is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the Rect.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the Rect.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  roundedRect: {\n    category: 'basicShapes',\n    Component: 'RoundedRect',\n    command: 'roundedRect',\n    args: ['width', 'height', 'radius', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Rect is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the Rect.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the Rect.'\n      },\n      radius: {\n        ...commonNumber,\n        description: 'Radius for the corners.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  regPolygon: {\n    category: 'basicShapes',\n    Component: 'RegPolygon',\n    command: 'regPolygon',\n    args: ['size', 'sides', 'cx', 'cy', 'centerEnd'],\n    description:\n      'RegPolygon is drawn from center point (cx & cy). The first outer point of the shape will always be at top center. The cursor is then moved to the center point.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Size of the RegPolygon.'\n      },\n      sides: {\n        ...commonNumber,\n        description: 'Number of sides of the RegPolygon.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  sector: {\n    category: 'basicShapes',\n    Component: 'Sector',\n    command: 'sector',\n    args: ['cx', 'cy', 'size', 'startAngle', 'endAngle', 'centerEnd'],\n    description:\n      'Sector is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      cx,\n      cy,\n      size: {\n        ...commonNumber,\n        description: 'Circumference of the Sector.'\n      },\n      startAngle: {\n        ...commonNumber,\n        description: 'Start angle of the Sector.  0 = top center.'\n      },\n      endAngle: {\n        ...commonNumber,\n        description: 'End angle of the Sector.  0 = top center.'\n      },\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  segment: {\n    category: 'basicShapes',\n    Component: 'Segment',\n    command: 'segment',\n    args: ['cx', 'cy', 'size', 'startAngle', 'endAngle', 'centerEnd'],\n    description:\n      'Segment is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      cx,\n      cy,\n      size: {\n        ...commonNumber,\n        description: 'Circumference of the Segment.'\n      },\n      startAngle: {\n        ...commonNumber,\n        description: 'Start angle of the Segment.  0 = top center.'\n      },\n      endAngle: {\n        ...commonNumber,\n        description: 'End angle of the Segment.  0 = top center.'\n      },\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  square: {\n    category: 'basicShapes',\n    Component: 'Square',\n    command: 'square',\n    args: ['size', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Square is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Width &  height of the Square.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  roundedSquare: {\n    category: 'basicShapes',\n    Component: 'RoundedSquare',\n    command: 'roundedSquare',\n    args: ['size', 'radius', 'cx', 'cy', 'centerEnd'],\n    description:\n      'RoundedSquare is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Width &  height of the Square.'\n      },\n      radius: {\n        ...commonNumber,\n        description: 'Radius for the corners.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  star: {\n    category: 'basicShapes',\n    Component: 'Star',\n    command: 'star',\n    args: ['outerSize', 'innerSize', 'points', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Star is drawn from center point (cx & cy). The first outer point of the shape will always be at top center. The cursor is then moved to the center point.',\n    props: {\n      outerSize: {\n        ...commonNumber,\n        description: 'The outer circumference where points will reach.'\n      },\n      innerSize: {\n        ...commonNumber,\n        description: 'The inner circumference where points will end.'\n      },\n      points: {\n        ...commonNumber,\n        description: 'Number of points for the Star.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  triangle: {\n    category: 'basicShapes',\n    Component: 'Triangle',\n    command: 'triangle',\n    args: ['size', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Triangle draws an equilateral triangle from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Size of the Tirangle.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  symX: {\n    category: 'basicShapes',\n    Component: 'SymX',\n    command: 'symX',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'SymX draws an X shape from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the X.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the X.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  symI: {\n    category: 'basicShapes',\n    Component: 'SymI',\n    command: 'symI',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'SymI draws an I shape from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the I.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the I.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  symH: {\n    category: 'basicShapes',\n    Component: 'SymH',\n    command: 'symH',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'SymH draws an H shape from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the H.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the H.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  cross: {\n    category: 'basicShapes',\n    Component: 'Cross',\n    command: 'cross',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Cross draws an \"cross\" shape from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the Cross.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the Cross.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  arc: {\n    category: 'curves',\n    Component: 'Arc',\n    command: 'arc',\n    args: ['rx', 'ry', 'rotation', 'arc', 'sweep', 'ex', 'ey', 'relative'],\n    preCommand: 'moveTo',\n    preArgs: ['sx', 'sy'],\n    description: 'An Arc segment draws a segment of an ellipse.',\n    props: {\n      sx: {\n        ...commonNumber,\n        description: 'Starting x coordinate for the Arc.'\n      },\n      sy: {\n        ...commonNumber,\n        description: 'Starting y coordinate for the Arc.'\n      },\n      rx: {\n        ...commonNumber,\n        description: 'Width of the underlying ellipse of the Arc.'\n      },\n      ry: {\n        ...commonNumber,\n        description: 'Height of the underlying ellipse of the Arc.'\n      },\n      rotation: {\n        type: 'number',\n        validator: commonNumberValidator,\n        default: 0,\n        isRequired: false,\n        description: 'Rotation of the underlying ellipse of the Arc.'\n      },\n      arc: {\n        type: 'number',\n        validator: commonNumberValidator,\n        default: 0,\n        isRequired: false,\n        description:\n          'Large arc flag: this says whether to follow the larger or smaller part of the underlying ellipse.'\n      },\n      sweep: {\n        type: 'number',\n        validator: commonNumberValidator,\n        default: 0,\n        isRequired: false,\n        description:\n          'Sweep flag: think of this as direction flag, follow a clockwise or counterclockwise path along the underlying ellipse.'\n      },\n      ex: {\n        ...commonNumber,\n        description: 'Ending x coordinate for the Arc.'\n      },\n      ey: {\n        ...commonNumber,\n        description: 'Ending y coordinate for the Arc.'\n      },\n      relative: {\n        type: 'boolean',\n        default: false,\n        isRequired: false,\n        description:\n          'If set to true all points after sx & sy will become relative to sx & sy.'\n      }\n    },\n    nestingProps: ({ sx, sy, ex, ey }) => {\n      return { ex: sx, ey: sy, sx: ex, sy: ey };\n    },\n    shorthands: [shorthands.exy, shorthands.sxy, shorthands.rxy]\n  },\n  cubic: {\n    category: 'curves',\n    Component: 'Cubic',\n    command: 'cCurve',\n    args: ['cx1', 'cy1', 'cx2', 'cy2', 'ex', 'ey'],\n    preCommand: 'moveTo',\n    preArgs: ['sx', 'sy'],\n    postCommand: 's',\n    description:\n      'Cubic is drawn from an sx and sy to an ex and ey with two control points (cx1+cy1 & cx2+cy2).',\n    props: {\n      sx: {\n        ...commonNumber,\n        description: 'Starting x coordinate for the Cubic.'\n      },\n      sy: {\n        ...commonNumber,\n        description: 'Starting y coordinate for the Cubic.'\n      },\n      cx1: {\n        ...commonNumber,\n        description: 'x coordinate for control point 1.'\n      },\n      cy1: {\n        ...commonNumber,\n        description: 'y coordinate for control point 1.'\n      },\n      cx2: {\n        ...commonNumber,\n        description: 'x coordinate for control point 2.'\n      },\n      cy2: {\n        ...commonNumber,\n        description: 'y coordinate for control point 2.'\n      },\n      ex: {\n        ...commonNumber,\n        description: 'Ending x coordinate for the Cubic.'\n      },\n      ey: {\n        ...commonNumber,\n        description: 'Ending y coordinate for the Cubic.'\n      },\n      S: {\n        type: 'point-array',\n        pointsLength: 4,\n        validator: pointArrayValidator,\n        isRequired: false,\n        description:\n          'Optionally String together multiple Cubic wit an array consisting of 2 or more control points.'\n      },\n      s: {\n        type: 'point-array',\n        pointsLength: 4,\n        validator: pointArrayValidator,\n        isRequired: false,\n        description:\n          'Optional relative \"smoooth curve\" array consisting of 2 or more control points.'\n      },\n      relative: {\n        type: 'boolean',\n        default: false,\n        isRequired: false,\n        description:\n          'If set to true all points after sx & sy will become relative to sx & sy.'\n      }\n    },\n    nestingProps: ({ sx, sy, ex, ey, S }) => {\n      let endX = ex;\n      let endY = ey;\n      if (S && S.length) {\n        endX = S[S.length - 1][0];\n        endY = S[S.length - 1][1];\n      }\n      return { ex: sx, ey: sy, sx: endX, sy: endY };\n    },\n    shorthands: [shorthands.exy, shorthands.sxy]\n  },\n  quad: {\n    category: 'curves',\n    Component: 'Quad',\n    command: 'qCurve',\n    args: ['cx', 'cy', 'ex', 'ey'],\n    preCommand: 'moveTo',\n    preArgs: ['sx', 'sy'],\n    postCommand: 't',\n    description:\n      'Quad is drawn from an sx and sy to an ex and ey with one control points (cx & cy).',\n    props: {\n      sx: {\n        ...commonNumber,\n        description: 'Starting x coordinate for the Quad.'\n      },\n      sy: {\n        ...commonNumber,\n        description: 'Starting y coordinate for the Quad.'\n      },\n      cx: {\n        ...commonNumber,\n        description: 'x coordinate for the control point.'\n      },\n      cy: {\n        ...commonNumber,\n        description: 'y coordinate for the control point.'\n      },\n      ex: {\n        ...commonNumber,\n        description: 'Ending x coordinate for the Quad.'\n      },\n      ey: {\n        ...commonNumber,\n        description: 'Ending y coordinate for the Quad.'\n      },\n      T: {\n        type: 'point-array',\n        pointsLength: 2,\n        validator: pointArrayValidator,\n        isRequired: false,\n        description: 'String together multiple Quad curves.'\n      },\n      t: {\n        type: 'point-array',\n        pointsLength: 2,\n        validator: pointArrayValidator,\n        isRequired: false,\n        description:\n          'String together multiple Quad curves where coordinates are relative.'\n      },\n      relative: {\n        type: 'boolean',\n        default: false,\n        isRequired: false,\n        description:\n          'If set to true all points after sx & sy will become relative to sx & sy.'\n      }\n    },\n    nestingProps: ({ sx, sy, ex, ey, T }) => {\n      let endX = ex;\n      let endY = ey;\n      if (T && T.length) {\n        endX = T[T.length - 1][0];\n        endY = T[T.length - 1][1];\n      }\n      return { ex: sx, ey: sy, sx: endX, sy: endY };\n    },\n    shorthands: [shorthands.exy, shorthands.sxy, shorthands.cxy]\n  }\n};\n\nconst buildBasicShapes = () =>\n  Object.keys(docs)\n    .filter((k) => docs[k].category === 'basicShapes')\n    .reduce((accum, cur) => ({ ...accum, [cur]: docs[cur] }), {});\n\nconst buildCurves = () =>\n  Object.keys(docs)\n    .filter((k) => docs[k].category === 'curves')\n    .reduce((accum, cur) => ({ ...accum, [cur]: docs[cur] }), {});\n\nexport const basicShapes = buildBasicShapes();\nexport const curves = buildCurves();\n\nexport default docs;","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Cache from 'i18next-localstorage-cache';\nimport en from './en.json';\n\nconst capitalizeFirst = (str) =>\n  `${str.charAt(0).toUpperCase()}${str.slice(1)}`;\n\nconst capitalizeAll = (str) => {\n  if (!str) return;\n  return str\n    .split(' ')\n    .map((str) => capitalizeFirst(str))\n    .join(' ');\n};\n\ni18n\n  .use(Cache)\n  .use(LanguageDetector)\n  .init({\n    interpolation: {\n      escapeValue: false,\n      format: function (value, format) {\n        switch (format) {\n          case 'uppercase':\n            return value.toUpperCase();\n          case 'capitalize':\n            return capitalizeAll(value);\n          case 'lowercase':\n            return value.toLowerCase();\n          case 'sentence':\n            return capitalizeFirst(value);\n          default:\n            return value;\n        }\n      }\n    },\n    resources: { en },\n    fallbackLng: 'en',\n    react: {\n      useSuspense: false\n    }\n  });\n\nexport const setNamespace = (keys) => (value, options = {}) => {\n  return i18n.t(value, { ns: [...keys], ...options }) || value;\n};\n\nexport const translate = (path, options) => {\n  const [namespace, ...rest] = path.split('.');\n  const t = setNamespace([namespace]);\n  return t(rest.join('.'), options);\n};\n\nexport default i18n;\n","import React from \"react\";\nimport Path, { Svg, Group, RoundedSquare, Text } from \"react-svg-path\";\nimport Atom from \"./Atom\";\nimport Modal from \"./Modal\";\nimport data from \"./data.json\";\nimport \"./style.css\";\n\nconst elements = data.elements\n  .slice()\n  .map((e) => ({ ...e, xpos: e.xpos - 1, ypos: e.ypos - 1 }));\n\nconst grid = [];\nfor (let index = 0; index < 10; index++) {\n  grid.push(Array.from({ length: 17 }));\n}\nelements.forEach((e) => {\n  grid[e.ypos][e.xpos] = e;\n});\n\nconst cellSize = 95;\nconst cells = Path.positionByArray(cellSize, grid, 0, 0);\nconst margin = 40;\nconst w = 18 * cellSize;\nconst h = 10 * cellSize;\nconst modal = {\n  height: h - 100,\n  width: w / 2,\n};\n\nconst Table = () => {\n  const [open, setOpen] = React.useState(null);\n  return (\n    <Svg\n      width={w + margin}\n      height={h + margin}\n      scale\n      style={{ maxWidth: 850 }}\n    >\n      <Group transform={`translate(${margin / 2}, ${margin / 2})`}>\n        <Group>\n          {cells.map(({ cx, cy, size, value }, index) => (\n            <RoundedSquare\n              onClick={(e) => {\n                e.stopPropagation();\n                if (!open) {\n                  setOpen(value);\n                }\n              }}\n              radius={10}\n              className={`cell ${value.category.replace(/ /g, \"-\")}`}\n              cx={cx}\n              cy={cy}\n              key={value}\n              size={size * 0.95}\n            >\n              <Text dy={10} className=\"big middle\">\n                {value.symbol}\n              </Text>\n              <Text ox={-size / 2 + 10} oy={-size / 2 + 25} className=\"small\">\n                {value.number}\n              </Text>\n            </RoundedSquare>\n          ))}\n        </Group>\n      </Group>\n      {open ? (\n        <Modal\n          width={modal.width}\n          height={modal.height}\n          close={() => setOpen(null)}\n        >\n          <Text className=\"middle big\" oy={-350}>\n            {open.name} ({open.symbol})\n          </Text>\n          <Group transform=\"translate(0, 40)\">\n            <Atom circ={500} shells={open.shells} />\n            <Text\n              className=\"middle\"\n              style={{ fontSize: \"175%\" }}\n              transform=\"translate(0, 340)\"\n            >\n              Electron configuration of {open.name}\n            </Text>\n          </Group>\n        </Modal>\n      ) : null}\n    </Svg>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { basicShapes, curves } from '../docs/docs.mjs';\nimport { translate as t } from '../i18n/i18n';\nimport './Nav.css';\n\nexport const Nav = ({ overlay }) => {\n  return (\n    <div\n      className={`nav-area ui vertical menu ${overlay ? 'overlay' : ''}`}\n      style={{ paddingBottom: overlay ? 0 : 50 }}\n    >\n      <div className='item'>\n        <div className='menu'>\n          <NavLink exact className='item' to='/'>\n            {t('nav.introduction')}\n          </NavLink>\n          <NavLink exact className='item' to='/demos'>\n            Demos\n          </NavLink>\n        </div>\n      </div>\n      <div className='item'>\n        <div className='header'>{t('nav.usage')}</div>\n        <div className='menu'>\n          <NavLink className='item' to='/path'>\n            Path\n          </NavLink>\n          <NavLink className='item' to='/tocomponent'>\n            .toComponent()\n          </NavLink>\n        </div>\n      </div>\n      <div className='item'>\n        <div className='active  header'>{t('nav.shapes')}</div>\n        <div className='menu'>\n          {Object.keys(basicShapes)\n            .sort()\n            .map((c, index) => (\n              <NavLink\n                key={c}\n                className='item'\n                to={`/${basicShapes[c].Component.toLowerCase()}`}\n              >\n                {basicShapes[c].Component}\n              </NavLink>\n            ))}\n        </div>\n      </div>\n      <div className='item'>\n        <div className='active  header'>{t('nav.curves')}</div>\n        <div className='menu'>\n          {Object.keys(curves)\n            .sort()\n            .map((c, index) => (\n              <NavLink\n                key={c}\n                className='item'\n                to={`/${curves[c].Component.toLowerCase()}`}\n              >\n                {curves[c].Component}\n              </NavLink>\n            ))}\n        </div>\n      </div>\n      <div className='item'>\n        <div className=' header'>{t('nav.behaviors')}</div>\n        <div className='menu'>\n          <NavLink className='item' to='/nesting'>\n            {t('nav.nesting')}\n          </NavLink>\n          <NavLink className='item' to={`/centerend`}>\n            centerEnd\n          </NavLink>\n        </div>\n      </div>\n      <div className='item'>\n        <div className='active  header'>{t('nav.additionalComponents')}</div>\n        <div className='menu'>\n          <NavLink className='item' to={`/distance`}>\n            Distance\n          </NavLink>\n          <NavLink className='item' to={`/markers`}>\n            Markers\n          </NavLink>\n          <NavLink className='item' to='/pathmerge'>\n            PathMerge\n          </NavLink>\n          <NavLink className='item' to={`/svg`}>\n            Svg\n          </NavLink>\n          <NavLink className='item' to={`/textpath`}>\n            TextPath\n          </NavLink>\n        </div>\n      </div>\n      <blockquote style={{paddingTop: 80}} />\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { translate as t } from '../../i18n/i18n';\n\nexport const PointArray = ({ label, value, pointLength, onChange }) => {\n  const [points, setPoints] = useState(value || [[0, 0]]);\n  useEffect(() => {\n    onChange(label, points);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [points]);\n\n  return (\n    <div\n      className='flex flex-wrap items-center'\n      style={{\n        flexBasis: '100%',\n        width: '100%'\n      }}\n    >\n      {points.map((p, index) => {\n        const pointValues =\n          pointLength === 2 ? ['x', 'y'] : ['x2', 'y2', 'x', 'y'];\n        return (\n          <React.Fragment key={index}>\n            <div className='ui labeled input' style={{ width: '92%' }}>\n              <label htmlFor='amount' className='ui label'>\n                {label}-{index} {pointValues.join(', ')}\n              </label>\n              {Array.from({ length: pointLength }).map((_, i) => {\n                return (\n                  <input\n                    aria-label={pointValues[i]}\n                    key={`${index}-${i}`}\n                    style={{ width: `${60 / pointLength}%` }}\n                    type='number'\n                    value={p[i]}\n                    onChange={(e) =>\n                      setPoints((current) => {\n                        current[index][i] = +e.target.value;\n                        return [...current];\n                      })\n                    }\n                  />\n                );\n              })}\n            </div>\n            <button\n              key={`remove-${index}`}\n              disabled={points.length === 1}\n              onClick={() => {\n                if (points.length > 1) {\n                  setPoints((current) => {\n                    current.splice(index, 1);\n                    return [...current];\n                  });\n                }\n              }}\n              className='mini ui button negative'\n            >\n              X\n            </button>\n          </React.Fragment>\n        );\n      })}\n      <div\n        style={{ width: '100%', padding: 10 }}\n        className='flex justify-center'\n      >\n        <button\n          onClick={() => {\n            setPoints((current) => {\n              current.push(Array.from({ length: pointLength }).fill(0));\n              return [...current];\n            });\n          }}\n          className='small ui button positive'\n        >\n          {t('common.addPoint')}\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nexport const TwoDArray = ({ label, value, pointLength, onChange }) => {\n  const [points, setPoints] = useState(value || [[0, 0]]);\n  useEffect(() => {\n    onChange(label, points);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [points]);\n\n  return (\n    <div\n      className='flex flex-wrap items-center'\n      style={{\n        flexBasis: '100%',\n        width: '100%'\n      }}\n    >\n      {points.map((p, index) => {\n        return (\n          <React.Fragment key={index}>\n            <div className='ui labeled input' style={{ width: '92%' }}>\n              <label htmlFor='amount' className='ui label'>\n                {`row ${index}`}\n              </label>\n\n              <input\n                aria-label={p}\n                key={index}\n                type='text'\n                value={p.join(',')}\n                onChange={(e) =>\n                  setPoints((current) => {\n                    current[index] = e.target.value.split(',').map(Number);\n                    return [...current];\n                  })\n                }\n              />\n            </div>\n            <button\n              key={`remove-${index}`}\n              disabled={points.length === 1}\n              onClick={() => {\n                if (points.length > 0) {\n                  setPoints((current) => {\n                    current.splice(index, 1);\n                    return [...current];\n                  });\n                }\n              }}\n              className='mini ui button negative'\n            >\n              X\n            </button>\n          </React.Fragment>\n        );\n      })}\n      <div\n        style={{ width: '100%', padding: 10 }}\n        className='flex justify-center'\n      >\n        <button\n          onClick={() => {\n            setPoints((current) => {\n              current.push(Array.from({ length: pointLength }).fill(0));\n              return [...current];\n            });\n          }}\n          className='small ui button positive'\n        >\n          Add Row\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { PointArray } from './PointArray';\nimport { TwoDArray } from './TwoDArray';\n\nexport const ComponentKnobs = ({\n  label,\n  type,\n  value,\n  onChange,\n  pointLength\n}) => {\n  if (type === 'number') {\n    return (\n      <div className='ui labeled input'>\n        <label htmlFor={label} className='ui label'>\n          {label}\n        </label>\n        <input\n          id={label}\n          inputMode='numeric'\n          type='number'\n          value={value}\n          onChange={(e) => onChange(label, +e.target.value)}\n        />\n      </div>\n    );\n  }\n  if (type === 'point-array') {\n    return (\n      <PointArray\n        value={value}\n        inputMode='numeric'\n        pointLength={pointLength}\n        onChange={onChange}\n        label={label}\n      />\n    );\n  }\n  if (type === '2d-array') {\n    return (\n      <TwoDArray\n        value={value}\n        inputMode='numeric'\n        pointLength={pointLength}\n        onChange={onChange}\n        label={label}\n      />\n    );\n  }\n  if (type === 'boolean') {\n    return (\n      <div\n        className='flex flex-wrap items-center'\n        style={{\n          flexBasis: '100%',\n          width: '100%',\n          padding: '10px'\n        }}\n      >\n        <div className='field'>\n          <div className='ui checkbox'>\n            <input\n              id={label}\n              type='checkbox'\n              tabIndex='0'\n              checked={value}\n              onChange={(e) => onChange(label, e.target.checked)}\n            />\n            <label htmlFor={label}>{label}</label>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return null;\n};\n","import React from 'react';\nconst pathAttributes = {\n  stroke: {\n    type: 'color',\n    default: '#0e98dd'\n  },\n  fill: {\n    type: 'color',\n    default: '#ffffff'\n  },\n  strokeWidth: {\n    type: 'number',\n    default: 1,\n    step: 0.5\n  },\n  strokeMiterlimit: {\n    type: 'number',\n    default: 4\n  },\n  strokeLinecap: {\n    type: 'select',\n    default: 'butt',\n    options: [\n      { label: 'butt', value: 'butt' },\n      { label: 'round', value: 'round' },\n      { label: 'square', value: 'square' }\n    ]\n  },\n  strokeDashoffset: {\n    type: 'number',\n    default: 0\n  },\n  strokeDasharray: {\n    type: 'string',\n    default: 0,\n    pattern: /^(\\s*[0-9]+\\s*)+/\n  },\n  strokeLinejoin: {\n    default: 'miter',\n    options: [\n      { label: 'arcs', value: 'arcs' },\n      { label: 'bevel', value: 'bevel' },\n      { label: 'miter', value: 'miter' },\n      { label: 'miter-clip', value: 'miter-clip' },\n      { label: 'round', value: 'round' }\n    ]\n  },\n  strokeOpacity: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    default: 1,\n    step: 0.1\n  },\n  fillOpacity: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    default: 1,\n    step: 0.1\n  }\n};\n\nexport const PathKnobs = ({ onChange, initData }) => {\n  return (\n    <form>\n      {Object.keys(pathAttributes).map((k, index) => {\n        // eslint-disable-next-line default-case\n        switch (pathAttributes[k].type) {\n          case 'number':\n            return (\n              <div key={index} className='ui labeled input'>\n                <label htmlFor={k} className='ui label'>\n                  {k}\n                </label>\n                <input\n                  id={k}\n                  type='number'\n                  inputMode=\"numeric\"\n                  max={pathAttributes[k].max || null}\n                  min={pathAttributes[k].min || null}\n                  step={pathAttributes[k].step || null}\n                  value={initData?.[k] ?? pathAttributes[k].default}\n                  onChange={(e) => onChange(+e.target.value, k)}\n                />\n              </div>\n            );\n          case 'select':\n            return (\n              <div key={index} className='ui labeled input'>\n                <label htmlFor={k} className='ui label'>\n                  {k}\n                </label>\n                <select\n                  className='ui fluid dropdown'\n                  id={k}\n                  value={initData?.[k] ?? pathAttributes[k].default}\n                  onChange={(e) => onChange(e.target.value, k)}\n                >\n                  {pathAttributes[k].options.map((opt, index) => (\n                    <option key={opt.value} value={opt.value}>\n                      {opt.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            );\n          case 'string':\n            return (\n              <div key={index} className='ui labeled input'>\n                <label htmlFor={k} className='ui label'>\n                  {k}\n                </label>\n                <input\n                  id={k}\n                  type='text'\n                  pattern={pathAttributes[k].pattern}\n                  value={initData?.[k] ?? pathAttributes[k].default}\n                  onChange={(e) => onChange(e.target.value, k)}\n                />\n              </div>\n            );\n          case 'color':\n            return (\n              <div key={index} className='ui labeled input'>\n                <label htmlFor={k} className='ui label'>\n                  {k}\n                </label>\n                <input\n                  id={k}\n                  style={{\n                    paddingLeft: 0,\n                    paddingTop: 0,\n                    paddingBottom: 0,\n                    width: '150px',\n                    height: 35\n                  }}\n                  value={initData?.[k] ?? pathAttributes[k].default}\n                  type='color'\n                  onChange={(e) => onChange(e.target.value, k)}\n                />\n              </div>\n            );\n          default:\n            return null;\n        }\n      })}\n    </form>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./Tabs.css\";\n\nexport const Tabs = props => {\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const activeTab = props.children[activeTabIndex];\n  return (\n    <div>\n      <div className=\"tabs\">\n        {props.children.map((tab, i) => (\n          <button\n            className=\"tab-btn\"\n            onClick={() => {\n              setActiveTabIndex(i);\n            }}\n            key={i}\n          >\n            {tab.props.title}\n          </button>\n        ))}\n      </div>\n      <div className=\"tab-indicator-container\">\n        <div\n          className=\"tab-indicator\"\n          style={{\n            width: 100 / props.children.length + \"%\",\n            transform: `translateX(${activeTabIndex * 100}%)`\n          }}\n        />\n      </div>\n      <div className=\"tab-content\">{activeTab.props.children}</div>\n    </div>\n  );\n};\n","const basicSvgDimensions = {\n  w: 800,\n  h: 150\n};\nconst curveSvgDimensions = {\n  w: 800,\n  h: 200\n};\nconst demos = {\n  basicShapes: {\n    circle: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 95,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    ellipse: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 150,\n        height: 75,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    kite: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 60,\n        height: 75,\n        dh: 25,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    lens: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 150,\n        height: 75,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    polygon: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        points: [\n          [10, 60],\n          [40, 0],\n          [70, 60],\n          [40, 120]\n        ]\n      }\n    ],\n    polygram: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 120,\n        points: 5,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2,\n        vertexSkip: 2\n      }\n    ],\n    polyline: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        points: [\n          [400, 60],\n          [430, 0],\n          [460, 60],\n          [430, 120]\n        ]\n      }\n    ],\n    line: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        sx: 10,\n        sy: 10,\n        ex: 50,\n        ey: 50\n      }\n    ],\n    radialLines: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        innerSize: 50,\n        outerSize: 120,\n        points: 8,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    rect: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 120,\n        height: 60,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    roundedRect: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 120,\n        height: 60,\n        radius: 20,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    regPolygon: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 100,\n        sides: 6,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    sector: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2,\n        size: 100,\n        startAngle: 0,\n        endAngle: 270\n      }\n    ],\n    segment: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2,\n        size: 100,\n        startAngle: 0,\n        endAngle: 270\n      }\n    ],\n    square: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 100,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    roundedSquare: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 100,\n        radius: 20,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    star: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        outerSize: 120,\n        innerSize: 40,\n        points: 5,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    triangle: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 95,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    cross: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 95,\n        height: 95,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    symX: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 95,\n        height: 95,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    symI: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 95,\n        height: 95,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    symH: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 95,\n        height: 95,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    omino: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 25,\n        shape: [[1], [1, 1], [1]],\n        sx: 10,\n        sy: 0,\n        lined: true\n      }\n    ]\n  },\n  curves: {\n    arc: [\n      {\n        svgDimensions: { ...curveSvgDimensions },\n        sx: 10,\n        sy: 40,\n        rx: 50,\n        ry: 85,\n        rotation: 0,\n        arc: 0,\n        sweep: 1,\n        ex: 70,\n        ey: 40\n      }\n    ],\n    cubic: [\n      {\n        svgDimensions: { ...curveSvgDimensions },\n        sx: 10,\n        sy: 90,\n        cx1: 30,\n        cy1: 90,\n        cx2: 25,\n        cy2: 10,\n        ex: 50,\n        ey: 10,\n        S: [[70, 90, 90, 90]]\n      }\n    ],\n    quad: [\n      {\n        svgDimensions: { ...curveSvgDimensions },\n        sx: 10,\n        sy: 50,\n        cx: 25,\n        cy: 25,\n        ex: 40,\n        ey: 50,\n        T: [\n          [70, 50],\n          [100, 50],\n          [130, 50],\n          [160, 50],\n          [190, 50],\n          [220, 50]\n        ]\n      }\n    ]\n  }\n};\n\nexport default demos;","import React, { useState } from 'react';\nimport * as Shapes from 'react-svg-path';\nimport { ComponentKnobs } from './ComponentKnobs';\nimport { PathKnobs } from './PathKnobs';\nimport { Tabs } from './Tabs';\nimport { basicShapes as docs } from '../../docs/docs.mjs';\nimport { translate as t } from '../../i18n/i18n';\nimport demoDocs from '../../docs/demos.mjs';\n\nimport './BasicShapeDemo.css';\n\nexport const BasicShapeDemo = ({ shape }) => {\n  const { Component, props, shorthands } = docs[shape];\n  const demos = demoDocs.basicShapes[shape];\n  const initialState = demos.map((d, i) => {\n    return Object.keys(d)\n      .filter((k) => k !== 'svgDimensions')\n      .reduce((accum, cur) => {\n        return { ...accum, [cur]: d[cur] };\n      }, {});\n  });\n\n  const [demoValues, setDemoValues] = useState(initialState);\n  const [pathAttributes, setPathAttributes] = useState({\n    stroke: '#0e98dd',\n    strokeWidth: 1,\n    fill: '#ffffff'\n  });\n  const C = Shapes[Component];\n  const Svg = Shapes.Svg;\n  return (\n    <>\n      <h1>{Component}</h1>\n      <code>{`import { ${Component} } from 'react-svg-path'`}</code>\n      <code>\n        {`\n        <${Component}\n  ${Object.keys(props)\n    .map((k) => `${k}={${props[k].type}}`)\n    .join('\\n  ')}\n/>\n      `.trim()}\n      </code>\n      {shorthands && (\n        <>\n          <p>This component has shorthand props available:</p>\n          <table className='ui table'>\n            <thead>\n              <tr>\n                <th>prop</th>\n                <th>description</th>\n              </tr>\n            </thead>\n            <tbody>\n              {shorthands.map((sh, shi) => {\n                return (\n                  <tr key={shi}>\n                    <td>{sh.k}</td>\n                    <td>{sh.description}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </>\n      )}\n      <p>{t(`${shape}.description`)}</p>\n      {demos &&\n        demos.map(({ svgDimensions, ...rest }, i) => {\n          return (\n            <span key={i}>\n              <Svg width={svgDimensions.w} height={svgDimensions.h} scale>\n                <C {...demoValues[i]} {...pathAttributes} />\n              </Svg>\n            </span>\n          );\n        })}\n      <div style={{ maxWidth: 800 }}>\n        <Tabs>\n          <div title={t('common.code')}>\n            <code>\n              {`\n        <${Component}\n  ${Object.keys(demoValues[0])\n    .map((k) => `${k}={${JSON.stringify(demoValues[0][k])}}`)\n    .join('\\n  ')}\n  ${Object.keys(pathAttributes)\n    .map((k) =>\n      typeof pathAttributes[k] === 'number'\n        ? `${k}={${JSON.stringify(pathAttributes[k])}}`\n        : `${k}=${JSON.stringify(pathAttributes[k])}`\n    )\n    .join('\\n  ')}\n/>\n      `.trim()}\n            </code>\n          </div>\n          <div title={t('common.props')}>\n            <div className='knobs'>\n              {Object.keys(demoValues[0]).map((k, index) => {\n                return (\n                  <ComponentKnobs\n                    key={k}\n                    label={k}\n                    value={demoValues[0][k]}\n                    type={props[k].type}\n                    pointLength={props[k].pointsLength}\n                    onChange={(k, v) => {\n                      setDemoValues((current) => {\n                        current[0][k] = v;\n                        return [...current];\n                      });\n                    }}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div title={t('common.attributes')}>\n            <div className='knobs'>\n              <PathKnobs\n                initData={pathAttributes}\n                onChange={(e, k) => {\n                  setPathAttributes((current) => {\n                    current[k] = e;\n                    return { ...current };\n                  });\n                }}\n              />\n            </div>\n          </div>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport * as Shapes from 'react-svg-path';\nimport docs from '../../docs/docs.mjs';\nimport demoDocs from '../../docs/demos.mjs';\nimport { ComponentKnobs } from './ComponentKnobs';\nimport { PathKnobs } from './PathKnobs';\nimport { Tabs } from './Tabs';\nimport { translate as t } from '../../i18n/i18n';\n\nexport const CurveDemo = ({ curve }) => {\n  const { Component, props, shorthands } = docs[curve];\n  const demos = JSON.parse(JSON.stringify(demoDocs.curves[curve]));\n  const initialState = demos.map((d, i) => {\n    return Object.keys(d)\n      .filter((k) => k !== 'svgDimensions')\n      .reduce((accum, cur) => {\n        return { ...accum, [cur]: d[cur] };\n      }, {});\n  });\n  const [demoValues, setDemoValues] = useState(initialState);\n  const [pathAttributes, setPathAttributes] = useState({\n    stroke: '#0e98dd',\n    strokeWidth: 1,\n    fill: '#ffffff'\n  });\n  const C = Shapes[Component];\n  const Svg = Shapes.Svg;\n  return (\n    <>\n      <h1>{Component}</h1>\n      <code>{`import { ${Component} } from 'react-svg-path'`}</code>\n      <code>\n        {`\n        <${Component}\n  ${Object.keys(props)\n    .map((k) => `${k}={${props[k].type}}`)\n    .join('\\n  ')}\n/>\n      `.trim()}\n      </code>\n      {shorthands && (\n        <>\n          <p>This component has shorthand props available:</p>\n          <table className='ui table'>\n            <thead>\n              <tr>\n                <th>prop</th>\n                <th>description</th>\n              </tr>\n            </thead>\n            <tbody>\n              {shorthands.map((sh, shi) => {\n                return (\n                  <tr key={shi}>\n                    <td>{sh.k}</td>\n                    <td>{sh.description}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </>\n      )}\n      <p>{t(`${curve}.description`)}</p>\n      {demos &&\n        demos.map(({ svgDimensions, ...rest }, i) => {\n          return (\n            <span key={i}>\n              <Svg width={svgDimensions.w} height={svgDimensions.h} scale>\n                <C {...demoValues[i]} {...pathAttributes} />\n              </Svg>\n            </span>\n          );\n        })}\n      <div style={{ maxWidth: 800 }}>\n        <Tabs>\n          <div title={t('common.code')}>\n            <code>\n              {`\n        <${Component}\n  ${Object.keys(demoValues[0])\n    .map((k) => `${k}={${JSON.stringify(demoValues[0][k])}}`)\n    .join('\\n  ')}\n  ${Object.keys(pathAttributes)\n    .map((k) =>\n      typeof pathAttributes[k] === 'number'\n        ? `${k}={${JSON.stringify(pathAttributes[k])}}`\n        : `${k}=${JSON.stringify(pathAttributes[k])}`\n    )\n    .join('\\n  ')}\n/>\n      `.trim()}\n            </code>\n          </div>\n          <div title={t('common.props')}>\n            <div className='knobs'>\n              {Object.keys(demoValues[0]).map((k, index) => {\n                return (\n                  <ComponentKnobs\n                    key={k}\n                    label={k}\n                    value={demoValues[0][k]}\n                    type={props[k].type}\n                    pointLength={props[k].pointsLength}\n                    onChange={(k, v) => {\n                      setDemoValues((current) => {\n                        current[0][k] = v;\n                        return [...current];\n                      });\n                    }}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div title={t('common.attributes')}>\n            <div className='knobs'>\n              <PathKnobs\n                initData={pathAttributes}\n                onChange={(e, k) => {\n                  setPathAttributes((current) => {\n                    current[k] = e;\n                    return { ...current };\n                  });\n                }}\n              />\n            </div>\n          </div>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Svg, RegPolygon, Circle, Square } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\n\nimport './NestingDemo1.css';\n\nconst NestingDemo1 = () => (\n  <>\n    <h2>{t('pages.nesting.example1')}</h2>\n    <p>{t('pages.nesting.centerPoints')}</p>\n    <Svg width={200} height={200} className='nesting-example-1' scale>\n      <RegPolygon size={120} sides={4} cx={100} cy={100}>\n        <Circle size={55} />\n        <Square size={60} />\n        <Circle size={25} cy={58} />\n      </RegPolygon>\n    </Svg>\n    <div>\n      <code>\n        {`\n<RegPolygon size={120} sides={4} cx={100} cy={100}>\n  <Circle size={55} /> // ${t('pages.nesting.noCxCy')}\n  <Square size={60} /> // ${t('pages.nesting.noCxCy')}\n  <Circle size={25} cy={58} /> // ${t('pages.nesting.cyOver')}\n</RegPolygon>\n`.trim()}\n      </code>\n    </div>\n  </>\n);\n\nexport default NestingDemo1;\n","import React from 'react';\nimport { Svg, Line, Circle, Text, Polyline, Square, Arc } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\n\nimport './NestingDemo2.css';\n\nconst genPolylineZag = (centerY) => {\n  const ypoints = Array.from({ length: 10 }).map((p, i) => {\n    return i % 2 === 0 ? centerY - 5 : centerY + 5;\n  });\n  const points = ypoints.map((y, i) => {\n    return [10 * i, y];\n  });\n  points.shift();\n  points.push([100, centerY]);\n  points.push([130, centerY]);\n\n  return points;\n};\n\nconst NestingDemo2 = () => (\n  <>\n    <h2>{t('pages.nesting.example2')}</h2>\n    <p>{t('pages.nesting.end')}</p>\n    <Svg width={200} height={200} className='nesting-example-2' scale>\n      <Line sx={10} sy={25} ex={130} ey={25} stroke='#ccc'>\n        <Circle size={15} fill='#ccc' />\n      </Line>\n      <Line sx={10} sy={50} ex={130} ey={50} stroke='red'>\n        <Square size={20} fill='red' />\n      </Line>\n      <Line sx={10} sy={75} ex={135} ey={75} stroke='green'>\n        <Line ex={125} ey={70} stroke='green' />\n        <Line ex={125} ey={80} stroke='green' />\n      </Line>\n      <Polyline points={genPolylineZag(100)} stroke='red' fill='none'>\n        <Text dx={2} dy={5}>\n          Polyline\n        </Text>\n      </Polyline>\n      <Line sx={10} sy={125} ex={130} ey={125} stroke='red'>\n        <Text dx={2} dy={5}>\n          Line\n        </Text>\n      </Line>\n\n      <Line sx={10} sy={150} ex={100} ey={150} stroke='red'>\n        <Arc rx={10} ry={10} ex={175} ey={150} fill='none' stroke='red'>\n          <Circle size={15} fill='red' />\n        </Arc>\n      </Line>\n    </Svg>\n    <div>\n      <code>\n        {`\n<Line sx={10} sy={25} ex={130} ey={25} stroke='#ccc'>\n  <Circle size={15} fill='#ccc' />\n</Line>\n<Line sx={10} sy={50} ex={130} ey={50} stroke='red'>\n  <Square size={20} fill='red' />\n</Line>\n<Line sx={10} sy={75} ex={135} ey={75} stroke='green'>\n  <Line ex={125} ey={70} stroke='green' />\n  <Line ex={125} ey={80} stroke='green' />\n</Line>\n<Polyline points={genPolylineZag(100)} stroke='red' fill='none'>\n  <Text dx={2} dy={5}>\n    Polyline\n  </Text>\n</Polyline>\n<Line sx={10} sy={125} ex={130} ey={125} stroke='red'>\n  <Text dx={2} dy={5}>\n    Line\n  </Text>\n</Line>\n<Line sx={10} sy={150} ex={100} ey={150} stroke='red'>\n  <Arc rx={10} ry={10} ex={175} ey={150} fill='none' stroke='red'>\n    <Circle size={15} fill='red' />\n  </Arc>\n</Line>`.trim()}\n      </code>\n    </div>\n    <p>{t('pages.nesting.start')}</p>\n    <Svg width={200} height={45} className='nesting-example-2'>\n      <Line sx={10} sy={25} ex={130} ey={25} stroke='#ccc'>\n        <Circle size={15} fill='#ccc' attach='start' />\n      </Line>\n    </Svg>\n    <div>\n      <code>\n        {`\n<Line sx={10} sy={25} ex={130} ey={25} stroke='#ccc'>\n <Circle size={15} fill='#ccc' attach='start' />\n</Line>`.trim()}\n      </code>\n    </div>\n    <p>{t('pages.nesting.mix')}</p>\n    <Svg width={200} height={45} className='nesting-example-2'>\n      <Polyline points={genPolylineZag(25)} stroke='red' fill='none'>\n        <Text dx={4} dy={5}>\n          Polyline\n        </Text>\n        <Circle size={10} fill='red' attach='start' />\n      </Polyline>\n    </Svg>\n    <div>\n      <code>\n        {`\n<Polyline points={genPolylineZag(25)} stroke='red' fill='none'>\n  <Text dx={4} dy={5}>\n    Polyline\n  </Text>\n  <Circle size={10} fill='red' attach='start' />\n</Polyline>`.trim()}\n      </code>\n    </div>\n  </>\n);\n\nexport default NestingDemo2;\n","import React from 'react';\nimport { Svg, Circle, Line } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\n\nimport './NestingDemo3.css';\n\nconst NestingDemo3 = () => (\n  <>\n    <h2>{t('pages.nesting.example3')}</h2>\n    <p dangerouslySetInnerHTML={{ __html: t('pages.nesting.oxOy') }} />\n    <Svg width={500} height={150} className='nesting-example-3' scale>\n      <Circle size={0} cx={75} cy={75}>\n        <Circle size={60} oy={-20} />\n        <Circle size={60} oy={10} ox={-20} />\n        <Circle size={60} oy={10} ox={20} />\n      </Circle>\n      <Line sx={200} sy={75} ex={400} ey={75}>\n        <Circle size={20} ox={-100} />\n      </Line>\n    </Svg>\n    <div>\n      <code>\n        {`\n<Circle size={0} cx={75} cy={75}>       // ${t('pages.nesting.zeroCircle')}\n  <Circle size={60} oy={-20} />         // ${t('pages.nesting.offsetY')}\n  <Circle size={60} oy={10} ox={-20} /> // y+10, x-20\n  <Circle size={60} oy={10} ox={20} />  // y+10, x+20\n</Circle>\n\n<Line sx={200} sy={75} ex={400} ey={75}>\n  <Circle size={20} ox={-100} /> // ${t('pages.nesting.offsetX')}\n</Line>`.trim()}\n      </code>\n    </div>\n  </>\n);\n\nexport default NestingDemo3;\n","import React from 'react';\nimport NestingDemo1 from './NestingDemo1';\nimport NestingDemo2 from './NestingDemo2';\nimport NestingDemo3 from './NestingDemo3';\nimport { translate as t } from '../../../i18n/i18n';\nexport const Nesting = () => {\n  return (\n    <>\n      <h1>{t('pages.nesting.title')}</h1>\n      <div className='complex'>\n        <p>{t('pages.nesting.intro')}</p>\n        <NestingDemo1 />\n        <NestingDemo2 />\n        <NestingDemo3 />\n      </div>\n    </>\n  );\n};\n","import ELK from \"elkjs/lib/elk.bundled\";\n\nconst setupDag = async (dir = \"DOWN\", algo = \"layered\") => {\n  const elk = new ELK();\n  const elkNodes = [];\n  const elkLinks = [];\n  const items = \"abcdefghjklmopqrstuvwxyz\".split(\"\");\n  items.forEach((item) => {\n    elkNodes.push({ id: item, width: 35, height: 24 });\n  });\n  items.forEach((item, index, arr) => {\n    if (index === 0) {\n      return;\n    }\n    \n    if (index < 5) {\n      elkLinks.push({ id: index, source: \"a\", target: item });\n    } else if (index < 10) {\n      elkLinks.push({ id: index, source: \"b\", target: item });\n    } else if (index < 15) {\n      elkLinks.push({ id: index, source: \"c\", target: item });\n    } else if (index < 20) {\n      elkLinks.push({ id: index, source: \"d\", target: item });\n    } else {\n      elkLinks.push({ id: index, source: \"e\", target: item });\n    }\n  });\n\n  const elkGraph = {\n    id: \"root\",\n    layoutOptions: {\n      \"elk.algorithm\": algo,\n      separateConnectedComponents: true,\n      \"elk.direction\": dir,\n      \"spacing.nodeNode\": 35,\n      'elk.stress.desiredEdgeLength': 100.0,\n      'elk.stress.dimension': 'X',\n      'elk.layered.spacing.edgeNodeBetweenLayers': 80,\n      'elk.layered.highDegreeNodes.treeHeight': 100,\n    },\n    children: elkNodes,\n    edges: elkLinks,\n  };\n\n  return await elk.layout(elkGraph);\n};\n\nexport default setupDag;\n","import React, { useState } from \"react\";\nimport Path, { Circle, Square, Svg, Text } from \"react-svg-path\";\nimport dagSetup from \"./dagSetup\";\nimport \"./dag.css\";\n\nconst algorithms = [\"layered\", \"mrtree\"];\n\nconst DagNodes = () => {\n  const [loading, setLoading] = React.useState(true);\n  const [data, setData] = React.useState(true);\n  const [algo, setAlgo] = useState(algorithms[0]);\n\n  React.useEffect(() => {\n    createDag();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [algo]);\n\n  const onChangeAlgo = (e) => {\n    setAlgo(e.target.value);\n  };\n\n  const createDag = () => {\n    dagSetup(\"DOWN\", algo)\n      .then(setData)\n      .catch()\n      .finally(() => setLoading(false));\n  };\n\n  const createConnectors = () => {\n    const { edges } = data;\n    const p = new Path();\n    edges.forEach(({ sections }) => {\n      if (sections) {\n        p.M(sections[0].startPoint.x, sections[0].startPoint.y);\n        if (sections[0].bendPoints) {\n          sections[0].bendPoints.forEach((b) => {\n            p.L(b.x, b.y);\n          });\n        }\n        p.L(sections[0].endPoint.x, sections[0].endPoint.y);\n      }\n    });\n\n    return p.toString();\n  };\n\n  if (loading) {\n    return <p>loading...</p>;\n  } else {\n    const squareNodes = data.children\n      .slice(0, 5)\n      .map((s) => ({ ...s, x: s.x + 15, y: s.y + 15 }));\n    const circleNodes = data.children\n      .slice(5)\n      .map((s) => ({ ...s, x: s.x + 15, y: s.y + 15 }));\n    return (\n      <div>\n        <div className=\"ui form\">\n          <div className=\"inline fields\">\n            {algorithms.map((a) => {\n              return (\n                <div key={a} className=\"field\">\n                  <div className=\"ui radio checkbox\">\n                    <input\n                      id={a}\n                      type=\"radio\"\n                      name=\"algo\"\n                      value={a}\n                      checked={algo === a}\n                      tabIndex=\"0\"\n                      className=\"hidden\"\n                      onChange={onChangeAlgo}\n                    />\n                    <label htmlFor={a}>{a}</label>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        <Svg\n          width={data.width}\n          height={data.height}\n          scale\n          style={{ maxWidth: 850 }}\n        >\n          <path stroke=\"#222\" strokeWidth={1.5} d={createConnectors()} />\n          {squareNodes.map(({ x, y, width }, index) => {\n            return (\n              <Square\n                className=\"node square\"\n                key={index}\n                cx={x}\n                cy={y}\n                size={width}\n                onClick={() => alert(`clicked node #${index}`)}\n              >\n                <Text\n                  oy={2}\n                  dominantBaseline=\"middle\"\n                  textAnchor=\"middle\"\n                  fill=\"#fff\"\n                >\n                  {index}\n                </Text>\n              </Square>\n            );\n          })}\n          {circleNodes.map(({ x, y, width }, index) => {\n            return (\n              <Circle\n                key={index}\n                cx={x}\n                cy={y}\n                size={width * 1.1}\n                sides={5}\n                className=\"node circle\"\n                onClick={() => alert(`clicked node #${index + 5}`)}\n              >\n                <Text\n                  oy={2}\n                  dominantBaseline=\"middle\"\n                  textAnchor=\"middle\"\n                  fill=\"#fff\"\n                >\n                  {index + 5}\n                </Text>\n              </Circle>\n            );\n          })}\n        </Svg>\n      </div>\n    );\n  }\n};\n\nexport default DagNodes;\n","import React from 'react';\nimport { Sector } from 'react-svg-path';\n\nconst Pie = ({ size, cx, cy, data }) => {\n  const percentToDegree = (p) => (p / 100) * 360;\n  const sectors = [];\n  let total = 0;\n  data.forEach((d, i) => {\n    const startAngle = percentToDegree(total);\n    const endAngle = percentToDegree(total + d.percent);\n    sectors.push(\n      <Sector\n        endAngle={endAngle}\n        startAngle={startAngle}\n        cx={cx}\n        cy={cy}\n        size={size}\n        key={i}\n        fill={d.color} />\n    );\n    total = total + d.percent;\n  });\n\n  return (\n      <g>{sectors}</g>\n  );\n};\n\nexport default Pie;\n","import React from 'react';\nimport { Segment } from 'react-svg-path';\n\nconst Donut = ({ size, width, cx, cy, data, ...rest }) => {\n  const percentToDegree = (p) => (p / 100) * 360;\n  const segments = [];\n  let total = 0;\n  data.forEach((d, i) => {\n    const startAngle = percentToDegree(total);\n    const endAngle = percentToDegree(total + d.percent);\n    segments.push(\n      <Segment\n        cx={cx}\n        cy={cy}\n        size={size - width}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        key={i}\n        strokeWidth={width}\n        stroke={d.color}\n        fill='none'\n       />\n    );\n    total = total + d.percent;\n  });\n\n  return <g>{segments}</g>;\n};\n\nexport default Donut;\n","import React from 'react';\nimport { Svg, Polyline, Line, PathMerge, Rect } from 'react-svg-path';\nimport './Sparkline.css';\nconst scale = function (opts) {\n  const dataStart = opts.domain[0],\n    dataStop = opts.domain[1],\n    chartStart = opts.range[0],\n    chartStop = opts.range[1];\n\n  return (value) =>\n    chartStart +\n    (chartStop - chartStart) * ((value - dataStart) / (dataStop - dataStart));\n};\n\nconst Grid = ({ x, y, width, height, cols, rows, close = false }) => {\n  const extra = close ? 1 : 0;\n  const colWidth = width / cols;\n  const rowHeight = height / rows;\n  const horizontal = Array.from({ length: cols + extra }).map((_, index) => (\n    <Line\n      key={index}\n      sx={x + index * colWidth}\n      sy={y}\n      ex={0}\n      ey={height}\n      relative\n    />\n  ));\n  const vertical = Array.from({ length: rows + extra }).map((_, index) => (\n    <Line\n      key={index}\n      sx={x}\n      sy={y + index * rowHeight}\n      ex={width}\n      ey={0}\n      relative\n    />\n  ));\n  return <PathMerge stroke='#ddd'>{horizontal.concat(vertical)}</PathMerge>;\n};\n\nconst SparkLine = ({ width, height, data }) => {\n  const centerY = height / 2;\n  const clone = [...data];\n  clone.sort((a, b) => a - b);\n  const low = clone[0];\n  const hi = clone[clone.length - 1];\n\n  var myScale = scale({ domain: [low, hi], range: [0, height] });\n\n  const pointDistance = parseInt(width / data.length);\n  const points = [[0, centerY]];\n  data.forEach((newDataPoint, index) => {\n    points.push([pointDistance * (index + 1), height - myScale(newDataPoint)]);\n  });\n\n  const margin = 10;\n  const xSize = width + margin;\n  const ySize = height + margin;\n\n  return (\n    <Svg\n      width={xSize}\n      height={ySize}\n      scale\n    >\n      <g transform={`translate(${margin / 2},${margin / 2})`}>\n        <Grid x={0} y={0} width={width} height={height} rows={10} cols={20} />\n        <Polyline\n          className='sparkline-path'\n          points={points}\n          stroke='red'\n          strokeWidth={2}\n          fill='none'\n        />\n      </g>\n      <Rect\n        cx={(xSize - 2) / 2}\n        cy={(ySize - 2) / 2}\n        width={xSize - 2}\n        height={ySize - 2}\n        fill='none'\n        stroke='#333'\n      />\n    </Svg>\n  );\n};\n\nexport default SparkLine;\n","import { Text, Rect } from \"react-svg-path\";\nconst SortControls = ({ cx, cy, sorter, setSorter, width, height }) => {\n  return (\n    <g>\n      <Rect cx={cx} cy={cy} width={width / 2} height={50} fill=\"none\">\n        <Rect\n          className={`btn ${\n            sorter === \"alphaa\" || sorter === \"alphad\" ? \"active\" : \"\"\n          }`}\n          onClick={() => setSorter(sorter === \"alphaa\" ? \"alphad\" : \"alphaa\")}\n          ox={-150}\n          width={100}\n          height={25}\n        >\n          <Text className=\"btn-text\" fill=\"white\">\n            Sort Label\n          </Text>\n        </Rect>\n        <Rect\n          className={`btn ${\n            sorter === \"valuea\" || sorter === \"valued\" ? \"active\" : \"\"\n          }`}\n          onClick={() => setSorter(sorter === \"valuea\" ? \"valued\" : \"valuea\")}\n          ox={-50}\n          width={100}\n          height={25}\n        >\n          <Text className=\"btn-text\" fill=\"white\">\n          Sort Data\n          </Text>\n        </Rect>\n      </Rect>\n    </g>\n  );\n};\n\nexport default SortControls;\n","import { Line } from \"react-svg-path\";\n\nconst Frame = ({ width, height, margins }) => {\n  return (\n    <>\n      <Line\n        strokeWidth={0.5}\n        stroke=\"#ccc\"\n        sx={25}\n        sy={0}\n        ex={25}\n        ey={height}\n      />\n      <Line\n        strokeWidth={0.5}\n        stroke=\"#ccc\"\n        sx={margins.left}\n        sy={height}\n        ex={width - margins.right}\n        ey={height}\n      />\n    </>\n  );\n};\n\nexport default Frame;","import { Line, Text } from \"react-svg-path\";\nconst Ticks = ({ ticks, width, height, margins, yScale }) => {\n  return (\n    <>\n      {ticks.map((y) => {\n        return (\n          <g key={y}>\n            <Line\n              strokeWidth={0.5}\n              stroke=\"#888\"\n              sx={10}\n              sy={height - yScale(y)}\n              ex={width - margins.right}\n              ey={height - yScale(y)}\n            >\n              <Text\n                fontSize=\"0.75em\"\n                textAnchor=\"start\"\n                attach=\"start\"\n                ox={-15}\n              >\n                {y}\n              </Text>\n            </Line>\n          </g>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Ticks;\n","import { Line, Text } from \"react-svg-path\";\n\nconst Bars = ({ values, label, variable, width, height, yScale }) => {\n  return (\n    <>\n      {values.map((v, index, arr) => {\n        const barCount = arr.length;\n        const xStart = 50;\n        const xSpace = width - xStart;\n        const barWidth = xSpace / (barCount * 2);\n        const x = barWidth * index * 2;\n        return (\n          <g transform={`translate(${xStart}, 0)`} key={index}>\n            <Line\n              sx={x}\n              sy={height}\n              ex={x}\n              ey={height - yScale(v[variable])}\n              strokeWidth={barWidth}\n              stroke=\"rebeccapurple\"\n            />\n            <Text fontSize=\"0.75em\" x={x - 5} y={height + 20}>\n              {v[label]}\n            </Text>\n          </g>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Bars;\n","import { Svg, Rect, Text } from \"react-svg-path\";\nimport SortControls from \"./SortControls\";\nimport Frame from \"./Frame\";\nimport Ticks from \"./Ticks\";\nimport Bars from \"./Bars\";\nimport { scaleLinear } from \"d3-scale\";\nimport { useState } from \"react\";\nimport \"./BarChart.css\";\n\nconst BarChart = ({ data, variables, label }) => {\n  const [sorter, setSorter] = useState(\"alphaa\");\n  const [currentVariable, setCurrentVariable] = useState(variables[1]);\n  const sorters = {\n    alphaa: (a, b) => a[label].localeCompare(b[label]),\n    alphad: (a, b) => b[label].localeCompare(a[label]),\n    valuea: (a, b) => a[currentVariable] - b[currentVariable],\n    valued: (a, b) => b[currentVariable] - a[currentVariable],\n  };\n\n  const max = Math.max.apply(\n    null,\n    data.map((o) => o[currentVariable])\n  );\n\n  const width = 850;\n  const margins = { left: 40, right: 40, top: 40, bottom: 40 };\n  const height = 300;\n  const yScale = scaleLinear()\n    .domain([0, max])\n    .range([0, height - margins.bottom]);\n  const ticks = yScale.ticks(5);\n\n  const sortedValues = [...data].sort(sorters[sorter]);\n\n  return (\n    <div className=\"bar-app\">\n      <Svg\n        width={width + margins.left + margins.right}\n        height={height + margins.top + margins.bottom}\n        style={{ maxWidth: 850 }}\n        scale\n        className=\"bar-graph\"\n      >\n        <g transform={`translate(${margins.left}, ${margins.top})`}>\n          <SortControls\n            cx={230}\n            cy={10}\n            width={width / 2}\n            height={50}\n            sorter={sorter}\n            setSorter={setSorter}\n          />\n          {/* quick and dirty variable controls - circle back and clean up */}\n          <Rect cx={840} cy={10} width={width / 2} height={50} fill=\"none\">\n            <Rect\n              className={`btn ${currentVariable === variables[0] ? \"active\" : \"\"}`}\n              onClick={() => setCurrentVariable(variables[0])}\n              ox={-150}\n              width={75}\n              height={25}\n            >\n              <Text className=\"btn-text\" fill=\"white\">\n                data:{variables[0]}\n              </Text>\n            </Rect>\n            <Rect\n              className={`btn ${currentVariable === variables[1] ? \"active\" : \"\"}`}\n              onClick={() => setCurrentVariable(variables[1])}\n              ox={-75}\n              width={75}\n              height={25}\n            >\n              <Text className=\"btn-text\" fill=\"white\">\n                data:{variables[1]}\n              </Text>\n            </Rect>\n          </Rect>\n          <Frame width={width} height={height} margins={margins} />\n          <Ticks\n            ticks={ticks}\n            height={height}\n            width={width}\n            margins={margins}\n            yScale={yScale}\n          />\n          <Bars\n            variable={currentVariable}\n            label={label}\n            values={sortedValues}\n            yScale={yScale}\n            width={width}\n            height={height}\n          />\n        </g>\n      </Svg>\n    </div>\n  );\n};\n\nexport default BarChart;\n","import React from 'react';\nimport { Svg, Rect, Line, Text, MarkerArrow, Distance } from 'react-svg-path';\nimport './Football.css';\n\nconst Football = ({ width }) => {\n  const marginX = 50;\n  const marginY = 50;\n  const canvasWidth = 850;\n  const scale = canvasWidth / 360;\n  const scaleUnit = \"'\";\n  const scaleProps = {\n    scale: 360 / canvasWidth,\n    scaleUnit\n  };\n  const canvasHeight = 160 * scale;\n\n  const field = {\n    width: canvasWidth,\n    height: canvasHeight,\n    endzoneWidth: 30 * scale,\n    playingWidth: 300 * scale,\n    tickLength: 2 * scale,\n    topTickY: 60 * scale,\n    bottomTickY: 100 * scale,\n    bottomNumY: 130 * scale,\n    topNumY: 30 * scale,\n    tickCount: 101,\n    scale\n  };\n  Object.keys(field).forEach((k) => (field[k] = +field[k].toFixed(2)));\n\n  const commonTickProps = {\n    ex: 0,\n    relative: true,\n    ey: -field.tickLength\n  };\n\n  return (\n    <Svg width={canvasWidth + marginX} height={canvasHeight + marginY} style={{ maxWidth: 850, outline: 0 }} scale>\n      <MarkerArrow id='arrow-marker' color='green' open />\n      <g\n        transform={`translate(${marginX / 2},${marginY / 2})`}\n        className='football-diagram'\n      >\n        <Rect\n          cx={field.width / 2}\n          cy={field.height / 2}\n          width={field.width}\n          height={field.height}\n          fill=\"none\"\n        />\n        {Array.from({ length: field.tickCount }).map((_, index) => {\n          const sx = field.endzoneWidth + (field.playingWidth / 100) * index;\n          const isFifth = index % 5 === 0;\n          return (\n            <g key={index}>\n              <Line\n                {...commonTickProps}\n                sx={sx}\n                sy={0}\n                ey={isFifth ? field.height : field.tickLength}\n              />\n              {!isFifth ? (\n                <>\n                  <Line {...commonTickProps} sx={sx} sy={field.height} />\n                  <Line {...commonTickProps} sx={sx} sy={field.topTickY} />\n                  <Line\n                    {...commonTickProps}\n                    ey={field.tickLength}\n                    sx={sx}\n                    sy={field.bottomTickY}\n                  />\n                </>\n              ) : (\n                index !== 0 &&\n                index !== field.tickCount - 1 && (\n                  <>\n                    <Line\n                      {...commonTickProps}\n                      sx={sx - field.tickLength / 2}\n                      sy={field.topTickY}\n                      ey={0}\n                      ex={field.tickLength}\n                    />\n                    <Line\n                      {...commonTickProps}\n                      sx={sx - field.tickLength / 2}\n                      sy={field.bottomTickY}\n                      ey={0}\n                      ex={field.tickLength}\n                    />\n                    {index % 10 === 0 && (\n                      <g>\n                        <Text\n                          className='field-marker-number'\n                          x={sx - field.tickLength / 2 - (index < 50 ? 12 : 4)}\n                          y={field.bottomNumY}\n                        >\n                          {index < 50 && '-'}\n                          {index <= 50 ? index : 50 - Math.abs(index - 50)}\n                          {index > 50 && '-'}\n                        </Text>\n                        <Text\n                          className='field-marker-number'\n                          x={sx - field.tickLength / 2 - (index < 50 ? 12 : 4)}\n                          y={field.topNumY}\n                          transform='rotate(180)'\n                        >\n                          {index > 50 && '-'}\n                          {index <= 50 ? index : 50 - Math.abs(index - 50)}\n                          {index < 50 && '-'}\n                        </Text>\n                      </g>\n                    )}\n                  </>\n                )\n              )}\n            </g>\n          );\n        })}\n\n        <Distance\n          color='green'\n          sx={0}\n          sy={field.height + 15}\n          ex={field.width}\n          ey={field.height + 15}\n          {...scaleProps}\n          markers='arrow'\n        />\n        <Distance\n          color='green'\n          sx={field.width - field.endzoneWidth}\n          sy={25}\n          ex={field.width}\n          ey={25}\n          {...scaleProps}\n          markers='arrow'\n        />\n        <Distance\n          color='green'\n          sx={-15}\n          sy={0}\n          ex={-15}\n          ey={field.height}\n          {...scaleProps}\n          markers='arrow'\n        />\n        <Distance\n          color='green'\n          sx={field.endzoneWidth}\n          sy={0}\n          ex={field.endzoneWidth}\n          ey={field.topTickY}\n          {...scaleProps}\n          markers='arrow'\n        />\n\n        <Distance\n          color='green'\n          sx={field.endzoneWidth}\n          sy={field.bottomTickY}\n          ex={field.endzoneWidth}\n          ey={field.height}\n          {...scaleProps}\n          markers='arrow'\n        />\n        <Distance\n          color='green'\n          sx={field.width - field.endzoneWidth}\n          sy={field.topTickY}\n          ex={field.width - field.endzoneWidth}\n          ey={field.bottomTickY}\n          {...scaleProps}\n          markers='arrow'\n        />\n      </g>\n    </Svg>\n  );\n};\n\nexport default Football;\n","import React from \"react\";\nimport { Svg, Distance, Circle } from \"react-svg-path\";\n\nconst App = () => {\n  const height = 450;\n  const width = 850;\n  const margin = 1;\n  const quarterHeight = height * 0.25;\n  const quarterWidth = width * 0.25;\n  return (\n    <div>\n      <Svg\n        width={width + margin}\n        height={height + margin}\n        scale\n        style={{ maxWidth: width + margin }}\n      >\n        {Array.from({ length: 5 }).map((_, i) => (\n          <Circle\n            key={i}\n            size={70 * (i + (i * 2))}\n            fill=\"none\"\n            stroke=\"#ddd\"\n            strokeDasharray={4}\n          />\n        ))}\n\n        <Distance\n          color=\"green\"\n          ex={width}\n          ey={quarterHeight * 2}\n          markers=\"triangle\"\n        />\n        <Distance\n          color=\"green\"\n          ex={quarterWidth * 2}\n          ey={height}\n          markerEnd=\"triangle\"\n        />\n        <Distance\n          color=\"orange\"\n          ex={quarterWidth * 2}\n          ey={0}\n          markerEnd=\"triangle\"\n          text=\"CUSTOM TEXT\"\n          dotted\n        />\n        <Distance\n          color=\"green\"\n          sx={quarterWidth}\n          sy={0}\n          ex={quarterWidth}\n          ey={height}\n          dotted\n          markers=\"arrow\"\n        />\n        <Distance color=\"green\" ex={width} ey={0} markerEnd=\"triangle\" />\n        <Distance color=\"green\" ex={quarterWidth} ey={quarterHeight * 3} />\n        <Distance\n          color=\"red\"\n          sx={0}\n          sy={0}\n          ex={width}\n          ey={height}\n          markers=\"arrow\"\n        />\n        <Distance\n          color=\"green\"\n          sx={quarterWidth}\n          sy={quarterHeight * 3}\n          ex={0}\n          ey={quarterHeight * 3}\n          markerEnd=\"arrow\"\n          markerStart=\"line\"\n        />\n      </Svg>\n    </div>\n  );\n};\n\nexport default App;\n","import { Circle, RadialLines, Triangle } from 'react-svg-path';\nimport './Targets.css';\n\nexport const Target1 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.65} />\n      <RadialLines\n        innerSize={0}\n        outerSize={size * 0.25}\n        points={4}\n        className='rotate45 line-high'\n      />\n      <RadialLines\n        innerSize={size}\n        outerSize={size * 1.5}\n        points={4}\n        className='rotate45 line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target2 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.75} />\n      <RadialLines\n        innerSize={0}\n        outerSize={size / 3}\n        points={4}\n        className='line-high'\n      />\n      <RadialLines\n        innerSize={size}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target3 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.75} />\n      <RadialLines\n        innerSize={size * 0.15}\n        outerSize={size * 0.4}\n        points={4}\n        className='line-high'\n      />\n      <RadialLines\n        innerSize={size}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target4 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.75} />\n      <RadialLines\n        innerSize={size * 0.15}\n        outerSize={size * 0.4}\n        points={4}\n        className='line-high rotate45'\n      />\n      <RadialLines\n        innerSize={size * 0.8}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target5 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.75} />\n      <RadialLines\n        innerSize={size * 0.07}\n        outerSize={size * 0.3}\n        points={4}\n        className='line-high rotate45'\n      />\n      <RadialLines\n        innerSize={size * 0.8}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-dark'\n        strokeWidth={5}\n      />\n    </Circle>\n  );\n};\n\nexport const Target6 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.25} />\n      <RadialLines\n        innerSize={size * 0.8}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-dark'\n        strokeWidth={8}\n      />\n      <RadialLines\n        innerSize={size * 0.5}\n        outerSize={size * 1.25}\n        points={4}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target7 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.45} />\n      <RadialLines\n        innerSize={size * 0.275}\n        outerSize={size * 0.45}\n        points={4}\n        className='line-high'\n      />\n      <RadialLines\n        innerSize={size * 0.75}\n        outerSize={size}\n        points={4}\n        className='line-high rotate45'\n      />\n    </Circle>\n  );\n};\n\nexport const Target8 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.25} />\n      <RadialLines\n        innerSize={size * 0.8}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-dark rotate45'\n        strokeWidth={8}\n      />\n      <RadialLines\n        innerSize={size}\n        outerSize={size * 1.25}\n        points={4}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target9 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.7} />\n      <Circle className='line-high' size={size * 0.3} fill='none' />\n      <RadialLines\n        innerSize={size * 0.8}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-dark'\n        strokeWidth={4}\n      />\n      <RadialLines\n        innerSize={size * 0.3}\n        outerSize={size}\n        points={4}\n        className='line-high rotate45'\n      />\n    </Circle>\n  );\n};\n\nexport const Target10 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.75} />\n      <Triangle\n        className='line-high rotate180'\n        oy={3}\n        size={size * 0.25}\n        fill='none'\n      />\n      <RadialLines\n        innerSize={size}\n        outerSize={size * 1.2}\n        points={4}\n        className='line-high'\n        strokeWidth={4}\n      />\n      <RadialLines\n        innerSize={size * 0.5}\n        outerSize={size * 0.75}\n        points={4}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target11 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='line-high fill-low' size={size * 0.6} />\n      <RadialLines\n        innerSize={0}\n        outerSize={size * 0.15}\n        points={4}\n        className='rotate45 line-high'\n      />\n      <RadialLines\n        innerSize={size * 0.8}\n        outerSize={size * 0.9}\n        points={45}\n        className='line-high thin'\n      />\n      <RadialLines\n        innerSize={size * 0.4}\n        outerSize={size * 0.6}\n        points={8}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n","import Path, { Svg, Group } from 'react-svg-path';\nimport {\n  Target1,\n  Target2,\n  Target3,\n  Target4,\n  Target5,\n  Target6,\n  Target7,\n  Target8,\n  Target9,\n  Target10,\n  Target11\n} from './Targets';\nimport './Targets.css';\n\nconst TargetDemo = () => {\n  const size = 50;\n  const g = Path.positionByArray(100, [[1,1,1,1], [1,1,1,1], [1,1,1]], 0, 0)\n  const xy = (p) => {\n    const { cx, cy } = g[p];\n    return { cx, cy };\n  };\n\n  return (\n    <Svg width={850} height={400} className='bg-dark' style={{ maxWidth: 850 }} scale>\n      <Group transform=\"translate(225, 50)\">\n        <Target1 size={size} {...xy(0)} />\n        <Target3 size={size} {...xy(1)} />\n        <Target2 size={size} {...xy(2)} />\n        <Target5 size={size} {...xy(3)} />\n        <Target7 size={size} {...xy(4)} />\n        <Target8 size={size} {...xy(5)} />\n        <Target9 size={size} {...xy(6)} />\n        <Target10 size={size} {...xy(7)} />\n        <Target11 size={size} {...xy(8)} />\n        <Target6 size={size} {...xy(9)} />\n        <Target4 size={size} {...xy(10)} />\n      </Group>\n    </Svg>\n  );\n};\n\nexport default TargetDemo;\n","import \"./Clock.css\";\nimport Path, {\n  Svg,\n  Circle,\n  RadialLines,\n  Line,\n  Rect,\n  MarkerArrow,\n  Text,\n} from \"react-svg-path\";\n\nimport { useState, useEffect } from \"react\";\n\nexport const degreeToAngle = (value, division, cx, cy, radius) => {\n  const degree = (360 / division) * value - 90;\n  const { x: ex, y: ey } = Path.polarToCartesian(cx, cy, radius, degree);\n  return { ex, ey };\n};\n\nexport const time = () => {\n  const d = new Date();\n  return {\n    second: d.getSeconds(),\n    minute: d.getMinutes(),\n    hour: d.getHours(),\n    millis: d.getMilliseconds(),\n    date: d.getDate(),\n    day: d.toLocaleDateString(\"en\", { weekday: \"short\" }),\n    month: d.toLocaleDateString(\"en\", { month: \"long\" }),\n  };\n};\n\nconst Clock = ({ size = 400 }) => {\n  const cx = size / 2;\n  const cy = size / 2;\n  const margin = 40;\n  const fontBase = size / 16;\n  const [state, setState] = useState(time());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setState(time());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const hoursPoints = Path.radialPoints(size * 0.425, cx, cy, 12);\n  const minutePoints = Path.radialPoints(size * 0.275, cx, cy, 12);\n  const hours = [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n  return (\n    <div className=\"Clock\">\n      <Svg width={size + margin} height={size + margin} className=\"clock\" scale>\n        <MarkerArrow id=\"marker-h\" color=\"blue\" />\n        <MarkerArrow id=\"marker-s\" color=\"red\" />\n        <MarkerArrow id=\"marker-m\" color=\"green\" />\n        <g transform={`translate(${margin / 2}, ${margin / 2})`}>\n        {hoursPoints.map((point, index) => {\n            return (\n              <Text\n                className=\"middle\"\n                key={hours[index]}\n                x={point[0]}\n                y={point[1]}\n                fill=\"#333\"\n                fontSize={`${fontBase}px`}\n              >\n                {hours[index]}\n              </Text>\n            );\n          })}\n          {minutePoints.map((point, index) => {\n            const m = index * 5;\n            return (\n              <Text\n                key={index}\n                x={point[0]}\n                y={point[1]}\n                className=\"middle\"\n                fontSize={`${fontBase / 2}px`}\n                fill=\"red\"\n              >\n                {m}\n              </Text>\n            );\n          })}\n          <Circle size={size} cx={cx} cy={cy} strokeWidth={5}>\n            <RadialLines\n              innerSize={size * 0.725}\n              outerSize={size * 0.65}\n              points={12}\n              strokeWidth={5}\n            />\n            <RadialLines\n              innerSize={size * 0.7}\n              outerSize={size * 0.65}\n              points={60}\n              strokeWidth={1}\n            />\n          </Circle>\n          <Rect\n            cx={cx + 55}\n            cy={cy - 12}\n            width={80}\n            height={30}\n            fill=\"#222\"\n            stroke=\"none\"\n          >\n            <Rect ox={-16} width={44} height={26} fill=\"#fff\" stroke=\"none\">\n              <Text dy={2} className=\"middle\" fill=\"#222\">\n                {state.day.toUpperCase()}\n              </Text>\n              <Text dy={2} dx={40} className=\"middle\" fill=\"#fff\">\n                {state.date}\n              </Text>\n            </Rect>\n            <Text dy={30} fontSize={11} fill=\"#444\" className=\"middle\">\n              {state.month.toUpperCase()}\n            </Text>\n          </Rect>\n          <Line\n            strokeWidth={6}\n            markerEnd=\"url(#marker-h)\"\n            sx={cx}\n            sy={cy}\n            stroke=\"blue\"\n            {...degreeToAngle(state.hour, 12, cx, cy, size * 0.315)}\n          />\n          <Line\n            strokeWidth={3}\n            markerEnd=\"url(#marker-m)\"\n            sx={cx}\n            sy={cy}\n            stroke=\"green\"\n            {...degreeToAngle(state.minute, 60, cx, cy, size * 0.375)}\n          />\n          <Line\n            sx={cx}\n            sy={cy}\n            strokeWidth={1}\n            stroke=\"red\"\n            {...degreeToAngle(state.second, 60, cx, cy, size * 0.45)}\n          />\n          <Circle cx={cx} cy={cy} size={10} fill=\"#fff\" stroke=\"#222\" />\n        </g>\n      </Svg>\n    </div>\n  );\n};\n\nexport default Clock;\n","import React from \"react\";\nimport Path, { Circle, Group, Rect } from \"react-svg-path\";\n\nconst Atom = ({ cx, cy, shells, circ = 350 }) => {\n  const step = circ/shells.length\n  const electron_config = shells.slice().reverse();\n  const incrementalRing = electron_config.map((s, i) => circ - step * i);\n  const shellPoints = electron_config.map((s, i) =>\n    Path.radialPoints(incrementalRing[i] / 2, cx, cy, s)\n  );\n\n  const getTimes = (arr) => {\n    const max = 5000;\n    let min;\n    return arr.map((n) => {\n      min = Math.max(n * 1000, max);\n      return Math.floor(Math.random() * (max - min)) + min;\n    });\n  };\n\n  const times = getTimes(electron_config);\n\n  return (\n    <Rect width={circ} height={circ} cx={cx} cy={cy} className=\"atom\">\n      {incrementalRing.map((s, i) => (\n        <Group\n          key={i}\n          className=\"ring\"\n          style={{ animationDuration: `${times[i] / 1000}s` }}\n        >\n          <Circle size={s} fill=\"none\" stroke=\"#222\" strokeWidth={0.5} />\n          {shellPoints[i].map((p, q) => {\n            return (\n              <Circle\n                key={`${q}`}\n                cx={+p[0]}\n                cy={+p[1]}\n                size={13}\n                fill=\"#20a0c1\"\n              />\n            );\n          })}\n        </Group>\n      ))}\n    </Rect>\n  );\n};\n\nexport default Atom;\n","import React from \"react\";\nimport { Rect, SymX } from \"react-svg-path\";\n\nconst Modal = ({\n  className,\n  width,\n  height,\n  close,\n  cx,\n  cy,\n  children,\n  fill = \"#f8f8f8\",\n}) => {\n  return (\n    <>\n      <rect\n        onClick={close}\n        x={0}\n        y={0}\n        width=\"100%\"\n        height=\"100%\"\n        fill=\"#fff\"\n        fillOpacity={0.4}\n      />\n      <Rect\n        className={`modal ${className}`}\n        cx={cx}\n        cy={cy}\n        width={width}\n        height={height}\n        fill={fill}\n        stroke=\"#ddd\"\n        strokeWidth={2}\n      >\n        <Rect\n          ox={width / 2 - 25}\n          oy={-(height / 2) + 25}\n          className=\"pointer\"\n          width={15}\n          height={15}\n          onClick={close}\n          fill=\"transparent\"\n        >\n          <SymX\n            className=\"no-pointer\"\n            width={15}\n            height={15}\n            stroke=\"black\"\n            strokeWidth={3}\n          />\n        </Rect>\n        {children}\n      </Rect>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport { Svg } from \"react-svg-path\";\nimport { translate as t } from \"../../../i18n/i18n\";\nimport DagNodes from \"../../demos/dag/DagNodes\";\nimport Pie from \"../../demos/complex/Pie\";\nimport Donut from \"../../demos/complex/Donut\";\nimport SparkLine from \"../../demos/complex/SparkLine\";\nimport BarChart from \"../../demos/complex/BarChart/BarChart\";\nimport Football from \"../../demos/complex/Football/Football\";\nimport Dimensions from \"../../demos/complex/Dimensions/Dimensions\";\nimport TargetDemo from \"../../demos/targets/TargetDemo\";\nimport Clock from \"../../demos/complex/Clock\";\nimport Elements from \"../../demos/Elements\";\nexport const Demos = () => {\n  const pieData = [\n    {\n      color: \"#086972\",\n      percent: 20,\n      nested: [\n        { color: \"rgba(0,100,25,0.9)\", percent: 10 },\n        { color: \"rgba(0,100,25,0.8)\", percent: 10 },\n      ],\n    },\n    {\n      color: \"#01a9b4\",\n      percent: 30,\n      nested: [\n        { color: \"rgba(0,100,25,0.7)\", percent: 10 },\n        { color: \"rgba(0,100,25,0.6)\", percent: 10 },\n        { color: \"rgba(0,100,25,0.5)\", percent: 10 },\n      ],\n    },\n    {\n      color: \"#87dfd6\",\n      percent: 50,\n      nested: [\n        { color: \"rgba(0,100,25,0.4)\", percent: 25 },\n        { color: \"rgba(0,100,25,0.3)\", percent: 25 },\n      ],\n    },\n  ];\n\n  const barData = [\n    { val: 100, qty: 245, name: \"A\" },\n    { val: 200, qty: 200, name: \"B\" },\n    { val: 300, qty: 207, name: \"C\" },\n    { val: 425, qty: 350, name: \"D\" },\n    { val: 555, qty: 125, name: \"E\" },\n    { val: 150, qty: 50, name: \"F\" },\n    { val: 330, qty: 10, name: \"G\" },\n    { val: 340, qty: 75, name: \"H\" },\n    { val: 200, qty: 86, name: \"I\" },\n    { val: 600, qty: 100, name: \"J\" },\n    { val: 333, qty: 77, name: \"K\" },\n    { val: 78, qty: 20, name: \"L\" },\n    { val: 125, qty: 300, name: \"M\" },\n  ];\n\n  const getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return parseInt(Math.floor(Math.random() * (max - min + 1)) + min);\n  };\n\n  const sparkData = Array.from({ length: 50 }).map(() => getRandomInt(-10, 10));\n  return (\n    <>\n      <h1>{t(\"pages.demos.title\")}</h1>\n      <p>{t(\"pages.demos.intro\")}</p>\n      <div>\n        <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n          <h4>Periodic table of elements</h4>\n          <Elements />\n          <a\n            href=\"https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/Elements\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n        <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n          <h4>Bar Chart</h4>\n          <BarChart data={barData} variables={[\"val\", \"qty\"]} label=\"name\" />\n          <a\n            href=\"https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/BarChart/BarChart.js\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n        <div className=\"dag\">\n          <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n            <h4>Diagram</h4>\n            <DagNodes />\n            <a\n              href=\"https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/dag/DagNodes.js\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {t(\"common.source\")}\n            </a>\n          </div>\n        </div>\n        <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n          <h4>Measurements</h4>\n          <Dimensions />\n          <a\n            href=\"https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/Dimensions\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n        <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n          <h4>Designs</h4>\n          <TargetDemo />\n          <a\n            href={`https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/targets`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n        <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n          <h4>NFL football field (to scale)</h4>\n          <Football width={850} />\n          <a\n            href={`https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/Football/Football.js`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n      </div>\n      <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n        <h4>Pie/Donut Charts</h4>\n      </div>\n      <div\n        className=\"complex flex items-center justify-around flex-wrap\"\n        style={{ maxWidth: 800, minHeight: 180 }}\n      >\n        <div className=\"flex flex-column items-center justify-center\">\n          <Svg width={160} height={160}>\n            <Pie size={150} cx={80} cy={80} data={pieData} />\n          </Svg>\n          <a\n            href={`https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/Pie.js`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n        <div className=\"flex flex-column items-center justify-center\">\n          <Svg width={160} height={160}>\n            <Donut width={25} size={150} cx={80} cy={80} data={pieData} />\n          </Svg>\n          <a\n            href={`https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/Donut.js`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n      </div>\n      <div\n        className=\"complex flex items-center justify-around flex-wrap\"\n        style={{ maxWidth: \"800px\", minHeight: 160 }}\n      >\n        <Svg width={180} height={180}>\n          <Pie size={130} cx={90} cy={90} data={pieData} />\n          <Donut\n            width={20}\n            size={175}\n            cx={90}\n            cy={90}\n            stroke=\"#fff\"\n            data={pieData.map((pd) => pd.nested).flat()}\n          />\n        </Svg>\n      </div>\n      <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n        <h4>Line Chart</h4>\n        <div className=\"flex flex-column\">\n          <SparkLine width={800} height={100} data={sparkData} />\n          <a\n            href={`https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/SparkLine.js`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n      </div>\n      <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n        <h4>Functioning clock</h4>\n        <Clock size={400} />\n        <a\n          href={`https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/Clock.js`}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          {t(\"common.source\")}\n        </a>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Svg, RegPolygon, Circle, Square, PathMerge } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\nimport './MergeDemo.css';\n\nexport const MergeDemo = () => (\n  <>\n    <h1>{t('pages.pathMerge.title')}</h1>\n    <p>{t('pages.pathMerge.intro')}</p>\n    <p>{t('pages.pathMerge.compose')}</p>\n    <div>\n      <Svg width={200} height={200} className='nesting-example-1' scale>\n        <RegPolygon size={120} sides={4} cx={100} cy={100} />\n        <Circle size={55} cx={100} cy={100} />\n        <Square size={60} cx={100} cy={100} />\n      </Svg>\n      <div>\n        <code>\n          {`\n<RegPolygon size={120} sides={4} cx={100} cy={100} />\n<Circle size={55} cx={100} cy={100} />\n<Square size={60} cx={100} cy={100} />\n`.trim()}\n        </code>\n      </div>\n    </div>\n    <p>{t('pages.pathMerge.composeResult')}</p>\n    <code>\n      {`\n<path d=\"...RegPolygon path data\" />\n<path d=\"...Circle path data\" />\n<path d=\"...Square path data\" />\n`.trim()}\n    </code>\n    <p>{t('pages.pathMerge.wrapIn')}</p>\n    <div>\n      <Svg width={200} height={200} className='nesting-example-1' scale>\n        <PathMerge>\n          <RegPolygon size={120} sides={4} cx={100} cy={100} />\n          <Circle size={55} cx={100} cy={100} />\n          <Square size={60} cx={100} cy={100} />\n        </PathMerge>\n      </Svg>\n      <div>\n        <code>\n          {`\n<PathMerge>\n  <RegPolygon size={120} sides={4} cx={100} cy={100} />\n  <Circle size={55} cx={100} cy={100} />\n  <Square size={60} cx={100} cy={100} />\n</PathMerge>\n`.trim()}\n        </code>\n      </div>\n    </div>\n    <p>{t('pages.pathMerge.wrapInResult')}</p>\n    <p>{t('pages.pathMerge.nested')}</p>\n    <div>\n      <Svg width={200} height={200} className='nesting-example-1' scale>\n        <PathMerge>\n          <RegPolygon size={120} sides={4} cx={100} cy={100}>\n            <Circle size={55} />\n            <Square size={60} />\n            <Circle size={25} cy={58} />\n          </RegPolygon>\n          <Circle size={10} cx={100} cy={100} />\n        </PathMerge>\n      </Svg>\n      <div>\n        <code>\n          {`\n<PathMerge>\n  <RegPolygon size={120} sides={4} cx={100} cy={100}>\n    <Circle size={55} />\n    <Square size={60} />\n    <Circle size={25} cy={58} />\n  </RegPolygon>\n  <Circle size='10' cx={100} cy={100} />\n</PathMerge>\n`.trim()}\n        </code>\n      </div>\n    </div>\n  </>\n);\n","import React from 'react';\nimport { Svg, Circle, Rect } from 'react-svg-path';\nimport { translate as t } from '../../i18n/i18n';\nimport './Introduction.css';\n\nexport const Introduction = () => {\n  return (\n    <>\n      <h1>{t('pages.introduction.title')}</h1>\n      <p>{t('pages.introduction.intro')}</p>\n\n      <h2>{t('pages.introduction.installation')}</h2>\n      <code>npm i react-svg-path</code>\n\n      <h2>{'Overview'}</h2>\n      <p>{t('pages.introduction.overview')}</p>\n\n      <p>{t('pages.introduction.overviewExample')}</p>\n      <div>\n        <Svg width={100} height={100}>\n          <Circle size={50} fill='none' stroke='red'>\n            <Rect width={30} height={10} fill='none' stroke='red' />\n          </Circle>\n        </Svg>\n        <p>{t('pages.introduction.overviewExampleDescription')}</p>\n        <h4>{t('pages.introduction.startSvg')}</h4>\n        <code>\n          {`<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"></svg>`}\n        </code>\n        <h4>{t('pages.introduction.addSvgCircle')}</h4>\n        <code>\n          {`<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <circle cx={50} cy={50} r={25} fill=\"none\" stroke=\"red\" />\n</svg>`}\n        </code>\n        <svg width={100} height={100}>\n          <circle cx={50} cy={50} r={25} fill='none' stroke='red' />\n        </svg>\n        <h4>{t('pages.introduction.addSvgRect')}</h4>\n        <code>\n          {`<svg width={100} height={100}>\n  <circle cx={50} cy={50} r={25} fill=\"none\" stroke=\"red\" />\n  <rect x={35} y={45} width={30} height={10} fill=\"none\" stroke=\"red\"  />\n</svg>`}\n        </code>\n        <svg width={100} height={100}>\n          <circle cx={50} cy={50} r={25} fill='none' stroke='red' />\n          <rect x={35} y={45} width={30} height={10} fill='none' stroke='red' />\n        </svg>\n        <p>{t('pages.introduction.endSvg')}</p>\n        <h2>{t('pages.introduction.buildWithRSP')}</h2>\n        <code>{`<Svg width={100} height={100}>\n  <Circle size={50} fill='none' stroke='red'>\n    <Rect width={30} height={10} stroke='red' />\n  </Circle>\n</Svg>`}</code>\n        <Svg width={100} height={100}>\n          <Circle size={50} fill='none' stroke='red'>\n            <Rect width={30} height={10} fill='none' stroke='red' />\n          </Circle>\n        </Svg>\n        <p>{t('pages.introduction.benefit')}</p>\n        <p>{t('pages.introduction.learnMore')}</p>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Svg,\n  Polyline,\n  Quad,\n  Line,\n  MarkerArrow,\n  MarkerTriangle,\n  MarkerLine,\n  MarkerSquare\n} from 'react-svg-path';\nimport demos from '../../../docs/demos.mjs';\nimport { translate as t } from '../../../i18n/i18n';\n\nimport './MarkerDemo.css';\n\nconst genPolylineZag = (centerY, length = 10, offsetY = 5, offsetX = 10) => {\n  const ypoints = Array.from({ length }).map((p, i) => {\n    return i % 2 === 0 ? centerY - offsetY : centerY + offsetY;\n  });\n  const points = ypoints.map((y, i) => {\n    return [offsetX * i, y];\n  });\n\n  return points;\n};\n\nconst MarkerSelector = ({ label, onChange, id }) => {\n  return (\n    <div className='field'>\n      <label htmlFor={id}>{label}</label>\n      <select id={id} className='ui dropdown' onChange={onChange}>\n        <option value={null}>None</option>\n        <option value='marker-arrow'>&lt;MarkerArrow&gt;</option>\n        <option value='marker-triangle'>&lt;MarkerTriangle&gt;</option>\n        <option value='marker-line'>&lt;MarkerLine&gt;</option>\n        <option value='marker-square'>&lt;MarkerSquare&gt;</option>\n      </select>\n    </div>\n  );\n};\n\nexport const MarkerDemo = () => {\n  const [startMarker, setStartMarker] = useState(null);\n  const [endMarker, setEndMarker] = useState(null);\n  const [midMarker, setMidMarker] = useState(null);\n  const markerStart = (e) => {\n    setStartMarker(e.target.value);\n  };\n  const markerEnd = (e) => {\n    setEndMarker(e.target.value);\n  };\n  const markerMid = (e) => {\n    setMidMarker(e.target.value);\n  };\n  const quadDemo = { ...demos.curves.quad[0] };\n  delete quadDemo.svgDimensions;\n  return (\n    <>\n      <h1>{t('pages.markers.title')}</h1>\n      <p>{t('pages.markers.intro')}</p>\n      <div>\n        <Svg width={260} height={225} scale>\n          <MarkerArrow id='marker-arrow' />\n          <MarkerTriangle id='marker-triangle' />\n          <MarkerLine id='marker-line' strokeWidth={3} />\n          <MarkerSquare id='marker-square' size={8} />\n          <g transform='translate(10,10)'>\n            <Quad\n              {...quadDemo}\n              stroke='#222'\n              fill='none'\n              markerEnd={`url(#${endMarker})`}\n              markerStart={`url(#${startMarker})`}\n              markerMid={`url(#${midMarker})`}\n            />\n            <Line\n              sx={10}\n              sy={100}\n              ex={225}\n              ey={100}\n              stroke='#222'\n              markerEnd={`url(#${endMarker})`}\n              markerStart={`url(#${startMarker})`}\n            />\n            <Polyline\n              fill='none'\n              stroke='#222'\n              points={genPolylineZag(150, 6, 25, 45)}\n              markerEnd={`url(#${endMarker})`}\n              markerStart={`url(#${startMarker})`}\n            />\n          </g>\n        </Svg>\n        <div className='ui form' style={{ width: 250, marginLeft: 10 }}>\n          <MarkerSelector\n            id='start'\n            label={t('pages.markers.startLabel')}\n            onChange={markerStart}\n          />\n          <MarkerSelector\n            id='end'\n            label={t('pages.markers.endLabel')}\n            onChange={markerEnd}\n          />\n          <MarkerSelector\n            id='mid'\n            label={t('pages.markers.midLabel')}\n            onChange={markerMid}\n          />\n        </div>\n      </div>\n      <div>\n        <h2>{t('pages.markers.usage')}</h2>\n        <code>\n          {`<svg>\n  <Marker[Arrow|Line|Triangle|Square] id=\"my-marker-id\" />\n  <Line\n    sx={10}\n    sy={100}\n    ex={225}\n    ey={100}\n    markerStart=\"url(#my-marker-id)\"\n    markerEnd=\"url(#my-marker-id)\"\n/>\n</svg>`.trim()}\n        </code>\n      </div>\n      <div>\n        <h2>&lt;MarkerArrow></h2>\n        <p dangerouslySetInnerHTML={{ __html: t('pages.markers.arrow') }} />\n      </div>\n      <div>\n        <h2>&lt;MarkerTriangle></h2>\n        <p dangerouslySetInnerHTML={{ __html: t('pages.markers.triangle') }} />\n      </div>\n      <div>\n        <h2>&lt;MarkerSquare></h2>\n        <p dangerouslySetInnerHTML={{ __html: t('pages.markers.square') }} />\n      </div>\n      <div>\n        <h2>&lt;MarkerLine></h2>\n        <p dangerouslySetInnerHTML={{ __html: t('pages.markers.line') }} />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Svg, TextPath, Circle, Quad } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\nimport './TextPathDemo.css';\n\nexport const TextPathDemo = () => {\n  const exampleText = t('pages.textPath.exampleText');\n  return (\n    <>\n      <h1>{t('pages.textPath.title')}</h1>\n      <p>{t('pages.textPath.intro')}</p>\n      <div className='text-path '>\n        <h2>With existing components</h2>\n        <p>{t('pages.textPath.withCircle')}</p>\n        <Svg width={500} height={250} scale>\n          <TextPath id='my-path' path={<Circle cx={250} cy={125} size={125} />}>\n            {exampleText}\n          </TextPath>\n        </Svg>\n        <code>\n          {`\n<Svg width={500} height={250}>\n  <TextPath id='my-path' path={<Circle cx={250} cy={125} size={125} />}>\n    ${exampleText}\n  </TextPath>\n</Svg>`.trim()}\n        </code>\n        <p>{t('pages.textPath.withQuad')}</p>\n        <Svg width={500} height={200} scale>\n          <TextPath\n            startOffset={20}\n            path={\n              <Quad\n                sx={0}\n                sy={100}\n                cx={50}\n                cy={0}\n                ex={100}\n                ey={100}\n                t={[\n                  [100, 0],\n                  [100, 0],\n                  [100, 0],\n                  [100, 0]\n                ]}\n                fill='none'\n              />\n            }\n          >\n            {exampleText} {exampleText}\n          </TextPath>\n        </Svg>\n        <code>\n          {`\n<Svg width={500} height={200}>\n  <TextPath\n    startOffset={20}\n    path={\n      <Quad\n        sx={0}\n        sy={100}\n        cx={50}\n        cy={0}\n        ex={100}\n        ey={100}\n        t={[\n          [100, 0],\n          [100, 0],\n          [100, 0],\n          [100, 0]\n        ]}\n        fill='none'\n      />\n    }\n  >\n    ${exampleText}\n    ${exampleText}\n  </TextPath>\n</Svg>`.trim()}\n        </code>\n        <h2>{t('pages.textPath.withCustom')}</h2>\n        <p>{t('pages.textPath.withCustomDescription')}</p>\n        <Svg width={500} height={250} scale>\n          <TextPath\n            textLength={450}\n            path='M25,100 h150 q25 0 40 50 t50 50 t50 -50 v-100'\n          >\n            {'→'.repeat(25)}\n          </TextPath>\n        </Svg>\n        <code>\n          {`\n<Svg width={500} height={250}>\n  <TextPath\n    textLength={450}\n    path='M25 100 h150 q25 0 40 50 t50 50 t50 -50 v-100'\n  >\n    {\"→\".repeat(20)}\n  </TextPath>\n</Svg>`.trim()}\n        </code>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { translate as t } from '../../i18n/i18n';\nimport {\n  Svg,\n  Square,\n  Circle,\n  Text,\n  Line,\n  RadialLines,\n  MarkerSquare,\n  MarkerArrow,\n  Quad\n} from 'react-svg-path';\n\nexport const CenterEndDemo = () => {\n  return (\n    <>\n      <h1>{t('pages.centerEnd.title')}</h1>\n      <p dangerouslySetInnerHTML={{ __html: t('pages.centerEnd.intro') }} />\n      <div>\n        <Svg width={575} height={175} scale>\n          <MarkerSquare id='marker-s' size={10} color='#999' />\n          <MarkerArrow id='marker-a' size={10} color='red' />\n          <Square\n            fill='none'\n            cx={250}\n            cy={100}\n            size={75}\n            stroke='#222'\n            centerEnd={false}\n            markerEnd='url(#marker-s)'\n          >\n            <Circle size={10}>\n              <Line\n                ox={15}\n                ex={75}\n                ey={0}\n                relative\n                stroke='red'\n                markerStart='url(#marker-a)'\n              />\n              <Text ox={100} oy={4}>\n                {t('pages.centerEnd.circle')}\n              </Text>\n            </Circle>\n          </Square>\n          <Line\n            sx={150}\n            sy={60}\n            ex={200}\n            ey={60}\n            stroke='red'\n            markerEnd='url(#marker-a)'\n          >\n            <Text ox={-140} oy={4} attach='start'>\n              {t('pages.centerEnd.square')}\n            </Text>\n          </Line>\n        </Svg>\n      </div>\n      <div>\n        <code>\n          {`\n<Svg width={575} height={175}>\n  <MarkerSquare id='marker-s' size={10} color='#999' />\n  <MarkerArrow id='marker-a' size={10} color='red' />\n  <Square\n    fill='none'\n    cx={250}\n    cy={100}\n    size={75}\n    stroke='#222'\n    centerEnd={false}\n    markerEnd='url(#marker-s)'\n  >\n    <Circle size={10}>\n      <Line ox={15} ex={75} ey={0} relative stroke=\"red\" markerStart='url(#marker-a)' />\n      <Text ox={100} oy={4}>${t('pages.centerEnd.circle')}</Text>\n    </Circle>\n  </Square>\n  <Line\n    sx={150}\n    sy={60}\n    ex={200}\n    ey={60}\n    stroke='red'\n    markerEnd='url(#marker-a)'\n  >\n    <Text ox={-140} oy={4} attach='start'>${t('pages.centerEnd.square')}</Text>\n  </Line>\n</Svg>        `.trim()}\n        </code>\n      </div>\n      <div>\n        <h2>{t('pages.centerEnd.another')}</h2>\n        <Svg width={500} height={500} scale>\n          <MarkerSquare id='ms' size={10} color='red' />\n          <MarkerSquare id='mm' size={10} color='#999' />\n          <MarkerSquare id='me' size={10} color='blue' />\n          <MarkerArrow id='marker-explain-start' size={10} color='red' />\n          <MarkerArrow id='marker-explain-end' size={10} color='blue' />\n          <RadialLines\n            cx={250}\n            cy={250}\n            innerSize={75}\n            outerSize={200}\n            points={12}\n            stroke='#ccc'\n            centerEnd={false}\n            markerEnd='url(#me)'\n            markerMid='url(#mm)'\n            markerStart='url(#ms)'\n          >\n            <Quad\n              oy={-40}\n              cx={300}\n              cy={50}\n              ex={375}\n              ey={125}\n              stroke='red'\n              fill='none'\n              markerEnd='url(#marker-explain-start)'\n            >\n              <Text oy={15}>{t('pages.centerEnd.startingPoint')}</Text>\n            </Quad>\n            <Quad\n              oy={-90}\n              ox={-51}\n              cx={125}\n              cy={50}\n              ex={75}\n              ey={125}\n              stroke='blue'\n              fill='none'\n              markerEnd='url(#marker-explain-end)'\n            >\n              <Text ox={-50} oy={15}>\n                {t('pages.centerEnd.endingPoint')}\n              </Text>\n            </Quad>\n          </RadialLines>\n        </Svg>\n      </div>\n      <div>\n        <code>\n          {`\n<Svg width={500} height={500}>\n  <MarkerSquare id='ms' size={10} color='red' />\n  <MarkerSquare id='mm' size={10} color='#999' />\n  <MarkerSquare id='me' size={10} color='blue' />\n  <MarkerArrow id='marker-explain-start' size={10} color='red' />\n  <MarkerArrow id='marker-explain-end' size={10} color='blue' />\n  <RadialLines\n    cx={250}\n    cy={250}\n    innerSize={75}\n    outerSize={200}\n    points={12}\n    stroke='#ccc'\n    centerEnd={false}\n    markerEnd='url(#me)'\n    markerMid='url(#mm)'\n    markerStart='url(#ms)'\n  >\n    <Quad\n      oy={-40}\n      cx={300}\n      cy={50}\n      ex={375}\n      ey={125}\n      stroke='red'\n      fill='none'\n      markerEnd='url(#marker-explain-start)'\n    >\n      <Text oy={15}>${t('pages.centerEnd.startingPoint')}</Text>\n    </Quad>\n    <Quad\n      oy={-90}\n      ox={-51}\n      cx={125}\n      cy={50}\n      ex={75}\n      ey={125}\n      stroke='blue'\n      fill='none'\n      markerEnd='url(#marker-explain-end)'\n    >\n      <Text ox={-50} oy={15}>${t('pages.centerEnd.endingPoint')}</Text>\n    </Quad>\n  </RadialLines>\n</Svg>`.trim()}\n        </code>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Svg, Circle, Line, Text, Distance } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\nimport './SvgDemo.css';\n\nexport const SvgDemo = () => {\n  return (\n    <>\n      <h1>{t('pages.svg.title')}</h1>\n      <p dangerouslySetInnerHTML={{ __html: t('pages.svg.intro') }}></p>\n      <div>\n        <Svg width={100} height={100} />\n      </div>\n      <code>{`<Svg width={100} height={100} />}`}</code>\n      <div>\n        <h2>{t('pages.svg.nesting')}</h2>\n        <p>{t('pages.svg.nestingDescription')}</p>\n        <Svg width={500} height={250} className=\"svg-demo-svg\" scale>\n          <Circle size={25} fill='none' stroke='#000' />\n          <Line ox={12.5} ex={300} ey={125} stroke='red'>\n            <Text ox={5} oy={4} fill='red'>\n              {t('pages.svg.exampleText')}\n            </Text>\n          </Line>\n        </Svg>\n        <code>\n          {`\n<Svg width={500} height={250}>\n  <Circle size={25} fill='none' stroke='#000' />\n  <Line ox={12.5} ex={300} ey={125} stroke='red'>\n    <Text ox={5} oy={4} fill='red'>\n      ${t('pages.svg.exampleText')}\n    </Text>\n  </Line>\n</Svg>`.trim()}\n        </code>\n      </div>\n      <div>\n        <h2>{t('pages.svg.responsive')}</h2>\n        <p>{t('pages.svg.responsiveDescription')}</p>\n        <p>{t('pages.svg.notResponsiveExample')}</p>\n        <Svg width={1000} height={250} className=\"svg-demo-svg\">\n          <Distance\n            sx={0}\n            ex={1000}\n            ey={125}\n            markers='arrow'\n            stroke='#000'\n          />\n          <Circle\n            size={60}\n            fill='none'\n            stroke='#000'\n          />\n        </Svg>\n        <p>{t('pages.svg.responsiveExample')}</p>\n        <Svg width={1000} height={250} scale className=\"svg-demo-svg\">\n          <Distance\n            sx={0}\n            ex={1000}\n            ey={125}\n            markers='arrow'\n            stroke='#000'\n          />\n          <Circle\n            size={60}\n            fill='none'\n            stroke='#000'\n          />\n        </Svg>\n        <code>\n          {`\n<Svg width={1000} height={250} scale className=\"svg-demo-svg\">\n  <Distance\n    sx={0}\n    ex={1000}\n    ey={125}\n    markers='arrow'\n    stroke='#000'\n  />\n  <Circle\n    size={60}\n    fill='none'\n    stroke='#000'\n  />\n</Svg>`.trim()}\n        </code>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Svg, Distance } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\nimport './DistanceDemo.css';\n\nexport const DistanceDemo = () => {\n  return (\n    <>\n      <h1>{t('pages.distance.title')}</h1>\n      <p dangerouslySetInnerHTML={{ __html: t('pages.distance.intro') }}></p>\n      <div>\n        <h2>{t('pages.distance.pixelsDefault')}</h2>\n        <p>{t('pages.distance.pixelsDefaultDescription')}</p>\n        <Svg width={600} height={200} scale>\n          <Distance sx={0} sy={150} ex={600} ey={150} />\n          <Distance sx={150} sy={0} ex={150} ey={200} />\n          <Distance sx={400} sy={0} ex={600} ey={200} />\n        </Svg>\n        <code>\n          {`\n<Svg width={600} height={200}>\n  <Distance sx={0} sy={150} ex={600} ey={150} />\n  <Distance sx={150} sy={0} ex={150} ey={200} />\n  <Distance sx={400} sy={0} ex={600} ey={200} />\n</Svg>`.trim()}\n        </code>\n      </div>\n      <div>\n        <h2>{t('pages.distance.color')}</h2>\n        <p>{t('pages.distance.colorDescription')}</p>\n        <Svg width={600} height={200} scale>\n          <Distance sx={0} sy={150} ex={600} ey={150} color='red' />\n          <Distance sx={150} sy={0} ex={150} ey={200} color='green' />\n          <Distance sx={400} sy={0} ex={600} ey={200} color='blue' />\n        </Svg>\n        <code>\n          {`\n<Svg width={600} height={200}>\n  <Distance sx={0} sy={150} ex={600} ey={150} color='red' />\n  <Distance sx={150} sy={0} ex={150} ey={200} color='green' />\n  <Distance sx={400} sy={0} ex={600} ey={200} color='blue' />\n</Svg>`.trim()}\n        </code>\n      </div>\n      <div>\n        <h2>{t('pages.distance.dotted')}</h2>\n        <p>{t('pages.distance.dottedDescription')}</p>\n        <Svg width={600} height={200} scale>\n          <Distance sx={0} sy={150} ex={600} ey={150} dotted />\n          <Distance sx={150} sy={0} ex={150} ey={200} dotted />\n          <Distance sx={400} sy={0} ex={600} ey={200} dotted />\n        </Svg>\n        <code>\n          {`\n<Svg width={600} height={200}>\n  <Distance sx={0} sy={150} ex={600} ey={150} dotted />\n  <Distance sx={150} sy={0} ex={150} ey={200} dotted />\n  <Distance sx={400} sy={0} ex={600} ey={200} dotted />\n</Svg>`.trim()}\n        </code>\n      </div>\n      <div>\n        <h2>{t('pages.distance.text')}</h2>\n        <p>{t('pages.distance.textDescription')}</p>\n        <Svg width={600} height={200} scale>\n          <Distance sx={0} sy={150} ex={600} ey={150} text='world' />\n          <Distance sx={150} sy={0} ex={150} ey={200} text='hello' />\n          <Distance sx={400} sy={0} ex={600} ey={200} text='🔸' />\n        </Svg>\n        <code>\n          {`\n<Svg width={600} height={200}>\n  <Distance sx={0} sy={150} ex={600} ey={150} text=\"world\" />\n  <Distance sx={150} sy={0} ex={150} ey={200} text=\"hello\" />\n  <Distance sx={400} sy={0} ex={600} ey={200} text=\"🔸\" />\n</Svg>`.trim()}\n        </code>\n      </div>\n\n      <div>\n        <h2>{t('pages.distance.markers')}</h2>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: t('pages.distance.markersDescription')\n          }}\n        />\n        <Svg width={600} height={200} scale>\n          <Distance sx={0} sy={150} ex={600} ey={150} markerEnd='arrow' />\n          <Distance sx={150} sy={0} ex={150} ey={200} markerStart='triangle' />\n          <Distance sx={400} sy={0} ex={600} ey={200} markers='arrow' />\n        </Svg>\n        <code>\n          {`\n<Svg width={600} height={200}>\n  <Distance sx={0} sy={150} ex={600} ey={150} markerEnd='arrow' />\n  <Distance sx={150} sy={0} ex={150} ey={200} markerStart='triangle' />\n  <Distance sx={400} sy={0} ex={600} ey={200} markers='arrow' />\n</Svg>`.trim()}\n        </code>\n      </div>\n\n      <div>\n        <h2>{t('pages.distance.scale')}</h2>\n        <p>{t('pages.distance.scaleDescription')}</p>\n        <Svg width={600} height={200} scale>\n          <Distance\n            sx={0}\n            sy={150}\n            ex={600}\n            ey={150}\n            scale={0.3}\n            scaleUnit={'ft'}\n          />\n          <Distance\n            sx={150}\n            sy={0}\n            ex={150}\n            ey={200}\n            scale={0.3}\n            scaleUnit={'ft'}\n          />\n        </Svg>\n        <code>\n          {`\nconst svgWidth = 600;\nconst representedWidth = 180 // feet\nconst scale = representedWidth / svgWidth\nconst scaleUnit = 'ft'\n<Svg width={600} height={200}>\n  <Distance\n    sx={0}\n    sy={150}\n    ex={600}\n    ey={150}\n    scale={scale}\n    scaleUnit={scaleUnit}\n  />\n  <Distance\n    sx={150}\n    sy={0}\n    ex={150}\n    ey={200}\n    scale={scale}\n    scaleUnit={scaleUnit}\n  />\n</Svg>`.trim()}\n        </code>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { translate as t } from '../../i18n/i18n';\nimport Path, { Svg } from 'react-svg-path';\n\nconst Triangle = ({ x, y, w, h, ...rest }) => {\n  const p = new Path();\n  return p\n    .M(x, y)\n    .l(-w / 2, h)\n    .right(w)\n    .close()\n    .toComponent(rest);\n};\n\nexport const ToComponent = () => {\n  return (\n    <>\n      <h1>{t('pages.toComponent.title')}</h1>\n      <p>{t('pages.toComponent.description')}</p>\n      <h2>{t('common.example')}</h2>\n      <code>{`const Triangle = ({ x, y, w, h, ...rest }) => {\n  const p = new Path();\n  return p\n    .M(x, y)\n    .l(-w / 2, h)\n    .right(w)\n    .close()\n    .toComponent(rest);\n};`}</code>\n      <p>{t('pages.toComponent.description2')}</p>\n      <div>\n        <Svg width={500} height={200} scale>\n          <g transform='translate(125,0)'>\n            {['red', 'blue', 'green'].map((c, i) => (\n              <Triangle key={c} x={i * 100} y={25} w={150} h={150} fill={c} />\n            ))}\n          </g>\n        </Svg>\n      </div>\n      <code>\n        {`\n{['red', 'blue', 'green'].map((c, i) => (\n  <Triangle key={c} x={i * 100} y={25} w={150} h={150} fill={c} />\n))}`.trim()}\n      </code>\n    </>\n  );\n};\n","import React from 'react';\nimport { translate as t } from '../../i18n/i18n';\nconst pathCommands = {\n  primitives: [\n    { cmd: 'A', args: 'rx,ry,rotation,arc,sweep,ex,ey' },\n    { cmd: 'a', args: 'rx, ry,rotation,arc,sweep,ex,ey' },\n    { cmd: 'C', args: 'cx1,cy1,cx2,cy2,ex,ey' },\n    { cmd: 'c', args: 'cx1,cy1,cx2,cy2,ex,ey' },\n    { cmd: 'H', args: 'x' },\n    { cmd: 'h', args: 'x' },\n    { cmd: 'L', args: 'x,y' },\n    { cmd: 'l', args: 'x,y' },\n    { cmd: 'M', args: 'x,y' },\n    { cmd: 'm', args: 'x,y' },\n    { cmd: 'Q', args: 'cx,cy,ex,ey' },\n    { cmd: 'q', args: 'cx,cy,ex,ey' },\n    { cmd: 'S', args: 'cx,cy,ex,ey' },\n    { cmd: 's', args: 'cx,cy,ex,ey' },\n    { cmd: 'T', args: 'ex,ey' },\n    { cmd: 't', args: 'ex,ey' },\n    { cmd: 'V', args: 'y' },\n    { cmd: 'v', args: 'y' }\n  ],\n  friendly: [\n    {\n      cmd: 'arc',\n      args: 'rx,ry,rotation,arc,sweep,ex,ey,relative = false',\n      description: t('pages.path.commands.arc.description')\n    },\n\n    {\n      cmd: 'cCurve',\n      args: 'cx,cy,ex,ey,relative = false',\n      description: t('pages.path.commands.cCurve.description')\n    },\n\n    {\n      cmd: 'horizontalTo',\n      args: 'x,relative = false',\n      description: t('pages.path.commands.horizontalTo.description')\n    },\n\n    {\n      cmd: 'verticalTo',\n      args: 'x,relative = false',\n      description: t('pages.path.commands.verticalTo.description')\n    },\n\n    {\n      cmd: 'lineTo',\n      args: 'x,y,relative = false',\n      description: t('pages.path.commands.lineTo.description')\n    },\n\n    {\n      cmd: 'moveTo',\n      args: 'x,y,relative = false',\n      description: t('pages.path.commands.moveTo.description')\n    },\n\n    {\n      cmd: 'qCurve',\n      args: 'cx,cy,ex,ey,relative = false',\n      description: t('pages.path.commands.qCurve.description')\n    },\n\n    {\n      cmd: 'sCurveTo',\n      args: 'cx,cy,ex,ey,relative = false',\n      description: t('pages.path.commands.sCurveTo.description')\n    },\n\n    {\n      cmd: 'tCurveTo',\n      args: 'cx,cy,ex,ey,relative = false',\n      description: t('pages.path.commands.tCurveTo.description')\n    }\n  ],\n  helpers: [\n    {\n      cmd: 'down',\n      args: 'px',\n      description: t('pages.path.commands.down.description')\n    },\n    {\n      cmd: 'up',\n      args: 'px',\n      description: t('pages.path.commands.up.description')\n    },\n    {\n      cmd: 'right',\n      args: 'px',\n      description: t('pages.path.commands.right.description')\n    },\n    {\n      cmd: 'left',\n      args: 'px',\n      description: t('pages.path.commands.left.description')\n    },\n    {\n      cmd: 'close',\n      description: t('pages.path.commands.close.description')\n    }\n  ],\n  shapes: [\n    {\n      cmd: '.circle',\n      args: 'size, cx, cy',\n      description: t('pages.path.commands.circle.description')\n    },\n\n    {\n      cmd: '.ellipse',\n      args: 'width, height, cx, cy',\n      description: t('pages.path.commands.ellipse.description')\n    },\n\n    {\n      cmd: '.polygon',\n      args: '[points]',\n      description: t('pages.path.commands.polygon.description')\n    },\n\n    {\n      cmd: '.polygram',\n      args: 'size, points, cx, cy, vertexSkip = 2',\n      description: t('pages.path.commands.polygram.description')\n    },\n\n    {\n      cmd: '.polyline',\n      args: '[points], relative = false',\n      description: t('pages.path.commands.polyline.description')\n    },\n\n    {\n      cmd: '.radialLines',\n      args: 'outerSize, innerSize, points, cx, cy',\n      description: t('pages.path.commands.radialLines.description')\n    },\n\n    {\n      cmd: '.rect',\n      args: 'width, height, cx, cy',\n      description: t('pages.path.commands.rect.description')\n    },\n\n    {\n      cmd: '.regPolygon',\n      args: 'size, sides, cx, cy',\n      description: t('pages.path.commands.regPolygon.description')\n    },\n\n    {\n      cmd: '.sector',\n      args: 'cx, cy, size, startAngle, endAngle',\n      description: t('pages.path.commands.sector.description')\n    },\n\n    {\n      cmd: '.segment',\n      args: 'cx, cy, size, startAngle, endAngle',\n      description: t('pages.path.commands.segment.description')\n    },\n\n    {\n      cmd: '.square',\n      args: 'size, cx, cy',\n      description: t('pages.path.commands.square.description')\n    },\n\n    {\n      cmd: '.star',\n      args: 'outerSize, innerSize, points, cx, cy',\n      description: t('pages.path.commands.star.description')\n    },\n\n    {\n      cmd: '.triangle',\n      args: 'size, cx, cy',\n      description: t('pages.path.commands.triangle.description')\n    }\n  ]\n};\n\nexport const PathIntro = () => {\n  return (\n    <>\n      <h1>{t('pages.path.title')}</h1>\n      <p dangerouslySetInnerHTML={{ __html: t('pages.path.intro') }} />\n\n      <h2>{t('common.import')}</h2>\n      <code>import Path from 'react-svg-path'</code>\n\n      <h2>{t('common.example')}</h2>\n      <code>{`<path d=\"M0 0, L0 100\"></path>`}</code>\n\n      <p>{t('pages.path.example')}</p>\n\n      <code>\n        {`const path = new Path().M(0,0).L(0,100);\nconsole.log(path.toString()) // M0 0, L0 100`}\n      </code>\n\n      <h2>{t('pages.path.pathCommands')}</h2>\n      <p>{t('pages.path.pathCommandsIntro')}</p>\n      <ul>\n        {pathCommands.primitives.map(({ cmd, args }, index) => {\n          return (\n            <li key={index}>\n              <b>{cmd}</b>(<i>{args}</i>)\n            </li>\n          );\n        })}\n      </ul>\n      <p>{t('pages.path.pathHelpers')}</p>\n      <ul>\n        {pathCommands.friendly.map(({ cmd, args, description }, index) => {\n          return (\n            <li key={index}>\n              <b>{cmd}</b>(<i>{args}</i>)\n              <ul>\n                <li>{description}</li>\n              </ul>\n            </li>\n          );\n        })}\n      </ul>\n      <p>{t('pages.path.pathAdditionalHelpers')}</p>\n      <ul>\n        {pathCommands.helpers.map(({ cmd, args, description }, index) => {\n          return (\n            <li key={index}>\n              <b>{cmd}</b>(<i>{args}</i>)\n              <ul>\n                <li>{description}</li>\n              </ul>\n            </li>\n          );\n        })}\n      </ul>\n      <p>{t('pages.path.shapes')}</p>\n      <ul>\n        {pathCommands.shapes.map(({ cmd, args, description }, index) => {\n          return (\n            <li key={index}>\n              <b>{cmd}</b>(<i>{args}</i>)\n              <ul>\n                <li>{description}</li>\n              </ul>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\n// https://reacttraining.com/react-router/web/guides/scroll-restoration\nconst ScrollToTop = ({ cb, children, location: { pathname } }) => {\n  useEffect(() => {\n    const contentArea = document.querySelector('.content-area');\n    contentArea.scrollTop = 0;\n    cb && cb();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n\n  return children;\n};\n\nScrollToTop.propTypes = {\n  children: PropTypes.node,\n  location: PropTypes.object\n};\n\nexport default withRouter(ScrollToTop);\n","import React, { useState } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  NavLink\n} from 'react-router-dom';\nimport { basicShapes, curves } from './docs/docs.mjs';\nimport { Nav } from './components/Nav';\n/** demo builders */\nimport { BasicShapeDemo } from './components/demo-builders/BasicShapeDemo';\nimport { CurveDemo } from './components/demo-builders/CurveDemo';\n/** pages */\nimport { Nesting } from './components/pages/nesting';\nimport { Demos } from './components/pages/demos';\nimport { MergeDemo } from './components/pages/merge/MergeDemo';\nimport { Introduction } from './components/pages/Introduction';\nimport { MarkerDemo } from './components/pages/markers/MarkerDemo';\nimport { TextPathDemo } from './components/pages/textpath/TextPathDemo';\nimport { CenterEndDemo } from './components/pages/CenterEndDemo';\nimport { SvgDemo } from './components/pages/svg/SvgDemo';\nimport { DistanceDemo } from './components/pages/distance/DistanceDemo';\nimport { ToComponent } from './components/pages/ToComponent';\nimport { PathIntro } from './components/pages/PathIntro';\nimport ScrollToTop from './components/ScrollToTop';\nimport { Line, Svg } from 'react-svg-path';\n\nimport './App.css';\n\nconst App = () => {\n  const [overlayNav, setOverlayNav] = useState(false);\n  const shapesDemos = Object.keys(basicShapes);\n  const curveDemos = Object.keys(curves);\n\n  return (\n    <Router basename='/'>\n      <header className='app-header'>\n        <div className='flex items-center justify-center pointer'>\n          <Svg\n            className='nav-actuator'\n            width={25}\n            height={25}\n            style={{\n              backgroundColor: 'transparent',\n              outline: 0,\n              marginRight: 10,\n              marginLeft: -10,\n              cursor: 'pointer',\n              borderRadius: '3px',\n              border: '1px solid #999'\n            }}\n            onClick={() => {\n              console.log('onCLick!');\n              setOverlayNav((state) => !state);\n            }}\n          >\n            <Line\n              oy={-7}\n              ox={-10}\n              ex={20}\n              ey={0}\n              stroke='#ddd'\n              strokeWidth={4}\n              relative\n            />\n            <Line\n              ox={-10}\n              ex={20}\n              ey={0}\n              stroke='#ddd'\n              strokeWidth={4}\n              relative\n            />\n            <Line\n              oy={7}\n              ox={-10}\n              ex={20}\n              ey={0}\n              stroke='#ddd'\n              strokeWidth={4}\n              relative\n            />\n          </Svg>\n          <NavLink to='/' style={{ color: 'white' }}>\n            react-svg-path\n          </NavLink>\n        </div>\n        <a\n          style={{ color: 'white' }}\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://github.com/joemaddalone/react-svg-path'\n        >\n          github\n        </a>\n      </header>\n      <main className='app-main'>\n        <Nav overlay={overlayNav} />\n        <div className='content-area' tabIndex={0}>\n          <ScrollToTop cb={() => setOverlayNav(false)}>\n            <Route exact path='/' component={Introduction} />\n            <Route exact path={`/demos`} render={() => <Demos />} />\n            <Route exact path={`/nesting`} render={() => <Nesting />} />\n            <Route exact path={`/pathmerge`} render={() => <MergeDemo />} />\n            <Route exact path={`/path`} render={() => <PathIntro />} />\n            <Route exact path={`/tocomponent`} render={() => <ToComponent />} />\n            <Route exact path={`/markers`} render={() => <MarkerDemo />} />\n            <Route exact path={`/textpath`} render={() => <TextPathDemo />} />\n            <Route exact path={`/centerend`} render={() => <CenterEndDemo />} />\n            <Route exact path={`/distance`} render={() => <DistanceDemo />} />\n            <Route exact path={`/svg`} render={() => <SvgDemo />} />\n            <div className='basic-shapes'>\n              {shapesDemos.map((s, i) => (\n                <Route\n                  key={s}\n                  exact\n                  path={`/${s}`}\n                  render={() => <BasicShapeDemo shape={s} />}\n                />\n              ))}\n              {curveDemos.map((c, i) => (\n                <Route\n                  key={c}\n                  exact\n                  path={`/${c}`}\n                  render={() => <CurveDemo curve={c} />}\n                />\n              ))}\n            </div>\n          </ScrollToTop>\n          <blockquote style={{paddingTop: 120}} />\n        </div>\n      </main>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// eslint-disable-next-line no-unused-vars\nimport i18n from './i18n/i18n';\nimport './util/no-focus-event';\n\nif (process.env.NODE_ENV === 'development') {\n  const axe = require('react-axe');\n  axe(React, ReactDOM, 1000);\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}