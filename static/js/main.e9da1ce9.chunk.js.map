{"version":3,"sources":["util/no-focus-event.js","docs/docs.mjs","i18n/i18n.js","components/Nav.js","components/demo-builders/PointArray.js","components/demo-builders/TwoDArray.js","components/demo-builders/ComponentKnobs.js","components/demo-builders/PathKnobs.js","components/demo-builders/Tabs.js","docs/demos.mjs","components/demo-builders/BasicShapeDemo.js","components/demo-builders/CurveDemo.js","components/pages/nesting/NestingDemo1.js","components/pages/nesting/NestingDemo2.js","components/pages/nesting/NestingDemo3.js","components/pages/nesting/index.js","components/demos/dag/dagSetup.js","components/demos/dag/DagNodes.js","components/demos/complex/Pie.js","components/demos/complex/Donut.js","components/demos/complex/SparkLine.js","components/demos/complex/BarChart/SortControls.js","components/demos/complex/BarChart/Frame.js","components/demos/complex/BarChart/Ticks.js","components/demos/complex/BarChart/Bars.js","components/demos/complex/BarChart/BarChart.js","components/demos/complex/Football/Football.js","components/demos/complex/Dimensions/Dimensions.js","components/demos/targets/Targets.js","components/demos/targets/TargetDemo.js","components/demos/complex/Clock.js","components/demos/Elements/Atom.js","components/demos/Elements/Modal.js","components/demos/Elements/index.js","components/pages/demos/index.js","components/pages/merge/MergeDemo.js","components/pages/Introduction.js","components/pages/markers/MarkerDemo.js","components/pages/textpath/TextPathDemo.js","components/pages/CenterEndDemo.js","components/pages/svg/SvgDemo.js","components/pages/distance/DistanceDemo.js","components/pages/ToComponent.js","components/pages/PathIntro.js","components/ScrollToTop.js","App.js","index.js"],"names":["document","body","addEventListener","e","which","documentElement","classList","remove","add","commonNumberValidator","value","isNaN","pointArrayValidator","arr","Array","length","some","p","Error","every","points","err","message","centeredShapeNestingProps","ex","ey","sx","sy","commonNumber","type","isRequired","validator","cx","description","cy","shorthands","sxy","default","k","exy","cxy","rxy","centerEnd","docs","circle","category","Component","command","args","props","size","nestingProps","ellipse","width","height","kite","dh","lens","omino","shape","a","lined","_ref","polygon","pointsLength","_ref2","polygram","vertexSkip","polyline","relative","_ref3","line","preCommand","preArgs","_ref4","radialLines","outerSize","innerSize","rect","roundedRect","radius","regPolygon","sides","sector","startAngle","endAngle","segment","square","roundedSquare","star","triangle","symX","symI","symH","cross","arc","rx","ry","rotation","sweep","_ref5","cubic","postCommand","cx1","cy1","cx2","cy2","S","s","_ref6","endX","endY","quad","T","t","_ref7","basicShapes","Object","keys","filter","reduce","accum","cur","curves","capitalizeFirst","str","concat","charAt","toUpperCase","slice","i18n","use","Cache","LanguageDetector","init","interpolation","escapeValue","format","split","map","join","capitalizeAll","toLowerCase","resources","en","fallbackLng","react","useSuspense","translate","path","options","namespace","rest","arguments","undefined","ns","Nav","overlay","_jsxs","className","style","paddingBottom","children","_jsx","NavLink","exact","to","sort","c","index","paddingTop","PointArray","label","pointLength","onChange","setPoints","useState","useEffect","flexBasis","pointValues","React","Fragment","htmlFor","from","_","i","current","target","disabled","onClick","splice","padding","push","fill","TwoDArray","Number","ComponentKnobs","id","inputMode","tabIndex","checked","pathAttributes","stroke","strokeWidth","step","strokeMiterlimit","strokeLinecap","strokeDashoffset","strokeDasharray","pattern","strokeLinejoin","strokeOpacity","min","max","fillOpacity","PathKnobs","initData","_initData$k","_initData$k2","_initData$k3","_initData$k4","opt","paddingLeft","Tabs","activeTabIndex","setActiveTabIndex","activeTab","tab","title","transform","basicSvgDimensions","w","h","curveSvgDimensions","demos","svgDimensions","BasicShapeDemo","demoDocs","initialState","d","demoValues","setDemoValues","setPathAttributes","C","Shapes","Svg","_Fragment","trim","sh","shi","scale","maxWidth","JSON","stringify","v","CurveDemo","curve","parse","NestingDemo1","RegPolygon","Circle","Square","genPolylineZag","centerY","y","shift","NestingDemo2","Line","Polyline","Text","dx","dy","Arc","attach","NestingDemo3","dangerouslySetInnerHTML","__html","oy","ox","Nesting","setupDag","async","dir","algo","elk","ELK","elkNodes","elkLinks","items","forEach","item","source","elkGraph","layoutOptions","separateConnectedComponents","edges","layout","algorithms","DagNodes","loading","setLoading","data","setData","setAlgo","createDag","onChangeAlgo","dagSetup","then","catch","finally","createConnectors","Path","sections","M","startPoint","x","bendPoints","b","L","endPoint","toString","squareNodes","circleNodes","name","alert","dominantBaseline","textAnchor","Pie","percentToDegree","sectors","total","percent","Sector","color","Donut","segments","Segment","Grid","cols","rows","close","extra","colWidth","rowHeight","horizontal","vertical","PathMerge","SparkLine","clone","myScale","opts","dataStart","domain","dataStop","chartStart","range","chartStop","pointDistance","parseInt","newDataPoint","xSize","ySize","margin","Rect","SortControls","sorter","setSorter","Frame","margins","left","right","Ticks","ticks","yScale","fontSize","Bars","values","variable","barCount","barWidth","BarChart","variables","currentVariable","setCurrentVariable","sorters","alphaa","localeCompare","alphad","valuea","valued","Math","apply","o","top","bottom","scaleLinear","sortedValues","Football","canvasWidth","scaleProps","scaleUnit","canvasHeight","field","endzoneWidth","playingWidth","tickLength","topTickY","bottomTickY","bottomNumY","topNumY","tickCount","toFixed","commonTickProps","outline","MarkerArrow","open","marginX","marginY","isFifth","abs","Distance","markers","App","quarterWidth","quarterHeight","markerEnd","text","dotted","markerStart","Target1","RadialLines","Target2","Target3","Target4","Target5","Target6","Target7","Target8","_ref8","Target9","_ref9","Target10","_ref10","Triangle","Target11","_ref11","TargetDemo","g","positionByArray","xy","Group","degreeToAngle","division","degree","polarToCartesian","time","Date","second","getSeconds","minute","getMinutes","hour","getHours","millis","getMilliseconds","date","getDate","day","toLocaleDateString","weekday","month","Clock","fontBase","state","setState","interval","setInterval","clearInterval","hoursPoints","radialPoints","minutePoints","hours","point","m","Atom","shells","circ","electron_config","reverse","incrementalRing","shellPoints","times","n","floor","random","getTimes","animationDuration","q","Modal","SymX","elements","xpos","ypos","grid","cells","modal","Table","setOpen","RoundedSquare","stopPropagation","replace","symbol","number","Demos","pieData","nested","sparkData","getRandomInt","ceil","display","flexDirection","Elements","href","rel","val","qty","Dimensions","minHeight","pd","flat","MergeDemo","Introduction","r","offsetY","offsetX","ypoints","MarkerSelector","MarkerDemo","startMarker","setStartMarker","endMarker","setEndMarker","midMarker","setMidMarker","quadDemo","MarkerTriangle","MarkerLine","MarkerSquare","Quad","markerMid","marginLeft","TextPathDemo","exampleText","TextPath","startOffset","textLength","repeat","CenterEndDemo","SvgDemo","DistanceDemo","l","toComponent","ToComponent","pathCommands","primitives","cmd","friendly","helpers","shapes","PathIntro","ScrollToTop","cb","location","pathname","querySelector","scrollTop","propTypes","PropTypes","node","object","withRouter","overlayNav","setOverlayNav","shapesDemos","curveDemos","Router","basename","backgroundColor","marginRight","cursor","borderRadius","border","console","log","Route","component","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e9da1ce9.chunk.js","sourcesContent":["(() => {\n  document.body.addEventListener('keyup', (e) => {\n    if (e.which === 9) {\n      document.documentElement.classList.remove('no-focus-outline');\n    } else {\n      document.documentElement.classList.add('no-focus-outline');\n    }\n  });\n\n  document.body.addEventListener('click', () => {\n    document.documentElement.classList.add('no-focus-outline');\n  });\n})();\n","const commonNumberValidator = (value) => !isNaN(value);\nconst pointArrayValidator = (arr) => {\n  try {\n    if (\n      !(arr instanceof Array) ||\n      !arr.length ||\n      arr.some((p) => !(p instanceof Array))\n    ) {\n      throw new Error('bad points, bad!.');\n    }\n    const result = arr.every((points) => points.every((p) => !isNaN(p)));\n    return result;\n  } catch (err) {\n    return err.message;\n  }\n};\n\nconst nestedArrayValidator = (arr) => {\n  try {\n    if (\n      !(arr instanceof Array) ||\n      !arr.length ||\n      arr.some((p) => !(p instanceof Array))\n    ) {\n      throw new Error('not a 2s array, bad!.');\n    }\n    const result = arr.every((a) => a instanceof Array);\n    return result;\n  } catch (err) {\n    return err.message;\n  }\n};\n\nconst centeredShapeNestingProps = {\n  ex: 'cx',\n  ey: 'cy',\n  sx: 'cx',\n  sy: 'cy'\n};\n\nconst commonNumber = {\n  type: 'number',\n  isRequired: true,\n  validator: commonNumberValidator\n};\n\nconst cx = {\n  ...commonNumber,\n  description: 'Center x coordinate of the shape.'\n};\n\nconst cy = {\n  ...commonNumber,\n  description: 'Center x coordinate of the shape.'\n};\n\nexport const shorthands = {\n  sxy: {\n    ...commonNumber,\n    isRequired: false,\n    default: null,\n    k: 'sxy',\n    p: ['sx', 'sy'],\n    description:\n      'If sx and sy are equal values you can use the shortcut \"sxy\" to set both at once.'\n  },\n  exy: {\n    ...commonNumber,\n    isRequired: false,\n    default: null,\n    k: 'exy',\n    p: ['ex', 'ey'],\n    description:\n      'If ex and ey are equal values you can use the shortcut \"exy\" to set both at once.'\n  },\n  cxy: {\n    ...commonNumber,\n    isRequired: false,\n    default: null,\n    k: 'cxy',\n    p: ['cx', 'cy'],\n    description:\n      'If cx and cy are equal values you can use the shortcut \"cxy\" to set both at once.'\n  },\n  rxy: {\n    ...commonNumber,\n    isRequired: false,\n    default: null,\n    k: 'rxy',\n    p: ['rx', 'ry'],\n    description:\n      'If rx and ry are equal values you can use the shortcut \"rxy\" to set both at once.'\n  }\n};\n\nconst centerEnd = {\n  default: true,\n  type: 'boolean',\n  isRequired: false,\n  description:\n    'Determines whether cursor should return to cx & cy as a last step.'\n};\n\nconst docs = {\n  circle: {\n    category: 'basicShapes',\n    Component: 'Circle',\n    command: 'circle',\n    args: ['size', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Circle is drawn from center points (cx & cy). The cursor is then moved to the center points.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Circumference of the Circle.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  ellipse: {\n    category: 'basicShapes',\n    Component: 'Ellipse',\n    command: 'ellipse',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Ellipse is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the Ellipse.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the Ellipse.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  kite: {\n    category: 'basicShapes',\n    Component: 'Kite',\n    command: 'kite',\n    args: ['width', 'height', 'dh', 'cx', 'cy', 'centerEnd'],\n    description:\n      '.kite is drawn from center point (cx & cy). dh = position of the left & right points from the top of the shape. The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the Kite.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the Kite.'\n      },\n      dh: {\n        ...commonNumber,\n        description:\n          'Vertical position of the left and right points from the top.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  lens: {\n    category: 'basicShapes',\n    Component: 'Lens',\n    command: 'lens',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Lens is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the Lens.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the Lens.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  omino: {\n    category: 'basicShapes',\n    Component: 'Omino',\n    command: 'omino',\n    args: ['size', 'shape', 'sx', 'sy', 'lined'],\n    description:\n      'Omino is drawn based on the positive values positioned in an 2d array. Think Tetris pieces.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Size of the squares.'\n      },\n      shape: {\n        type: '2d-array',\n        isRequired: true,\n        validator: nestedArrayValidator,\n        description: '2d array of the shape.'\n      },\n      sx: {\n        ...commonNumber,\n        description: 'Starting x coordinate for left.'\n      },\n      sy: {\n        ...commonNumber,\n        description: 'Starting y coordinate for top.'\n      },\n      lined: {\n        default: false,\n        type: 'boolean',\n        isRequired: false,\n        description: 'Draw inner lines or not.'\n      }\n    },\n    shorthands: [shorthands.sxy],\n    nestingProps: ({ sx, sy }) => {\n      return { ex: sx, ey: sy, sx, sy };\n    }\n  },\n  polygon: {\n    category: 'basicShapes',\n    Component: 'Polygon',\n    command: 'polygon',\n    args: ['points'],\n    description:\n      'Polygon accepts an array of [x, y] coordinates and then draws lines connecting those points.  The path will start from the first point and end on the first point - closing the shape.',\n    props: {\n      points: {\n        type: 'point-array',\n        pointsLength: 2,\n        isRequired: true,\n        validator: pointArrayValidator,\n        description: 'x, y, points of the polygon.'\n      }\n    },\n    nestingProps: ({ points }) => {\n      const [sx, sy] = points[0];\n      const [ex, ey] = points[points.length - 1];\n      return { ex: sx, ey: sy, sx: ex, sy: ey };\n    }\n  },\n  polygram: {\n    category: 'basicShapes',\n    Component: 'Polygram',\n    command: 'polygram',\n    args: ['size', 'points', 'cx', 'cy', 'vertexSkip', 'centerEnd'],\n    description:\n      'Polygram is drawn from center point (cx & cy). The first outer point of the shape will always be at top center. The cursor is then moved to the center point.  Skipping a vertex is what makes a polygram appear as intersecting lines, a vertexSkip of 1 will result in a regular polygon.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Size of the underlying polygon.'\n      },\n      points: {\n        ...commonNumber,\n        description: 'Number of points to create.'\n      },\n      cx,\n      cy,\n      vertexSkip: {\n        ...commonNumber,\n        isRequired: false,\n        default: 2,\n        description:\n          'Integer representing which vertex to go to next relative to current.'\n      },\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  polyline: {\n    category: 'basicShapes',\n    Component: 'Polyline',\n    command: 'polyline',\n    args: ['points', 'relative'],\n    description:\n      'Polyline accepts an array of [x, y] coordinates and then draws lines connecting those points.  The path will start from the first point and end on the last.  points can be absolute or relative.',\n    props: {\n      points: {\n        type: 'point-array',\n        pointsLength: 2,\n        isRequired: true,\n        validator: pointArrayValidator,\n        description: 'x, y, points of the Polyline.'\n      },\n      relative: {\n        type: 'boolean',\n        isRequired: false,\n        default: false,\n        description: 'If set to true all points will be relative.'\n      }\n    },\n    nestingProps: ({ points }) => {\n      const [sx, sy] = points[0];\n      const [ex, ey] = points[points.length - 1];\n      return { ex: sx, ey: sy, sx: ex, sy: ey };\n    }\n  },\n  line: {\n    category: 'basicShapes',\n    Component: 'Line',\n    command: 'lineTo',\n    args: ['ex', 'ey', 'relative'],\n    preCommand: 'moveTo',\n    preArgs: ['sx', 'sy'],\n    description:\n      'Line is drawn from starting points (sx & sy) to ending points (ex & ey). sx (starting x) & sy (starting y) will always be absolutely positioned, however with relative=true the ex and ey points can relative to sx & sy.',\n    props: {\n      sx: {\n        ...commonNumber,\n        description: 'Starting x coordinate for the Line.'\n      },\n      sy: {\n        ...commonNumber,\n        description: 'Starting y coordinate for the Line.'\n      },\n      ex: {\n        ...commonNumber,\n        description: 'Ending x coordinate for the Line.'\n      },\n      ey: {\n        ...commonNumber,\n        description: 'Ending y coordinate for the Line.'\n      },\n      relative: {\n        type: 'boolean',\n        default: false,\n        isRequired: true,\n        description: 'If set to true ex & ey will become relative to sx & sy.'\n      }\n    },\n    nestingProps: ({ sx, sy, ex, ey }) => {\n      return { ex: sx, ey: sy, sx: ex, sy: ey };\n    },\n    shorthands: [shorthands.exy, shorthands.sxy]\n  },\n  radialLines: {\n    category: 'basicShapes',\n    Component: 'RadialLines',\n    command: 'radialLines',\n    args: ['outerSize', 'innerSize', 'points', 'cx', 'cy', 'centerEnd'],\n    description:\n      'RadialLines is drawn from center point (cx & cy). The first outer point of the shape will always be at top center. The cursor is then moved to the center point.',\n    props: {\n      outerSize: {\n        ...commonNumber,\n        description: 'Circumference of the outer circle.'\n      },\n      innerSize: {\n        ...commonNumber,\n        description: 'Circumference of the inner circle.'\n      },\n      points: {\n        ...commonNumber,\n        description: 'Number of lines to draw.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  rect: {\n    category: 'basicShapes',\n    Component: 'Rect',\n    command: 'rect',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Rect is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the Rect.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the Rect.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  roundedRect: {\n    category: 'basicShapes',\n    Component: 'RoundedRect',\n    command: 'roundedRect',\n    args: ['width', 'height', 'radius', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Rect is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the Rect.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the Rect.'\n      },\n      radius: {\n        ...commonNumber,\n        description: 'Radius for the corners.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  regPolygon: {\n    category: 'basicShapes',\n    Component: 'RegPolygon',\n    command: 'regPolygon',\n    args: ['size', 'sides', 'cx', 'cy', 'centerEnd'],\n    description:\n      'RegPolygon is drawn from center point (cx & cy). The first outer point of the shape will always be at top center. The cursor is then moved to the center point.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Size of the RegPolygon.'\n      },\n      sides: {\n        ...commonNumber,\n        description: 'Number of sides of the RegPolygon.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  sector: {\n    category: 'basicShapes',\n    Component: 'Sector',\n    command: 'sector',\n    args: ['cx', 'cy', 'size', 'startAngle', 'endAngle', 'centerEnd'],\n    description:\n      'Sector is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      cx,\n      cy,\n      size: {\n        ...commonNumber,\n        description: 'Circumference of the Sector.'\n      },\n      startAngle: {\n        ...commonNumber,\n        description: 'Start angle of the Sector.  0 = top center.'\n      },\n      endAngle: {\n        ...commonNumber,\n        description: 'End angle of the Sector.  0 = top center.'\n      },\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  segment: {\n    category: 'basicShapes',\n    Component: 'Segment',\n    command: 'segment',\n    args: ['cx', 'cy', 'size', 'startAngle', 'endAngle', 'centerEnd'],\n    description:\n      'Segment is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      cx,\n      cy,\n      size: {\n        ...commonNumber,\n        description: 'Circumference of the Segment.'\n      },\n      startAngle: {\n        ...commonNumber,\n        description: 'Start angle of the Segment.  0 = top center.'\n      },\n      endAngle: {\n        ...commonNumber,\n        description: 'End angle of the Segment.  0 = top center.'\n      },\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  square: {\n    category: 'basicShapes',\n    Component: 'Square',\n    command: 'square',\n    args: ['size', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Square is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Width &  height of the Square.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  roundedSquare: {\n    category: 'basicShapes',\n    Component: 'RoundedSquare',\n    command: 'roundedSquare',\n    args: ['size', 'radius', 'cx', 'cy', 'centerEnd'],\n    description:\n      'RoundedSquare is drawn from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Width &  height of the Square.'\n      },\n      radius: {\n        ...commonNumber,\n        description: 'Radius for the corners.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  star: {\n    category: 'basicShapes',\n    Component: 'Star',\n    command: 'star',\n    args: ['outerSize', 'innerSize', 'points', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Star is drawn from center point (cx & cy). The first outer point of the shape will always be at top center. The cursor is then moved to the center point.',\n    props: {\n      outerSize: {\n        ...commonNumber,\n        description: 'The outer circumference where points will reach.'\n      },\n      innerSize: {\n        ...commonNumber,\n        description: 'The inner circumference where points will end.'\n      },\n      points: {\n        ...commonNumber,\n        description: 'Number of points for the Star.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  triangle: {\n    category: 'basicShapes',\n    Component: 'Triangle',\n    command: 'triangle',\n    args: ['size', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Triangle draws an equilateral triangle from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      size: {\n        ...commonNumber,\n        description: 'Size of the Tirangle.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  symX: {\n    category: 'basicShapes',\n    Component: 'SymX',\n    command: 'symX',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'SymX draws an X shape from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the X.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the X.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  symI: {\n    category: 'basicShapes',\n    Component: 'SymI',\n    command: 'symI',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'SymI draws an I shape from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the I.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the I.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  symH: {\n    category: 'basicShapes',\n    Component: 'SymH',\n    command: 'symH',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'SymH draws an H shape from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the H.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the H.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  cross: {\n    category: 'basicShapes',\n    Component: 'Cross',\n    command: 'cross',\n    args: ['width', 'height', 'cx', 'cy', 'centerEnd'],\n    description:\n      'Cross draws an \"cross\" shape from center point (cx & cy). The cursor is then moved to the center point.',\n    props: {\n      width: {\n        ...commonNumber,\n        description: 'Width of the Cross.'\n      },\n      height: {\n        ...commonNumber,\n        description: 'Height of the Cross.'\n      },\n      cx,\n      cy,\n      centerEnd\n    },\n    nestingProps: centeredShapeNestingProps,\n    shorthands: [shorthands.cxy]\n  },\n  arc: {\n    category: 'curves',\n    Component: 'Arc',\n    command: 'arc',\n    args: ['rx', 'ry', 'rotation', 'arc', 'sweep', 'ex', 'ey', 'relative'],\n    preCommand: 'moveTo',\n    preArgs: ['sx', 'sy'],\n    description: 'An Arc segment draws a segment of an ellipse.',\n    props: {\n      sx: {\n        ...commonNumber,\n        description: 'Starting x coordinate for the Arc.'\n      },\n      sy: {\n        ...commonNumber,\n        description: 'Starting y coordinate for the Arc.'\n      },\n      rx: {\n        ...commonNumber,\n        description: 'Width of the underlying ellipse of the Arc.'\n      },\n      ry: {\n        ...commonNumber,\n        description: 'Height of the underlying ellipse of the Arc.'\n      },\n      rotation: {\n        type: 'number',\n        validator: commonNumberValidator,\n        default: 0,\n        isRequired: false,\n        description: 'Rotation of the underlying ellipse of the Arc.'\n      },\n      arc: {\n        type: 'number',\n        validator: commonNumberValidator,\n        default: 0,\n        isRequired: false,\n        description:\n          'Large arc flag: this says whether to follow the larger or smaller part of the underlying ellipse.'\n      },\n      sweep: {\n        type: 'number',\n        validator: commonNumberValidator,\n        default: 0,\n        isRequired: false,\n        description:\n          'Sweep flag: think of this as direction flag, follow a clockwise or counterclockwise path along the underlying ellipse.'\n      },\n      ex: {\n        ...commonNumber,\n        description: 'Ending x coordinate for the Arc.'\n      },\n      ey: {\n        ...commonNumber,\n        description: 'Ending y coordinate for the Arc.'\n      },\n      relative: {\n        type: 'boolean',\n        default: false,\n        isRequired: false,\n        description:\n          'If set to true all points after sx & sy will become relative to sx & sy.'\n      }\n    },\n    nestingProps: ({ sx, sy, ex, ey }) => {\n      return { ex: sx, ey: sy, sx: ex, sy: ey };\n    },\n    shorthands: [shorthands.exy, shorthands.sxy, shorthands.rxy]\n  },\n  cubic: {\n    category: 'curves',\n    Component: 'Cubic',\n    command: 'cCurve',\n    args: ['cx1', 'cy1', 'cx2', 'cy2', 'ex', 'ey'],\n    preCommand: 'moveTo',\n    preArgs: ['sx', 'sy'],\n    postCommand: 's',\n    description:\n      'Cubic is drawn from an sx and sy to an ex and ey with two control points (cx1+cy1 & cx2+cy2).',\n    props: {\n      sx: {\n        ...commonNumber,\n        description: 'Starting x coordinate for the Cubic.'\n      },\n      sy: {\n        ...commonNumber,\n        description: 'Starting y coordinate for the Cubic.'\n      },\n      cx1: {\n        ...commonNumber,\n        description: 'x coordinate for control point 1.'\n      },\n      cy1: {\n        ...commonNumber,\n        description: 'y coordinate for control point 1.'\n      },\n      cx2: {\n        ...commonNumber,\n        description: 'x coordinate for control point 2.'\n      },\n      cy2: {\n        ...commonNumber,\n        description: 'y coordinate for control point 2.'\n      },\n      ex: {\n        ...commonNumber,\n        description: 'Ending x coordinate for the Cubic.'\n      },\n      ey: {\n        ...commonNumber,\n        description: 'Ending y coordinate for the Cubic.'\n      },\n      S: {\n        type: 'point-array',\n        pointsLength: 4,\n        validator: pointArrayValidator,\n        isRequired: false,\n        description:\n          'Optionally String together multiple Cubic wit an array consisting of 2 or more control points.'\n      },\n      s: {\n        type: 'point-array',\n        pointsLength: 4,\n        validator: pointArrayValidator,\n        isRequired: false,\n        description:\n          'Optional relative \"smoooth curve\" array consisting of 2 or more control points.'\n      },\n      relative: {\n        type: 'boolean',\n        default: false,\n        isRequired: false,\n        description:\n          'If set to true all points after sx & sy will become relative to sx & sy.'\n      }\n    },\n    nestingProps: ({ sx, sy, ex, ey, S }) => {\n      let endX = ex;\n      let endY = ey;\n      if (S && S.length) {\n        endX = S[S.length - 1][0];\n        endY = S[S.length - 1][1];\n      }\n      return { ex: sx, ey: sy, sx: endX, sy: endY };\n    },\n    shorthands: [shorthands.exy, shorthands.sxy]\n  },\n  quad: {\n    category: 'curves',\n    Component: 'Quad',\n    command: 'qCurve',\n    args: ['cx', 'cy', 'ex', 'ey'],\n    preCommand: 'moveTo',\n    preArgs: ['sx', 'sy'],\n    postCommand: 't',\n    description:\n      'Quad is drawn from an sx and sy to an ex and ey with one control points (cx & cy).',\n    props: {\n      sx: {\n        ...commonNumber,\n        description: 'Starting x coordinate for the Quad.'\n      },\n      sy: {\n        ...commonNumber,\n        description: 'Starting y coordinate for the Quad.'\n      },\n      cx: {\n        ...commonNumber,\n        description: 'x coordinate for the control point.'\n      },\n      cy: {\n        ...commonNumber,\n        description: 'y coordinate for the control point.'\n      },\n      ex: {\n        ...commonNumber,\n        description: 'Ending x coordinate for the Quad.'\n      },\n      ey: {\n        ...commonNumber,\n        description: 'Ending y coordinate for the Quad.'\n      },\n      T: {\n        type: 'point-array',\n        pointsLength: 2,\n        validator: pointArrayValidator,\n        isRequired: false,\n        description: 'String together multiple Quad curves.'\n      },\n      t: {\n        type: 'point-array',\n        pointsLength: 2,\n        validator: pointArrayValidator,\n        isRequired: false,\n        description:\n          'String together multiple Quad curves where coordinates are relative.'\n      },\n      relative: {\n        type: 'boolean',\n        default: false,\n        isRequired: false,\n        description:\n          'If set to true all points after sx & sy will become relative to sx & sy.'\n      }\n    },\n    nestingProps: ({ sx, sy, ex, ey, T }) => {\n      let endX = ex;\n      let endY = ey;\n      if (T && T.length) {\n        endX = T[T.length - 1][0];\n        endY = T[T.length - 1][1];\n      }\n      return { ex: sx, ey: sy, sx: endX, sy: endY };\n    },\n    shorthands: [shorthands.exy, shorthands.sxy, shorthands.cxy]\n  }\n};\n\nconst buildBasicShapes = () =>\n  Object.keys(docs)\n    .filter((k) => docs[k].category === 'basicShapes')\n    .reduce((accum, cur) => ({ ...accum, [cur]: docs[cur] }), {});\n\nconst buildCurves = () =>\n  Object.keys(docs)\n    .filter((k) => docs[k].category === 'curves')\n    .reduce((accum, cur) => ({ ...accum, [cur]: docs[cur] }), {});\n\nexport const basicShapes = buildBasicShapes();\nexport const curves = buildCurves();\n\nexport default docs;","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Cache from 'i18next-localstorage-cache';\nimport en from './en.json';\n\nconst capitalizeFirst = (str) =>\n  `${str.charAt(0).toUpperCase()}${str.slice(1)}`;\n\nconst capitalizeAll = (str) => {\n  if (!str) return;\n  return str\n    .split(' ')\n    .map((str) => capitalizeFirst(str))\n    .join(' ');\n};\n\ni18n\n  .use(Cache)\n  .use(LanguageDetector)\n  .init({\n    interpolation: {\n      escapeValue: false,\n      format: function (value, format) {\n        switch (format) {\n          case 'uppercase':\n            return value.toUpperCase();\n          case 'capitalize':\n            return capitalizeAll(value);\n          case 'lowercase':\n            return value.toLowerCase();\n          case 'sentence':\n            return capitalizeFirst(value);\n          default:\n            return value;\n        }\n      }\n    },\n    resources: { en },\n    fallbackLng: 'en',\n    react: {\n      useSuspense: false\n    }\n  });\n\nexport const setNamespace = (keys) => (value, options = {}) => {\n  return i18n.t(value, { ns: [...keys], ...options }) || value;\n};\n\nexport const translate = (path, options) => {\n  const [namespace, ...rest] = path.split('.');\n  const t = setNamespace([namespace]);\n  return t(rest.join('.'), options);\n};\n\nexport default i18n;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { basicShapes, curves } from '../docs/docs.mjs';\nimport { translate as t } from '../i18n/i18n';\nimport './Nav.css';\n\nexport const Nav = ({ overlay }) => {\n  return (\n    <div\n      className={`nav-area ui vertical menu ${overlay ? 'overlay' : ''}`}\n      style={{ paddingBottom: overlay ? 0 : 50 }}\n    >\n      <div className='item'>\n        <div className='menu'>\n          <NavLink exact className='item' to='/'>\n            {t('nav.introduction')}\n          </NavLink>\n          <NavLink exact className='item' to='/demos'>\n            Demos\n          </NavLink>\n        </div>\n      </div>\n      <div className='item'>\n        <div className='header'>{t('nav.usage')}</div>\n        <div className='menu'>\n          <NavLink className='item' to='/path'>\n            Path\n          </NavLink>\n          <NavLink className='item' to='/tocomponent'>\n            .toComponent()\n          </NavLink>\n        </div>\n      </div>\n      <div className='item'>\n        <div className='active  header'>{t('nav.shapes')}</div>\n        <div className='menu'>\n          {Object.keys(basicShapes)\n            .sort()\n            .map((c, index) => (\n              <NavLink\n                key={c}\n                className='item'\n                to={`/${basicShapes[c].Component.toLowerCase()}`}\n              >\n                {basicShapes[c].Component}\n              </NavLink>\n            ))}\n        </div>\n      </div>\n      <div className='item'>\n        <div className='active  header'>{t('nav.curves')}</div>\n        <div className='menu'>\n          {Object.keys(curves)\n            .sort()\n            .map((c, index) => (\n              <NavLink\n                key={c}\n                className='item'\n                to={`/${curves[c].Component.toLowerCase()}`}\n              >\n                {curves[c].Component}\n              </NavLink>\n            ))}\n        </div>\n      </div>\n      <div className='item'>\n        <div className=' header'>{t('nav.behaviors')}</div>\n        <div className='menu'>\n          <NavLink className='item' to='/nesting'>\n            {t('nav.nesting')}\n          </NavLink>\n          <NavLink className='item' to={`/centerend`}>\n            centerEnd\n          </NavLink>\n        </div>\n      </div>\n      <div className='item'>\n        <div className='active  header'>{t('nav.additionalComponents')}</div>\n        <div className='menu'>\n          <NavLink className='item' to={`/distance`}>\n            Distance\n          </NavLink>\n          <NavLink className='item' to={`/markers`}>\n            Markers\n          </NavLink>\n          <NavLink className='item' to='/pathmerge'>\n            PathMerge\n          </NavLink>\n          <NavLink className='item' to={`/svg`}>\n            Svg\n          </NavLink>\n          <NavLink className='item' to={`/textpath`}>\n            TextPath\n          </NavLink>\n        </div>\n      </div>\n      <blockquote style={{paddingTop: 80}} />\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { translate as t } from '../../i18n/i18n';\n\nexport const PointArray = ({ label, value, pointLength, onChange }) => {\n  const [points, setPoints] = useState(value || [[0, 0]]);\n  useEffect(() => {\n    onChange(label, points);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [points]);\n\n  return (\n    <div\n      className='flex flex-wrap items-center'\n      style={{\n        flexBasis: '100%',\n        width: '100%'\n      }}\n    >\n      {points.map((p, index) => {\n        const pointValues =\n          pointLength === 2 ? ['x', 'y'] : ['x2', 'y2', 'x', 'y'];\n        return (\n          <React.Fragment key={index}>\n            <div className='ui labeled input' style={{ width: '92%' }}>\n              <label htmlFor='amount' className='ui label'>\n                {label}-{index} {pointValues.join(', ')}\n              </label>\n              {Array.from({ length: pointLength }).map((_, i) => {\n                return (\n                  <input\n                    aria-label={pointValues[i]}\n                    key={`${index}-${i}`}\n                    style={{ width: `${60 / pointLength}%` }}\n                    type='number'\n                    value={p[i]}\n                    onChange={(e) =>\n                      setPoints((current) => {\n                        current[index][i] = +e.target.value;\n                        return [...current];\n                      })\n                    }\n                  />\n                );\n              })}\n            </div>\n            <button\n              key={`remove-${index}`}\n              disabled={points.length === 1}\n              onClick={() => {\n                if (points.length > 1) {\n                  setPoints((current) => {\n                    current.splice(index, 1);\n                    return [...current];\n                  });\n                }\n              }}\n              className='mini ui button negative'\n            >\n              X\n            </button>\n          </React.Fragment>\n        );\n      })}\n      <div\n        style={{ width: '100%', padding: 10 }}\n        className='flex justify-center'\n      >\n        <button\n          onClick={() => {\n            setPoints((current) => {\n              current.push(Array.from({ length: pointLength }).fill(0));\n              return [...current];\n            });\n          }}\n          className='small ui button positive'\n        >\n          {t('common.addPoint')}\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nexport const TwoDArray = ({ label, value, pointLength, onChange }) => {\n  const [points, setPoints] = useState(value || [[0, 0]]);\n  useEffect(() => {\n    onChange(label, points);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [points]);\n\n  return (\n    <div\n      className='flex flex-wrap items-center'\n      style={{\n        flexBasis: '100%',\n        width: '100%'\n      }}\n    >\n      {points.map((p, index) => {\n        return (\n          <React.Fragment key={index}>\n            <div className='ui labeled input' style={{ width: '92%' }}>\n              <label htmlFor='amount' className='ui label'>\n                {`row ${index}`}\n              </label>\n\n              <input\n                aria-label={p}\n                key={index}\n                type='text'\n                value={p.join(',')}\n                onChange={(e) =>\n                  setPoints((current) => {\n                    current[index] = e.target.value.split(',').map(Number);\n                    return [...current];\n                  })\n                }\n              />\n            </div>\n            <button\n              key={`remove-${index}`}\n              disabled={points.length === 1}\n              onClick={() => {\n                if (points.length > 0) {\n                  setPoints((current) => {\n                    current.splice(index, 1);\n                    return [...current];\n                  });\n                }\n              }}\n              className='mini ui button negative'\n            >\n              X\n            </button>\n          </React.Fragment>\n        );\n      })}\n      <div\n        style={{ width: '100%', padding: 10 }}\n        className='flex justify-center'\n      >\n        <button\n          onClick={() => {\n            setPoints((current) => {\n              current.push(Array.from({ length: pointLength }).fill(0));\n              return [...current];\n            });\n          }}\n          className='small ui button positive'\n        >\n          Add Row\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { PointArray } from './PointArray';\nimport { TwoDArray } from './TwoDArray';\n\nexport const ComponentKnobs = ({\n  label,\n  type,\n  value,\n  onChange,\n  pointLength\n}) => {\n  if (type === 'number') {\n    return (\n      <div className='ui labeled input'>\n        <label htmlFor={label} className='ui label'>\n          {label}\n        </label>\n        <input\n          id={label}\n          inputMode='numeric'\n          type='number'\n          value={value}\n          onChange={(e) => onChange(label, +e.target.value)}\n        />\n      </div>\n    );\n  }\n  if (type === 'point-array') {\n    return (\n      <PointArray\n        value={value}\n        inputMode='numeric'\n        pointLength={pointLength}\n        onChange={onChange}\n        label={label}\n      />\n    );\n  }\n  if (type === '2d-array') {\n    return (\n      <TwoDArray\n        value={value}\n        inputMode='numeric'\n        pointLength={pointLength}\n        onChange={onChange}\n        label={label}\n      />\n    );\n  }\n  if (type === 'boolean') {\n    return (\n      <div\n        className='flex flex-wrap items-center'\n        style={{\n          flexBasis: '100%',\n          width: '100%',\n          padding: '10px'\n        }}\n      >\n        <div className='field'>\n          <div className='ui checkbox'>\n            <input\n              id={label}\n              type='checkbox'\n              tabIndex='0'\n              checked={value}\n              onChange={(e) => onChange(label, e.target.checked)}\n            />\n            <label htmlFor={label}>{label}</label>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return null;\n};\n","import React from 'react';\nconst pathAttributes = {\n  stroke: {\n    type: 'color',\n    default: '#0e98dd'\n  },\n  fill: {\n    type: 'color',\n    default: '#ffffff'\n  },\n  strokeWidth: {\n    type: 'number',\n    default: 1,\n    step: 0.5\n  },\n  strokeMiterlimit: {\n    type: 'number',\n    default: 4\n  },\n  strokeLinecap: {\n    type: 'select',\n    default: 'butt',\n    options: [\n      { label: 'butt', value: 'butt' },\n      { label: 'round', value: 'round' },\n      { label: 'square', value: 'square' }\n    ]\n  },\n  strokeDashoffset: {\n    type: 'number',\n    default: 0\n  },\n  strokeDasharray: {\n    type: 'string',\n    default: 0,\n    pattern: /^(\\s*[0-9]+\\s*)+/\n  },\n  strokeLinejoin: {\n    default: 'miter',\n    options: [\n      { label: 'arcs', value: 'arcs' },\n      { label: 'bevel', value: 'bevel' },\n      { label: 'miter', value: 'miter' },\n      { label: 'miter-clip', value: 'miter-clip' },\n      { label: 'round', value: 'round' }\n    ]\n  },\n  strokeOpacity: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    default: 1,\n    step: 0.1\n  },\n  fillOpacity: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    default: 1,\n    step: 0.1\n  }\n};\n\nexport const PathKnobs = ({ onChange, initData }) => {\n  return (\n    <form>\n      {Object.keys(pathAttributes).map((k, index) => {\n        // eslint-disable-next-line default-case\n        switch (pathAttributes[k].type) {\n          case 'number':\n            return (\n              <div key={index} className='ui labeled input'>\n                <label htmlFor={k} className='ui label'>\n                  {k}\n                </label>\n                <input\n                  id={k}\n                  type='number'\n                  inputMode=\"numeric\"\n                  max={pathAttributes[k].max || null}\n                  min={pathAttributes[k].min || null}\n                  step={pathAttributes[k].step || null}\n                  value={initData?.[k] ?? pathAttributes[k].default}\n                  onChange={(e) => onChange(+e.target.value, k)}\n                />\n              </div>\n            );\n          case 'select':\n            return (\n              <div key={index} className='ui labeled input'>\n                <label htmlFor={k} className='ui label'>\n                  {k}\n                </label>\n                <select\n                  className='ui fluid dropdown'\n                  id={k}\n                  value={initData?.[k] ?? pathAttributes[k].default}\n                  onChange={(e) => onChange(e.target.value, k)}\n                >\n                  {pathAttributes[k].options.map((opt, index) => (\n                    <option key={opt.value} value={opt.value}>\n                      {opt.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            );\n          case 'string':\n            return (\n              <div key={index} className='ui labeled input'>\n                <label htmlFor={k} className='ui label'>\n                  {k}\n                </label>\n                <input\n                  id={k}\n                  type='text'\n                  pattern={pathAttributes[k].pattern}\n                  value={initData?.[k] ?? pathAttributes[k].default}\n                  onChange={(e) => onChange(e.target.value, k)}\n                />\n              </div>\n            );\n          case 'color':\n            return (\n              <div key={index} className='ui labeled input'>\n                <label htmlFor={k} className='ui label'>\n                  {k}\n                </label>\n                <input\n                  id={k}\n                  style={{\n                    paddingLeft: 0,\n                    paddingTop: 0,\n                    paddingBottom: 0,\n                    width: '150px',\n                    height: 35\n                  }}\n                  value={initData?.[k] ?? pathAttributes[k].default}\n                  type='color'\n                  onChange={(e) => onChange(e.target.value, k)}\n                />\n              </div>\n            );\n          default:\n            return null;\n        }\n      })}\n    </form>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./Tabs.css\";\n\nexport const Tabs = props => {\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const activeTab = props.children[activeTabIndex];\n  return (\n    <div>\n      <div className=\"tabs\">\n        {props.children.map((tab, i) => (\n          <button\n            className=\"tab-btn\"\n            onClick={() => {\n              setActiveTabIndex(i);\n            }}\n            key={i}\n          >\n            {tab.props.title}\n          </button>\n        ))}\n      </div>\n      <div className=\"tab-indicator-container\">\n        <div\n          className=\"tab-indicator\"\n          style={{\n            width: 100 / props.children.length + \"%\",\n            transform: `translateX(${activeTabIndex * 100}%)`\n          }}\n        />\n      </div>\n      <div className=\"tab-content\">{activeTab.props.children}</div>\n    </div>\n  );\n};\n","const basicSvgDimensions = {\n  w: 800,\n  h: 150\n};\nconst curveSvgDimensions = {\n  w: 800,\n  h: 200\n};\nconst demos = {\n  basicShapes: {\n    circle: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 95,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    ellipse: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 150,\n        height: 75,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    kite: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 60,\n        height: 75,\n        dh: 25,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    lens: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 150,\n        height: 75,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    polygon: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        points: [\n          [10, 60],\n          [40, 0],\n          [70, 60],\n          [40, 120]\n        ]\n      }\n    ],\n    polygram: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 120,\n        points: 5,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2,\n        vertexSkip: 2\n      }\n    ],\n    polyline: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        points: [\n          [400, 60],\n          [430, 0],\n          [460, 60],\n          [430, 120]\n        ]\n      }\n    ],\n    line: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        sx: 10,\n        sy: 10,\n        ex: 50,\n        ey: 50\n      }\n    ],\n    radialLines: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        innerSize: 50,\n        outerSize: 120,\n        points: 8,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    rect: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 120,\n        height: 60,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    roundedRect: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 120,\n        height: 60,\n        radius: 20,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    regPolygon: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 100,\n        sides: 6,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    sector: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2,\n        size: 100,\n        startAngle: 0,\n        endAngle: 270\n      }\n    ],\n    segment: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2,\n        size: 100,\n        startAngle: 0,\n        endAngle: 270\n      }\n    ],\n    square: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 100,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    roundedSquare: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 100,\n        radius: 20,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    star: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        outerSize: 120,\n        innerSize: 40,\n        points: 5,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    triangle: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 95,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    cross: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 95,\n        height: 95,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    symX: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 95,\n        height: 95,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    symI: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 95,\n        height: 95,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    symH: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        width: 95,\n        height: 95,\n        cx: basicSvgDimensions.w / 2,\n        cy: basicSvgDimensions.h / 2\n      }\n    ],\n    omino: [\n      {\n        svgDimensions: { ...basicSvgDimensions },\n        size: 25,\n        shape: [[1], [1, 1], [1]],\n        sx: 10,\n        sy: 0,\n        lined: true\n      }\n    ]\n  },\n  curves: {\n    arc: [\n      {\n        svgDimensions: { ...curveSvgDimensions },\n        sx: 10,\n        sy: 40,\n        rx: 50,\n        ry: 85,\n        rotation: 0,\n        arc: 0,\n        sweep: 1,\n        ex: 70,\n        ey: 40\n      }\n    ],\n    cubic: [\n      {\n        svgDimensions: { ...curveSvgDimensions },\n        sx: 10,\n        sy: 90,\n        cx1: 30,\n        cy1: 90,\n        cx2: 25,\n        cy2: 10,\n        ex: 50,\n        ey: 10,\n        S: [[70, 90, 90, 90]]\n      }\n    ],\n    quad: [\n      {\n        svgDimensions: { ...curveSvgDimensions },\n        sx: 10,\n        sy: 50,\n        cx: 25,\n        cy: 25,\n        ex: 40,\n        ey: 50,\n        T: [\n          [70, 50],\n          [100, 50],\n          [130, 50],\n          [160, 50],\n          [190, 50],\n          [220, 50]\n        ]\n      }\n    ]\n  }\n};\n\nexport default demos;","import React, { useState } from 'react';\nimport * as Shapes from 'react-svg-path';\nimport { ComponentKnobs } from './ComponentKnobs';\nimport { PathKnobs } from './PathKnobs';\nimport { Tabs } from './Tabs';\nimport { basicShapes as docs } from '../../docs/docs.mjs';\nimport { translate as t } from '../../i18n/i18n';\nimport demoDocs from '../../docs/demos.mjs';\n\nimport './BasicShapeDemo.css';\n\nexport const BasicShapeDemo = ({ shape }) => {\n  const { Component, props, shorthands } = docs[shape];\n  const demos = demoDocs.basicShapes[shape];\n  const initialState = demos.map((d, i) => {\n    return Object.keys(d)\n      .filter((k) => k !== 'svgDimensions')\n      .reduce((accum, cur) => {\n        return { ...accum, [cur]: d[cur] };\n      }, {});\n  });\n\n  const [demoValues, setDemoValues] = useState(initialState);\n  const [pathAttributes, setPathAttributes] = useState({\n    stroke: '#0e98dd',\n    strokeWidth: 1,\n    fill: '#ffffff'\n  });\n  const C = Shapes[Component];\n  const Svg = Shapes.Svg;\n  return (\n    <>\n      <h1>{Component}</h1>\n      <code>{`import { ${Component} } from 'react-svg-path'`}</code>\n      <code>\n        {`\n        <${Component}\n  ${Object.keys(props)\n    .map((k) => `${k}={${props[k].type}}`)\n    .join('\\n  ')}\n/>\n      `.trim()}\n      </code>\n      {shorthands && (\n        <>\n          <p>This component has shorthand props available:</p>\n          <table className='ui table'>\n            <thead>\n              <tr>\n                <th>prop</th>\n                <th>description</th>\n              </tr>\n            </thead>\n            <tbody>\n              {shorthands.map((sh, shi) => {\n                return (\n                  <tr key={shi}>\n                    <td>{sh.k}</td>\n                    <td>{sh.description}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </>\n      )}\n      <p>{t(`${shape}.description`)}</p>\n      {demos &&\n        demos.map(({ svgDimensions, ...rest }, i) => {\n          return (\n            <span key={i}>\n              <Svg width={svgDimensions.w} height={svgDimensions.h} scale>\n                <C {...demoValues[i]} {...pathAttributes} />\n              </Svg>\n            </span>\n          );\n        })}\n      <div style={{ maxWidth: 800 }}>\n        <Tabs>\n          <div title={t('common.code')}>\n            <code>\n              {`\n        <${Component}\n  ${Object.keys(demoValues[0])\n    .map((k) => `${k}={${JSON.stringify(demoValues[0][k])}}`)\n    .join('\\n  ')}\n  ${Object.keys(pathAttributes)\n    .map((k) =>\n      typeof pathAttributes[k] === 'number'\n        ? `${k}={${JSON.stringify(pathAttributes[k])}}`\n        : `${k}=${JSON.stringify(pathAttributes[k])}`\n    )\n    .join('\\n  ')}\n/>\n      `.trim()}\n            </code>\n          </div>\n          <div title={t('common.props')}>\n            <div className='knobs'>\n              {Object.keys(demoValues[0]).map((k, index) => {\n                return (\n                  <ComponentKnobs\n                    key={k}\n                    label={k}\n                    value={demoValues[0][k]}\n                    type={props[k].type}\n                    pointLength={props[k].pointsLength}\n                    onChange={(k, v) => {\n                      setDemoValues((current) => {\n                        current[0][k] = v;\n                        return [...current];\n                      });\n                    }}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div title={t('common.attributes')}>\n            <div className='knobs'>\n              <PathKnobs\n                initData={pathAttributes}\n                onChange={(e, k) => {\n                  setPathAttributes((current) => {\n                    current[k] = e;\n                    return { ...current };\n                  });\n                }}\n              />\n            </div>\n          </div>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport * as Shapes from 'react-svg-path';\nimport docs from '../../docs/docs.mjs';\nimport demoDocs from '../../docs/demos.mjs';\nimport { ComponentKnobs } from './ComponentKnobs';\nimport { PathKnobs } from './PathKnobs';\nimport { Tabs } from './Tabs';\nimport { translate as t } from '../../i18n/i18n';\n\nexport const CurveDemo = ({ curve }) => {\n  const { Component, props, shorthands } = docs[curve];\n  const demos = JSON.parse(JSON.stringify(demoDocs.curves[curve]));\n  const initialState = demos.map((d, i) => {\n    return Object.keys(d)\n      .filter((k) => k !== 'svgDimensions')\n      .reduce((accum, cur) => {\n        return { ...accum, [cur]: d[cur] };\n      }, {});\n  });\n  const [demoValues, setDemoValues] = useState(initialState);\n  const [pathAttributes, setPathAttributes] = useState({\n    stroke: '#0e98dd',\n    strokeWidth: 1,\n    fill: '#ffffff'\n  });\n  const C = Shapes[Component];\n  const Svg = Shapes.Svg;\n  return (\n    <>\n      <h1>{Component}</h1>\n      <code>{`import { ${Component} } from 'react-svg-path'`}</code>\n      <code>\n        {`\n        <${Component}\n  ${Object.keys(props)\n    .map((k) => `${k}={${props[k].type}}`)\n    .join('\\n  ')}\n/>\n      `.trim()}\n      </code>\n      {shorthands && (\n        <>\n          <p>This component has shorthand props available:</p>\n          <table className='ui table'>\n            <thead>\n              <tr>\n                <th>prop</th>\n                <th>description</th>\n              </tr>\n            </thead>\n            <tbody>\n              {shorthands.map((sh, shi) => {\n                return (\n                  <tr key={shi}>\n                    <td>{sh.k}</td>\n                    <td>{sh.description}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </>\n      )}\n      <p>{t(`${curve}.description`)}</p>\n      {demos &&\n        demos.map(({ svgDimensions, ...rest }, i) => {\n          return (\n            <span key={i}>\n              <Svg width={svgDimensions.w} height={svgDimensions.h} scale>\n                <C {...demoValues[i]} {...pathAttributes} />\n              </Svg>\n            </span>\n          );\n        })}\n      <div style={{ maxWidth: 800 }}>\n        <Tabs>\n          <div title={t('common.code')}>\n            <code>\n              {`\n        <${Component}\n  ${Object.keys(demoValues[0])\n    .map((k) => `${k}={${JSON.stringify(demoValues[0][k])}}`)\n    .join('\\n  ')}\n  ${Object.keys(pathAttributes)\n    .map((k) =>\n      typeof pathAttributes[k] === 'number'\n        ? `${k}={${JSON.stringify(pathAttributes[k])}}`\n        : `${k}=${JSON.stringify(pathAttributes[k])}`\n    )\n    .join('\\n  ')}\n/>\n      `.trim()}\n            </code>\n          </div>\n          <div title={t('common.props')}>\n            <div className='knobs'>\n              {Object.keys(demoValues[0]).map((k, index) => {\n                return (\n                  <ComponentKnobs\n                    key={k}\n                    label={k}\n                    value={demoValues[0][k]}\n                    type={props[k].type}\n                    pointLength={props[k].pointsLength}\n                    onChange={(k, v) => {\n                      setDemoValues((current) => {\n                        current[0][k] = v;\n                        return [...current];\n                      });\n                    }}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div title={t('common.attributes')}>\n            <div className='knobs'>\n              <PathKnobs\n                initData={pathAttributes}\n                onChange={(e, k) => {\n                  setPathAttributes((current) => {\n                    current[k] = e;\n                    return { ...current };\n                  });\n                }}\n              />\n            </div>\n          </div>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Svg, RegPolygon, Circle, Square } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\n\nimport './NestingDemo1.css';\n\nconst NestingDemo1 = () => (\n  <>\n    <h2>{t('pages.nesting.example1')}</h2>\n    <p>{t('pages.nesting.centerPoints')}</p>\n    <Svg width={200} height={200} className='nesting-example-1' scale>\n      <RegPolygon size={120} sides={4} cx={100} cy={100}>\n        <Circle size={55} />\n        <Square size={60} />\n        <Circle size={25} cy={58} />\n      </RegPolygon>\n    </Svg>\n    <div>\n      <code>\n        {`\n<RegPolygon size={120} sides={4} cx={100} cy={100}>\n  <Circle size={55} /> // ${t('pages.nesting.noCxCy')}\n  <Square size={60} /> // ${t('pages.nesting.noCxCy')}\n  <Circle size={25} cy={58} /> // ${t('pages.nesting.cyOver')}\n</RegPolygon>\n`.trim()}\n      </code>\n    </div>\n  </>\n);\n\nexport default NestingDemo1;\n","import React from 'react';\nimport { Svg, Line, Circle, Text, Polyline, Square, Arc } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\n\nimport './NestingDemo2.css';\n\nconst genPolylineZag = (centerY) => {\n  const ypoints = Array.from({ length: 10 }).map((p, i) => {\n    return i % 2 === 0 ? centerY - 5 : centerY + 5;\n  });\n  const points = ypoints.map((y, i) => {\n    return [10 * i, y];\n  });\n  points.shift();\n  points.push([100, centerY]);\n  points.push([130, centerY]);\n\n  return points;\n};\n\nconst NestingDemo2 = () => (\n  <>\n    <h2>{t('pages.nesting.example2')}</h2>\n    <p>{t('pages.nesting.end')}</p>\n    <Svg width={200} height={200} className='nesting-example-2' scale>\n      <Line sx={10} sy={25} ex={130} ey={25} stroke='#ccc'>\n        <Circle size={15} fill='#ccc' />\n      </Line>\n      <Line sx={10} sy={50} ex={130} ey={50} stroke='red'>\n        <Square size={20} fill='red' />\n      </Line>\n      <Line sx={10} sy={75} ex={135} ey={75} stroke='green'>\n        <Line ex={125} ey={70} stroke='green' />\n        <Line ex={125} ey={80} stroke='green' />\n      </Line>\n      <Polyline points={genPolylineZag(100)} stroke='red' fill='none'>\n        <Text dx={2} dy={5}>\n          Polyline\n        </Text>\n      </Polyline>\n      <Line sx={10} sy={125} ex={130} ey={125} stroke='red'>\n        <Text dx={2} dy={5}>\n          Line\n        </Text>\n      </Line>\n\n      <Line sx={10} sy={150} ex={100} ey={150} stroke='red'>\n        <Arc rx={10} ry={10} ex={175} ey={150} fill='none' stroke='red'>\n          <Circle size={15} fill='red' />\n        </Arc>\n      </Line>\n    </Svg>\n    <div>\n      <code>\n        {`\n<Line sx={10} sy={25} ex={130} ey={25} stroke='#ccc'>\n  <Circle size={15} fill='#ccc' />\n</Line>\n<Line sx={10} sy={50} ex={130} ey={50} stroke='red'>\n  <Square size={20} fill='red' />\n</Line>\n<Line sx={10} sy={75} ex={135} ey={75} stroke='green'>\n  <Line ex={125} ey={70} stroke='green' />\n  <Line ex={125} ey={80} stroke='green' />\n</Line>\n<Polyline points={genPolylineZag(100)} stroke='red' fill='none'>\n  <Text dx={2} dy={5}>\n    Polyline\n  </Text>\n</Polyline>\n<Line sx={10} sy={125} ex={130} ey={125} stroke='red'>\n  <Text dx={2} dy={5}>\n    Line\n  </Text>\n</Line>\n<Line sx={10} sy={150} ex={100} ey={150} stroke='red'>\n  <Arc rx={10} ry={10} ex={175} ey={150} fill='none' stroke='red'>\n    <Circle size={15} fill='red' />\n  </Arc>\n</Line>`.trim()}\n      </code>\n    </div>\n    <p>{t('pages.nesting.start')}</p>\n    <Svg width={200} height={45} className='nesting-example-2'>\n      <Line sx={10} sy={25} ex={130} ey={25} stroke='#ccc'>\n        <Circle size={15} fill='#ccc' attach='start' />\n      </Line>\n    </Svg>\n    <div>\n      <code>\n        {`\n<Line sx={10} sy={25} ex={130} ey={25} stroke='#ccc'>\n <Circle size={15} fill='#ccc' attach='start' />\n</Line>`.trim()}\n      </code>\n    </div>\n    <p>{t('pages.nesting.mix')}</p>\n    <Svg width={200} height={45} className='nesting-example-2'>\n      <Polyline points={genPolylineZag(25)} stroke='red' fill='none'>\n        <Text dx={4} dy={5}>\n          Polyline\n        </Text>\n        <Circle size={10} fill='red' attach='start' />\n      </Polyline>\n    </Svg>\n    <div>\n      <code>\n        {`\n<Polyline points={genPolylineZag(25)} stroke='red' fill='none'>\n  <Text dx={4} dy={5}>\n    Polyline\n  </Text>\n  <Circle size={10} fill='red' attach='start' />\n</Polyline>`.trim()}\n      </code>\n    </div>\n  </>\n);\n\nexport default NestingDemo2;\n","import React from 'react';\nimport { Svg, Circle, Line } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\n\nimport './NestingDemo3.css';\n\nconst NestingDemo3 = () => (\n  <>\n    <h2>{t('pages.nesting.example3')}</h2>\n    <p dangerouslySetInnerHTML={{ __html: t('pages.nesting.oxOy') }} />\n    <Svg width={500} height={150} className='nesting-example-3' scale>\n      <Circle size={0} cx={75} cy={75}>\n        <Circle size={60} oy={-20} />\n        <Circle size={60} oy={10} ox={-20} />\n        <Circle size={60} oy={10} ox={20} />\n      </Circle>\n      <Line sx={200} sy={75} ex={400} ey={75}>\n        <Circle size={20} ox={-100} />\n      </Line>\n    </Svg>\n    <div>\n      <code>\n        {`\n<Circle size={0} cx={75} cy={75}>       // ${t('pages.nesting.zeroCircle')}\n  <Circle size={60} oy={-20} />         // ${t('pages.nesting.offsetY')}\n  <Circle size={60} oy={10} ox={-20} /> // y+10, x-20\n  <Circle size={60} oy={10} ox={20} />  // y+10, x+20\n</Circle>\n\n<Line sx={200} sy={75} ex={400} ey={75}>\n  <Circle size={20} ox={-100} /> // ${t('pages.nesting.offsetX')}\n</Line>`.trim()}\n      </code>\n    </div>\n  </>\n);\n\nexport default NestingDemo3;\n","import React from 'react';\nimport NestingDemo1 from './NestingDemo1';\nimport NestingDemo2 from './NestingDemo2';\nimport NestingDemo3 from './NestingDemo3';\nimport { translate as t } from '../../../i18n/i18n';\nexport const Nesting = () => {\n  return (\n    <>\n      <h1>{t('pages.nesting.title')}</h1>\n      <div className='complex'>\n        <p>{t('pages.nesting.intro')}</p>\n        <NestingDemo1 />\n        <NestingDemo2 />\n        <NestingDemo3 />\n      </div>\n    </>\n  );\n};\n","import ELK from \"elkjs/lib/elk.bundled\";\n\nconst setupDag = async (dir = \"DOWN\", algo = \"layered\") => {\n  const elk = new ELK();\n  const elkNodes = [];\n  const elkLinks = [];\n  const items = \"abcdefghjklmopqrstuvwxyz\".split(\"\");\n  items.forEach((item) => {\n    elkNodes.push({ id: item, width: 35, height: 24 });\n  });\n  items.forEach((item, index, arr) => {\n    if (index === 0) {\n      return;\n    }\n    \n    if (index < 5) {\n      elkLinks.push({ id: index, source: \"a\", target: item });\n    } else if (index < 10) {\n      elkLinks.push({ id: index, source: \"b\", target: item });\n    } else if (index < 15) {\n      elkLinks.push({ id: index, source: \"c\", target: item });\n    } else if (index < 20) {\n      elkLinks.push({ id: index, source: \"d\", target: item });\n    } else {\n      elkLinks.push({ id: index, source: \"e\", target: item });\n    }\n  });\n\n  const elkGraph = {\n    id: \"root\",\n    layoutOptions: {\n      \"elk.algorithm\": algo,\n      separateConnectedComponents: true,\n      \"elk.direction\": dir,\n      \"spacing.nodeNode\": 35,\n      'elk.stress.desiredEdgeLength': 100.0,\n      'elk.stress.dimension': 'X',\n      'elk.layered.spacing.edgeNodeBetweenLayers': 80,\n      'elk.layered.highDegreeNodes.treeHeight': 100,\n    },\n    children: elkNodes,\n    edges: elkLinks,\n  };\n\n  return await elk.layout(elkGraph);\n};\n\nexport default setupDag;\n","import React, { useState } from \"react\";\nimport Path, { Circle, Square, Svg, Text } from \"react-svg-path\";\nimport dagSetup from \"./dagSetup\";\nimport \"./dag.css\";\n\nconst algorithms = [\"layered\", \"mrtree\"];\n\nconst DagNodes = () => {\n  const [loading, setLoading] = React.useState(true);\n  const [data, setData] = React.useState(true);\n  const [algo, setAlgo] = useState(algorithms[0]);\n\n  React.useEffect(() => {\n    createDag();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [algo]);\n\n  const onChangeAlgo = (e) => {\n    setAlgo(e.target.value);\n  };\n\n  const createDag = () => {\n    dagSetup(\"DOWN\", algo)\n      .then(setData)\n      .catch()\n      .finally(() => setLoading(false));\n  };\n\n  const createConnectors = () => {\n    const { edges } = data;\n    const p = new Path();\n    edges.forEach(({ sections }) => {\n      if (sections) {\n        p.M(sections[0].startPoint.x, sections[0].startPoint.y);\n        if (sections[0].bendPoints) {\n          sections[0].bendPoints.forEach((b) => {\n            p.L(b.x, b.y);\n          });\n        }\n        p.L(sections[0].endPoint.x, sections[0].endPoint.y);\n      }\n    });\n\n    return p.toString();\n  };\n\n  if (loading) {\n    return <p>loading...</p>;\n  } else {\n    const squareNodes = data.children\n      .slice(0, 5)\n      .map((s) => ({ ...s, x: s.x + 15, y: s.y + 15 }));\n    const circleNodes = data.children\n      .slice(5)\n      .map((s) => ({ ...s, x: s.x + 15, y: s.y + 15 }));\n    return (\n      <div>\n        <div className=\"ui form\">\n          <div className=\"inline fields\">\n            {algorithms.map((a) => {\n              return (\n                <div key={a} className=\"field\">\n                  <div className=\"ui radio checkbox\">\n                    <input\n                      id={a}\n                      type=\"radio\"\n                      name=\"algo\"\n                      value={a}\n                      checked={algo === a}\n                      tabIndex=\"0\"\n                      className=\"hidden\"\n                      onChange={onChangeAlgo}\n                    />\n                    <label htmlFor={a}>{a}</label>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        <Svg\n          width={data.width}\n          height={data.height}\n          scale\n          style={{ maxWidth: 850 }}\n        >\n          <path stroke=\"#222\" strokeWidth={1.5} d={createConnectors()} />\n          {squareNodes.map(({ x, y, width }, index) => {\n            return (\n              <Square\n                className=\"node square\"\n                key={index}\n                cx={x}\n                cy={y}\n                size={width}\n                onClick={() => alert(`clicked node #${index}`)}\n              >\n                <Text\n                  oy={2}\n                  dominantBaseline=\"middle\"\n                  textAnchor=\"middle\"\n                  fill=\"#fff\"\n                >\n                  {index}\n                </Text>\n              </Square>\n            );\n          })}\n          {circleNodes.map(({ x, y, width }, index) => {\n            return (\n              <Circle\n                key={index}\n                cx={x}\n                cy={y}\n                size={width * 1.1}\n                sides={5}\n                className=\"node circle\"\n                onClick={() => alert(`clicked node #${index + 5}`)}\n              >\n                <Text\n                  oy={2}\n                  dominantBaseline=\"middle\"\n                  textAnchor=\"middle\"\n                  fill=\"#fff\"\n                >\n                  {index + 5}\n                </Text>\n              </Circle>\n            );\n          })}\n        </Svg>\n      </div>\n    );\n  }\n};\n\nexport default DagNodes;\n","import React from 'react';\nimport { Sector } from 'react-svg-path';\n\nconst Pie = ({ size, cx, cy, data }) => {\n  const percentToDegree = (p) => (p / 100) * 360;\n  const sectors = [];\n  let total = 0;\n  data.forEach((d, i) => {\n    const startAngle = percentToDegree(total);\n    const endAngle = percentToDegree(total + d.percent);\n    sectors.push(\n      <Sector\n        endAngle={endAngle}\n        startAngle={startAngle}\n        cx={cx}\n        cy={cy}\n        size={size}\n        key={i}\n        fill={d.color} />\n    );\n    total = total + d.percent;\n  });\n\n  return (\n      <g>{sectors}</g>\n  );\n};\n\nexport default Pie;\n","import React from 'react';\nimport { Segment } from 'react-svg-path';\n\nconst Donut = ({ size, width, cx, cy, data, ...rest }) => {\n  const percentToDegree = (p) => (p / 100) * 360;\n  const segments = [];\n  let total = 0;\n  data.forEach((d, i) => {\n    const startAngle = percentToDegree(total);\n    const endAngle = percentToDegree(total + d.percent);\n    segments.push(\n      <Segment\n        cx={cx}\n        cy={cy}\n        size={size - width}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        key={i}\n        strokeWidth={width}\n        stroke={d.color}\n        fill='none'\n       />\n    );\n    total = total + d.percent;\n  });\n\n  return <g>{segments}</g>;\n};\n\nexport default Donut;\n","import React from 'react';\nimport { Svg, Polyline, Line, PathMerge, Rect } from 'react-svg-path';\nimport './Sparkline.css';\nconst scale = function (opts) {\n  const dataStart = opts.domain[0],\n    dataStop = opts.domain[1],\n    chartStart = opts.range[0],\n    chartStop = opts.range[1];\n\n  return (value) =>\n    chartStart +\n    (chartStop - chartStart) * ((value - dataStart) / (dataStop - dataStart));\n};\n\nconst Grid = ({ x, y, width, height, cols, rows, close = false }) => {\n  const extra = close ? 1 : 0;\n  const colWidth = width / cols;\n  const rowHeight = height / rows;\n  const horizontal = Array.from({ length: cols + extra }).map((_, index) => (\n    <Line\n      key={index}\n      sx={x + index * colWidth}\n      sy={y}\n      ex={0}\n      ey={height}\n      relative\n    />\n  ));\n  const vertical = Array.from({ length: rows + extra }).map((_, index) => (\n    <Line\n      key={index}\n      sx={x}\n      sy={y + index * rowHeight}\n      ex={width}\n      ey={0}\n      relative\n    />\n  ));\n  return <PathMerge stroke='#ddd'>{horizontal.concat(vertical)}</PathMerge>;\n};\n\nconst SparkLine = ({ width, height, data }) => {\n  const centerY = height / 2;\n  const clone = [...data];\n  clone.sort((a, b) => a - b);\n  const low = clone[0];\n  const hi = clone[clone.length - 1];\n\n  var myScale = scale({ domain: [low, hi], range: [0, height] });\n\n  const pointDistance = parseInt(width / data.length);\n  const points = [[0, centerY]];\n  data.forEach((newDataPoint, index) => {\n    points.push([pointDistance * (index + 1), height - myScale(newDataPoint)]);\n  });\n\n  const margin = 10;\n  const xSize = width + margin;\n  const ySize = height + margin;\n\n  return (\n    <Svg\n      width={xSize}\n      height={ySize}\n      scale\n    >\n      <g transform={`translate(${margin / 2},${margin / 2})`}>\n        <Grid x={0} y={0} width={width} height={height} rows={10} cols={20} />\n        <Polyline\n          className='sparkline-path'\n          points={points}\n          stroke='red'\n          strokeWidth={2}\n          fill='none'\n        />\n      </g>\n      <Rect\n        cx={(xSize - 2) / 2}\n        cy={(ySize - 2) / 2}\n        width={xSize - 2}\n        height={ySize - 2}\n        fill='none'\n        stroke='#333'\n      />\n    </Svg>\n  );\n};\n\nexport default SparkLine;\n","import { Text, Rect } from \"react-svg-path\";\nconst SortControls = ({ cx, cy, sorter, setSorter, width, height }) => {\n  return (\n    <g>\n      <Rect cx={cx} cy={cy} width={width / 2} height={50} fill=\"none\">\n        <Rect\n          className={`btn ${\n            sorter === \"alphaa\" || sorter === \"alphad\" ? \"active\" : \"\"\n          }`}\n          onClick={() => setSorter(sorter === \"alphaa\" ? \"alphad\" : \"alphaa\")}\n          ox={-150}\n          width={100}\n          height={25}\n        >\n          <Text className=\"btn-text\" fill=\"white\">\n            Sort Label\n          </Text>\n        </Rect>\n        <Rect\n          className={`btn ${\n            sorter === \"valuea\" || sorter === \"valued\" ? \"active\" : \"\"\n          }`}\n          onClick={() => setSorter(sorter === \"valuea\" ? \"valued\" : \"valuea\")}\n          ox={-50}\n          width={100}\n          height={25}\n        >\n          <Text className=\"btn-text\" fill=\"white\">\n          Sort Data\n          </Text>\n        </Rect>\n      </Rect>\n    </g>\n  );\n};\n\nexport default SortControls;\n","import { Line } from \"react-svg-path\";\n\nconst Frame = ({ width, height, margins }) => {\n  return (\n    <>\n      <Line\n        strokeWidth={0.5}\n        stroke=\"#ccc\"\n        sx={25}\n        sy={0}\n        ex={25}\n        ey={height}\n      />\n      <Line\n        strokeWidth={0.5}\n        stroke=\"#ccc\"\n        sx={margins.left}\n        sy={height}\n        ex={width - margins.right}\n        ey={height}\n      />\n    </>\n  );\n};\n\nexport default Frame;","import { Line, Text } from \"react-svg-path\";\nconst Ticks = ({ ticks, width, height, margins, yScale }) => {\n  return (\n    <>\n      {ticks.map((y) => {\n        return (\n          <g key={y}>\n            <Line\n              strokeWidth={0.5}\n              stroke=\"#888\"\n              sx={10}\n              sy={height - yScale(y)}\n              ex={width - margins.right}\n              ey={height - yScale(y)}\n            >\n              <Text\n                fontSize=\"0.75em\"\n                textAnchor=\"start\"\n                attach=\"start\"\n                ox={-15}\n              >\n                {y}\n              </Text>\n            </Line>\n          </g>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Ticks;\n","import { Line, Text } from \"react-svg-path\";\n\nconst Bars = ({ values, label, variable, width, height, yScale }) => {\n  return (\n    <>\n      {values.map((v, index, arr) => {\n        const barCount = arr.length;\n        const xStart = 50;\n        const xSpace = width - xStart;\n        const barWidth = xSpace / (barCount * 2);\n        const x = barWidth * index * 2;\n        return (\n          <g transform={`translate(${xStart}, 0)`} key={index}>\n            <Line\n              sx={x}\n              sy={height}\n              ex={x}\n              ey={height - yScale(v[variable])}\n              strokeWidth={barWidth}\n              stroke=\"rebeccapurple\"\n            />\n            <Text fontSize=\"0.75em\" x={x - 5} y={height + 20}>\n              {v[label]}\n            </Text>\n          </g>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Bars;\n","import { Svg, Rect, Text } from \"react-svg-path\";\nimport SortControls from \"./SortControls\";\nimport Frame from \"./Frame\";\nimport Ticks from \"./Ticks\";\nimport Bars from \"./Bars\";\nimport { scaleLinear } from \"d3-scale\";\nimport { useState } from \"react\";\nimport \"./BarChart.css\";\n\nconst BarChart = ({ data, variables, label }) => {\n  const [sorter, setSorter] = useState(\"alphaa\");\n  const [currentVariable, setCurrentVariable] = useState(variables[1]);\n  const sorters = {\n    alphaa: (a, b) => a[label].localeCompare(b[label]),\n    alphad: (a, b) => b[label].localeCompare(a[label]),\n    valuea: (a, b) => a[currentVariable] - b[currentVariable],\n    valued: (a, b) => b[currentVariable] - a[currentVariable],\n  };\n\n  const max = Math.max.apply(\n    null,\n    data.map((o) => o[currentVariable])\n  );\n\n  const width = 850;\n  const margins = { left: 40, right: 40, top: 40, bottom: 40 };\n  const height = 300;\n  const yScale = scaleLinear()\n    .domain([0, max])\n    .range([0, height - margins.bottom]);\n  const ticks = yScale.ticks(5);\n\n  const sortedValues = [...data].sort(sorters[sorter]);\n\n  return (\n    <div className=\"bar-app\">\n      <Svg\n        width={width + margins.left + margins.right}\n        height={height + margins.top + margins.bottom}\n        style={{ maxWidth: 850 }}\n        scale\n        className=\"bar-graph\"\n      >\n        <g transform={`translate(${margins.left}, ${margins.top})`}>\n          <SortControls\n            cx={230}\n            cy={10}\n            width={width / 2}\n            height={50}\n            sorter={sorter}\n            setSorter={setSorter}\n          />\n          {/* quick and dirty variable controls - circle back and clean up */}\n          <Rect cx={840} cy={10} width={width / 2} height={50} fill=\"none\">\n            <Rect\n              className={`btn ${currentVariable === variables[0] ? \"active\" : \"\"}`}\n              onClick={() => setCurrentVariable(variables[0])}\n              ox={-150}\n              width={75}\n              height={25}\n            >\n              <Text className=\"btn-text\" fill=\"white\">\n                data:{variables[0]}\n              </Text>\n            </Rect>\n            <Rect\n              className={`btn ${currentVariable === variables[1] ? \"active\" : \"\"}`}\n              onClick={() => setCurrentVariable(variables[1])}\n              ox={-75}\n              width={75}\n              height={25}\n            >\n              <Text className=\"btn-text\" fill=\"white\">\n                data:{variables[1]}\n              </Text>\n            </Rect>\n          </Rect>\n          <Frame width={width} height={height} margins={margins} />\n          <Ticks\n            ticks={ticks}\n            height={height}\n            width={width}\n            margins={margins}\n            yScale={yScale}\n          />\n          <Bars\n            variable={currentVariable}\n            label={label}\n            values={sortedValues}\n            yScale={yScale}\n            width={width}\n            height={height}\n          />\n        </g>\n      </Svg>\n    </div>\n  );\n};\n\nexport default BarChart;\n","import React from 'react';\nimport { Svg, Rect, Line, Text, MarkerArrow, Distance } from 'react-svg-path';\nimport './Football.css';\n\nconst Football = ({ width }) => {\n  const marginX = 50;\n  const marginY = 50;\n  const canvasWidth = 850;\n  const scale = canvasWidth / 360;\n  const scaleUnit = \"'\";\n  const scaleProps = {\n    scale: 360 / canvasWidth,\n    scaleUnit\n  };\n  const canvasHeight = 160 * scale;\n\n  const field = {\n    width: canvasWidth,\n    height: canvasHeight,\n    endzoneWidth: 30 * scale,\n    playingWidth: 300 * scale,\n    tickLength: 2 * scale,\n    topTickY: 60 * scale,\n    bottomTickY: 100 * scale,\n    bottomNumY: 130 * scale,\n    topNumY: 30 * scale,\n    tickCount: 101,\n    scale\n  };\n  Object.keys(field).forEach((k) => (field[k] = +field[k].toFixed(2)));\n\n  const commonTickProps = {\n    ex: 0,\n    relative: true,\n    ey: -field.tickLength\n  };\n\n  return (\n    <Svg width={canvasWidth + marginX} height={canvasHeight + marginY} style={{ maxWidth: 850, outline: 0 }} scale>\n      <MarkerArrow id='arrow-marker' color='green' open />\n      <g\n        transform={`translate(${marginX / 2},${marginY / 2})`}\n        className='football-diagram'\n      >\n        <Rect\n          cx={field.width / 2}\n          cy={field.height / 2}\n          width={field.width}\n          height={field.height}\n          fill=\"none\"\n        />\n        {Array.from({ length: field.tickCount }).map((_, index) => {\n          const sx = field.endzoneWidth + (field.playingWidth / 100) * index;\n          const isFifth = index % 5 === 0;\n          return (\n            <g key={index}>\n              <Line\n                {...commonTickProps}\n                sx={sx}\n                sy={0}\n                ey={isFifth ? field.height : field.tickLength}\n              />\n              {!isFifth ? (\n                <>\n                  <Line {...commonTickProps} sx={sx} sy={field.height} />\n                  <Line {...commonTickProps} sx={sx} sy={field.topTickY} />\n                  <Line\n                    {...commonTickProps}\n                    ey={field.tickLength}\n                    sx={sx}\n                    sy={field.bottomTickY}\n                  />\n                </>\n              ) : (\n                index !== 0 &&\n                index !== field.tickCount - 1 && (\n                  <>\n                    <Line\n                      {...commonTickProps}\n                      sx={sx - field.tickLength / 2}\n                      sy={field.topTickY}\n                      ey={0}\n                      ex={field.tickLength}\n                    />\n                    <Line\n                      {...commonTickProps}\n                      sx={sx - field.tickLength / 2}\n                      sy={field.bottomTickY}\n                      ey={0}\n                      ex={field.tickLength}\n                    />\n                    {index % 10 === 0 && (\n                      <g>\n                        <Text\n                          className='field-marker-number'\n                          x={sx - field.tickLength / 2 - (index < 50 ? 12 : 4)}\n                          y={field.bottomNumY}\n                        >\n                          {index < 50 && '-'}\n                          {index <= 50 ? index : 50 - Math.abs(index - 50)}\n                          {index > 50 && '-'}\n                        </Text>\n                        <Text\n                          className='field-marker-number'\n                          x={sx - field.tickLength / 2 - (index < 50 ? 12 : 4)}\n                          y={field.topNumY}\n                          transform='rotate(180)'\n                        >\n                          {index > 50 && '-'}\n                          {index <= 50 ? index : 50 - Math.abs(index - 50)}\n                          {index < 50 && '-'}\n                        </Text>\n                      </g>\n                    )}\n                  </>\n                )\n              )}\n            </g>\n          );\n        })}\n\n        <Distance\n          color='green'\n          sx={0}\n          sy={field.height + 15}\n          ex={field.width}\n          ey={field.height + 15}\n          {...scaleProps}\n          markers='arrow'\n        />\n        <Distance\n          color='green'\n          sx={field.width - field.endzoneWidth}\n          sy={25}\n          ex={field.width}\n          ey={25}\n          {...scaleProps}\n          markers='arrow'\n        />\n        <Distance\n          color='green'\n          sx={-15}\n          sy={0}\n          ex={-15}\n          ey={field.height}\n          {...scaleProps}\n          markers='arrow'\n        />\n        <Distance\n          color='green'\n          sx={field.endzoneWidth}\n          sy={0}\n          ex={field.endzoneWidth}\n          ey={field.topTickY}\n          {...scaleProps}\n          markers='arrow'\n        />\n\n        <Distance\n          color='green'\n          sx={field.endzoneWidth}\n          sy={field.bottomTickY}\n          ex={field.endzoneWidth}\n          ey={field.height}\n          {...scaleProps}\n          markers='arrow'\n        />\n        <Distance\n          color='green'\n          sx={field.width - field.endzoneWidth}\n          sy={field.topTickY}\n          ex={field.width - field.endzoneWidth}\n          ey={field.bottomTickY}\n          {...scaleProps}\n          markers='arrow'\n        />\n      </g>\n    </Svg>\n  );\n};\n\nexport default Football;\n","import React from \"react\";\nimport { Svg, Distance, Circle } from \"react-svg-path\";\n\nconst App = () => {\n  const height = 450;\n  const width = 850;\n  const margin = 1;\n  const quarterHeight = height * 0.25;\n  const quarterWidth = width * 0.25;\n  return (\n    <div>\n      <Svg\n        width={width + margin}\n        height={height + margin}\n        scale\n        style={{ maxWidth: width + margin }}\n      >\n        {Array.from({ length: 5 }).map((_, i) => (\n          <Circle\n            key={i}\n            size={70 * (i + (i * 2))}\n            fill=\"none\"\n            stroke=\"#ddd\"\n            strokeDasharray={4}\n          />\n        ))}\n\n        <Distance\n          color=\"green\"\n          ex={width}\n          ey={quarterHeight * 2}\n          markers=\"triangle\"\n        />\n        <Distance\n          color=\"green\"\n          ex={quarterWidth * 2}\n          ey={height}\n          markerEnd=\"triangle\"\n        />\n        <Distance\n          color=\"orange\"\n          ex={quarterWidth * 2}\n          ey={0}\n          markerEnd=\"triangle\"\n          text=\"CUSTOM TEXT\"\n          dotted\n        />\n        <Distance\n          color=\"green\"\n          sx={quarterWidth}\n          sy={0}\n          ex={quarterWidth}\n          ey={height}\n          dotted\n          markers=\"arrow\"\n        />\n        <Distance color=\"green\" ex={width} ey={0} markerEnd=\"triangle\" />\n        <Distance color=\"green\" ex={quarterWidth} ey={quarterHeight * 3} />\n        <Distance\n          color=\"red\"\n          sx={0}\n          sy={0}\n          ex={width}\n          ey={height}\n          markers=\"arrow\"\n        />\n        <Distance\n          color=\"green\"\n          sx={quarterWidth}\n          sy={quarterHeight * 3}\n          ex={0}\n          ey={quarterHeight * 3}\n          markerEnd=\"arrow\"\n          markerStart=\"line\"\n        />\n      </Svg>\n    </div>\n  );\n};\n\nexport default App;\n","import { Circle, RadialLines, Triangle } from 'react-svg-path';\nimport './Targets.css';\n\nexport const Target1 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.65} />\n      <RadialLines\n        innerSize={0}\n        outerSize={size * 0.25}\n        points={4}\n        className='rotate45 line-high'\n      />\n      <RadialLines\n        innerSize={size}\n        outerSize={size * 1.5}\n        points={4}\n        className='rotate45 line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target2 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.75} />\n      <RadialLines\n        innerSize={0}\n        outerSize={size / 3}\n        points={4}\n        className='line-high'\n      />\n      <RadialLines\n        innerSize={size}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target3 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.75} />\n      <RadialLines\n        innerSize={size * 0.15}\n        outerSize={size * 0.4}\n        points={4}\n        className='line-high'\n      />\n      <RadialLines\n        innerSize={size}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target4 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.75} />\n      <RadialLines\n        innerSize={size * 0.15}\n        outerSize={size * 0.4}\n        points={4}\n        className='line-high rotate45'\n      />\n      <RadialLines\n        innerSize={size * 0.8}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target5 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.75} />\n      <RadialLines\n        innerSize={size * 0.07}\n        outerSize={size * 0.3}\n        points={4}\n        className='line-high rotate45'\n      />\n      <RadialLines\n        innerSize={size * 0.8}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-dark'\n        strokeWidth={5}\n      />\n    </Circle>\n  );\n};\n\nexport const Target6 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.25} />\n      <RadialLines\n        innerSize={size * 0.8}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-dark'\n        strokeWidth={8}\n      />\n      <RadialLines\n        innerSize={size * 0.5}\n        outerSize={size * 1.25}\n        points={4}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target7 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.45} />\n      <RadialLines\n        innerSize={size * 0.275}\n        outerSize={size * 0.45}\n        points={4}\n        className='line-high'\n      />\n      <RadialLines\n        innerSize={size * 0.75}\n        outerSize={size}\n        points={4}\n        className='line-high rotate45'\n      />\n    </Circle>\n  );\n};\n\nexport const Target8 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.25} />\n      <RadialLines\n        innerSize={size * 0.8}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-dark rotate45'\n        strokeWidth={8}\n      />\n      <RadialLines\n        innerSize={size}\n        outerSize={size * 1.25}\n        points={4}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target9 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.7} />\n      <Circle className='line-high' size={size * 0.3} fill='none' />\n      <RadialLines\n        innerSize={size * 0.8}\n        outerSize={size * 1.3}\n        points={4}\n        className='line-dark'\n        strokeWidth={4}\n      />\n      <RadialLines\n        innerSize={size * 0.3}\n        outerSize={size}\n        points={4}\n        className='line-high rotate45'\n      />\n    </Circle>\n  );\n};\n\nexport const Target10 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='fill-low' size={size * 0.75} />\n      <Triangle\n        className='line-high rotate180'\n        oy={3}\n        size={size * 0.25}\n        fill='none'\n      />\n      <RadialLines\n        innerSize={size}\n        outerSize={size * 1.2}\n        points={4}\n        className='line-high'\n        strokeWidth={4}\n      />\n      <RadialLines\n        innerSize={size * 0.5}\n        outerSize={size * 0.75}\n        points={4}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n\nexport const Target11 = ({ cx, cy, size }) => {\n  return (\n    <Circle cx={cx} cy={cy} size={size} fill='none' className='line-high'>\n      <Circle className='line-high fill-low' size={size * 0.6} />\n      <RadialLines\n        innerSize={0}\n        outerSize={size * 0.15}\n        points={4}\n        className='rotate45 line-high'\n      />\n      <RadialLines\n        innerSize={size * 0.8}\n        outerSize={size * 0.9}\n        points={45}\n        className='line-high thin'\n      />\n      <RadialLines\n        innerSize={size * 0.4}\n        outerSize={size * 0.6}\n        points={8}\n        className='line-high'\n      />\n    </Circle>\n  );\n};\n","import Path, { Svg, Group } from 'react-svg-path';\nimport {\n  Target1,\n  Target2,\n  Target3,\n  Target4,\n  Target5,\n  Target6,\n  Target7,\n  Target8,\n  Target9,\n  Target10,\n  Target11\n} from './Targets';\nimport './Targets.css';\n\nconst TargetDemo = () => {\n  const size = 50;\n  const g = Path.positionByArray(100, [[1,1,1,1], [1,1,1,1], [1,1,1]], 0, 0)\n  const xy = (p) => {\n    const { cx, cy } = g[p];\n    return { cx, cy };\n  };\n\n  return (\n    <Svg width={850} height={400} className='bg-dark' style={{ maxWidth: 850 }} scale>\n      <Group transform=\"translate(225, 50)\">\n        <Target1 size={size} {...xy(0)} />\n        <Target3 size={size} {...xy(1)} />\n        <Target2 size={size} {...xy(2)} />\n        <Target5 size={size} {...xy(3)} />\n        <Target7 size={size} {...xy(4)} />\n        <Target8 size={size} {...xy(5)} />\n        <Target9 size={size} {...xy(6)} />\n        <Target10 size={size} {...xy(7)} />\n        <Target11 size={size} {...xy(8)} />\n        <Target6 size={size} {...xy(9)} />\n        <Target4 size={size} {...xy(10)} />\n      </Group>\n    </Svg>\n  );\n};\n\nexport default TargetDemo;\n","import \"./Clock.css\";\nimport Path, {\n  Svg,\n  Circle,\n  RadialLines,\n  Line,\n  Rect,\n  MarkerArrow,\n  Text,\n} from \"react-svg-path\";\n\nimport { useState, useEffect } from \"react\";\n\nexport const degreeToAngle = (value, division, cx, cy, radius) => {\n  const degree = (360 / division) * value - 90;\n  const { x: ex, y: ey } = Path.polarToCartesian(cx, cy, radius, degree);\n  return { ex, ey };\n};\n\nexport const time = () => {\n  const d = new Date();\n  return {\n    second: d.getSeconds(),\n    minute: d.getMinutes(),\n    hour: d.getHours(),\n    millis: d.getMilliseconds(),\n    date: d.getDate(),\n    day: d.toLocaleDateString(\"en\", { weekday: \"short\" }),\n    month: d.toLocaleDateString(\"en\", { month: \"long\" }),\n  };\n};\n\nconst Clock = ({ size = 400 }) => {\n  const cx = size / 2;\n  const cy = size / 2;\n  const margin = 40;\n  const fontBase = size / 16;\n  const [state, setState] = useState(time());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setState(time());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const hoursPoints = Path.radialPoints(size * 0.425, cx, cy, 12);\n  const minutePoints = Path.radialPoints(size * 0.275, cx, cy, 12);\n  const hours = [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n  return (\n    <div className=\"Clock\">\n      <Svg width={size + margin} height={size + margin} className=\"clock\" scale>\n        <MarkerArrow id=\"marker-h\" color=\"blue\" />\n        <MarkerArrow id=\"marker-s\" color=\"red\" />\n        <MarkerArrow id=\"marker-m\" color=\"green\" />\n        <g transform={`translate(${margin / 2}, ${margin / 2})`}>\n        {hoursPoints.map((point, index) => {\n            return (\n              <Text\n                className=\"middle\"\n                key={hours[index]}\n                x={point[0]}\n                y={point[1]}\n                fill=\"#333\"\n                fontSize={`${fontBase}px`}\n              >\n                {hours[index]}\n              </Text>\n            );\n          })}\n          {minutePoints.map((point, index) => {\n            const m = index * 5;\n            return (\n              <Text\n                key={index}\n                x={point[0]}\n                y={point[1]}\n                className=\"middle\"\n                fontSize={`${fontBase / 2}px`}\n                fill=\"red\"\n              >\n                {m}\n              </Text>\n            );\n          })}\n          <Circle size={size} cx={cx} cy={cy} strokeWidth={5}>\n            <RadialLines\n              innerSize={size * 0.725}\n              outerSize={size * 0.65}\n              points={12}\n              strokeWidth={5}\n            />\n            <RadialLines\n              innerSize={size * 0.7}\n              outerSize={size * 0.65}\n              points={60}\n              strokeWidth={1}\n            />\n          </Circle>\n          <Rect\n            cx={cx + 55}\n            cy={cy - 12}\n            width={80}\n            height={30}\n            fill=\"#222\"\n            stroke=\"none\"\n          >\n            <Rect ox={-16} width={44} height={26} fill=\"#fff\" stroke=\"none\">\n              <Text dy={2} className=\"middle\" fill=\"#222\">\n                {state.day.toUpperCase()}\n              </Text>\n              <Text dy={2} dx={40} className=\"middle\" fill=\"#fff\">\n                {state.date}\n              </Text>\n            </Rect>\n            <Text dy={30} fontSize={11} fill=\"#444\" className=\"middle\">\n              {state.month.toUpperCase()}\n            </Text>\n          </Rect>\n          <Line\n            strokeWidth={6}\n            markerEnd=\"url(#marker-h)\"\n            sx={cx}\n            sy={cy}\n            stroke=\"blue\"\n            {...degreeToAngle(state.hour, 12, cx, cy, size * 0.315)}\n          />\n          <Line\n            strokeWidth={3}\n            markerEnd=\"url(#marker-m)\"\n            sx={cx}\n            sy={cy}\n            stroke=\"green\"\n            {...degreeToAngle(state.minute, 60, cx, cy, size * 0.375)}\n          />\n          <Line\n            sx={cx}\n            sy={cy}\n            strokeWidth={1}\n            stroke=\"red\"\n            {...degreeToAngle(state.second, 60, cx, cy, size * 0.45)}\n          />\n          <Circle cx={cx} cy={cy} size={10} fill=\"#fff\" stroke=\"#222\" />\n        </g>\n      </Svg>\n    </div>\n  );\n};\n\nexport default Clock;\n","import React from \"react\";\nimport Path, { Circle, Group, Rect } from \"react-svg-path\";\n\nconst Atom = ({ cx, cy, shells, circ = 350 }) => {\n  const step = circ/shells.length\n  const electron_config = shells.slice().reverse();\n  const incrementalRing = electron_config.map((s, i) => circ - step * i);\n  const shellPoints = electron_config.map((s, i) =>\n    Path.radialPoints(incrementalRing[i] / 2, cx, cy, s)\n  );\n\n  const getTimes = (arr) => {\n    const max = 5000;\n    let min;\n    return arr.map((n) => {\n      min = Math.max(n * 1000, max);\n      return Math.floor(Math.random() * (max - min)) + min;\n    });\n  };\n\n  const times = getTimes(electron_config);\n\n  return (\n    <Rect width={circ} height={circ} cx={cx} cy={cy} className=\"atom\">\n      {incrementalRing.map((s, i) => (\n        <Group\n          key={i}\n          className=\"ring\"\n          style={{ animationDuration: `${times[i] / 1000}s` }}\n        >\n          <Circle size={s} fill=\"none\" stroke=\"#222\" strokeWidth={0.5} />\n          {shellPoints[i].map((p, q) => {\n            return (\n              <Circle\n                key={`${q}`}\n                cx={+p[0]}\n                cy={+p[1]}\n                size={13}\n                fill=\"#20a0c1\"\n              />\n            );\n          })}\n        </Group>\n      ))}\n    </Rect>\n  );\n};\n\nexport default Atom;\n","import React from \"react\";\nimport { Rect, SymX } from \"react-svg-path\";\n\nconst Modal = ({\n  className,\n  width,\n  height,\n  close,\n  cx,\n  cy,\n  children,\n  fill = \"#f8f8f8\",\n}) => {\n  return (\n    <>\n      <rect\n        onClick={close}\n        x={0}\n        y={0}\n        width=\"100%\"\n        height=\"100%\"\n        fill=\"#fff\"\n        fillOpacity={0.4}\n      />\n      <Rect\n        className={`modal ${className}`}\n        cx={cx}\n        cy={cy}\n        width={width}\n        height={height}\n        fill={fill}\n        stroke=\"#ddd\"\n        strokeWidth={2}\n      >\n        <Rect\n          ox={width / 2 - 25}\n          oy={-(height / 2) + 25}\n          className=\"pointer\"\n          width={15}\n          height={15}\n          onClick={close}\n          fill=\"transparent\"\n        >\n          <SymX\n            className=\"no-pointer\"\n            width={15}\n            height={15}\n            stroke=\"black\"\n            strokeWidth={3}\n          />\n        </Rect>\n        {children}\n      </Rect>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport Path, { Svg, Group, RoundedSquare, Text } from \"react-svg-path\";\nimport Atom from \"./Atom\";\nimport Modal from \"./Modal\";\nimport data from \"./data.json\";\nimport \"./style.css\";\n\nconst elements = data.elements\n  .slice()\n  .map((e) => ({ ...e, xpos: e.xpos - 1, ypos: e.ypos - 1 }));\n\nconst grid = [];\nfor (let index = 0; index < 10; index++) {\n  grid.push(Array.from({ length: 17 }));\n}\nelements.forEach((e) => {\n  grid[e.ypos][e.xpos] = e;\n});\n\nconst cellSize = 95;\nconst cells = Path.positionByArray(cellSize, grid, 0, 0);\nconst margin = 40;\nconst w = 18 * cellSize;\nconst h = 10 * cellSize;\nconst modal = {\n  height: h - 100,\n  width: w / 2,\n};\n\nconst Table = () => {\n  const [open, setOpen] = React.useState(null);\n  return (\n    <Svg\n      width={w + margin}\n      height={h + margin}\n      scale\n      style={{ maxWidth: 850 }}\n    >\n      <Group transform={`translate(${margin / 2}, ${margin / 2})`}>\n        <Group>\n          {cells.map(({ cx, cy, size, value }, index) => (\n            <RoundedSquare\n              onClick={(e) => {\n                e.stopPropagation();\n                if (!open) {\n                  setOpen(value);\n                }\n              }}\n              radius={10}\n              className={`cell ${value.category.replace(/ /g, \"-\")}`}\n              cx={cx}\n              cy={cy}\n              key={value}\n              size={size * 0.95}\n            >\n              <Text dy={10} className=\"big middle\">\n                {value.symbol}\n              </Text>\n              <Text ox={-size / 2 + 10} oy={-size / 2 + 25} className=\"small\">\n                {value.number}\n              </Text>\n            </RoundedSquare>\n          ))}\n        </Group>\n      </Group>\n      {open ? (\n        <Modal\n          width={modal.width}\n          height={modal.height}\n          close={() => setOpen(null)}\n        >\n          <Text className=\"middle big\" oy={-350}>\n            {open.name} ({open.symbol})\n          </Text>\n          <Group transform=\"translate(0, 40)\">\n            <Atom circ={500} shells={open.shells} />\n            <Text\n              className=\"middle\"\n              style={{ fontSize: \"175%\" }}\n              transform=\"translate(0, 340)\"\n            >\n              Electron configuration of {open.name}\n            </Text>\n          </Group>\n        </Modal>\n      ) : null}\n    </Svg>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport { Svg } from \"react-svg-path\";\nimport { translate as t } from \"../../../i18n/i18n\";\nimport DagNodes from \"../../demos/dag/DagNodes\";\nimport Pie from \"../../demos/complex/Pie\";\nimport Donut from \"../../demos/complex/Donut\";\nimport SparkLine from \"../../demos/complex/SparkLine\";\nimport BarChart from \"../../demos/complex/BarChart/BarChart\";\nimport Football from \"../../demos/complex/Football/Football\";\nimport Dimensions from \"../../demos/complex/Dimensions/Dimensions\";\nimport TargetDemo from \"../../demos/targets/TargetDemo\";\nimport Clock from \"../../demos/complex/Clock\";\nimport Elements from \"../../demos/Elements\";\nexport const Demos = () => {\n  const pieData = [\n    {\n      color: \"#086972\",\n      percent: 20,\n      nested: [\n        { color: \"rgba(0,100,25,0.9)\", percent: 10 },\n        { color: \"rgba(0,100,25,0.8)\", percent: 10 },\n      ],\n    },\n    {\n      color: \"#01a9b4\",\n      percent: 30,\n      nested: [\n        { color: \"rgba(0,100,25,0.7)\", percent: 10 },\n        { color: \"rgba(0,100,25,0.6)\", percent: 10 },\n        { color: \"rgba(0,100,25,0.5)\", percent: 10 },\n      ],\n    },\n    {\n      color: \"#87dfd6\",\n      percent: 50,\n      nested: [\n        { color: \"rgba(0,100,25,0.4)\", percent: 25 },\n        { color: \"rgba(0,100,25,0.3)\", percent: 25 },\n      ],\n    },\n  ];\n\n  const barData = [\n    { val: 100, qty: 245, name: \"A\" },\n    { val: 200, qty: 200, name: \"B\" },\n    { val: 300, qty: 207, name: \"C\" },\n    { val: 425, qty: 350, name: \"D\" },\n    { val: 555, qty: 125, name: \"E\" },\n    { val: 150, qty: 50, name: \"F\" },\n    { val: 330, qty: 10, name: \"G\" },\n    { val: 340, qty: 75, name: \"H\" },\n    { val: 200, qty: 86, name: \"I\" },\n    { val: 600, qty: 100, name: \"J\" },\n    { val: 333, qty: 77, name: \"K\" },\n    { val: 78, qty: 20, name: \"L\" },\n    { val: 125, qty: 300, name: \"M\" },\n  ];\n\n  const getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return parseInt(Math.floor(Math.random() * (max - min + 1)) + min);\n  };\n\n  const sparkData = Array.from({ length: 50 }).map(() => getRandomInt(-10, 10));\n  return (\n    <>\n      <h1>{t(\"pages.demos.title\")}</h1>\n      <p>{t(\"pages.demos.intro\")}</p>\n      <div>\n        <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n          <h4>Periodic table of elements</h4>\n          <Elements />\n          <a\n            href=\"https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/Elements\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n        <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n          <h4>Bar Chart</h4>\n          <BarChart data={barData} variables={[\"val\", \"qty\"]} label=\"name\" />\n          <a\n            href=\"https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/BarChart/BarChart.js\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n        <div className=\"dag\">\n          <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n            <h4>Diagram</h4>\n            <DagNodes />\n            <a\n              href=\"https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/dag/DagNodes.js\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {t(\"common.source\")}\n            </a>\n          </div>\n        </div>\n        <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n          <h4>Measurements</h4>\n          <Dimensions />\n          <a\n            href=\"https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/Dimensions\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n        <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n          <h4>Designs</h4>\n          <TargetDemo />\n          <a\n            href={`https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/targets`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n        <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n          <h4>NFL football field (to scale)</h4>\n          <Football width={850} />\n          <a\n            href={`https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/Football/Football.js`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n      </div>\n      <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n        <h4>Pie/Donut Charts</h4>\n      </div>\n      <div\n        className=\"complex flex items-center justify-around flex-wrap\"\n        style={{ maxWidth: 800, minHeight: 180 }}\n      >\n        <div className=\"flex flex-column items-center justify-center\">\n          <Svg width={160} height={160}>\n            <Pie size={150} cx={80} cy={80} data={pieData} />\n          </Svg>\n          <a\n            href={`https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/Pie.js`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n        <div className=\"flex flex-column items-center justify-center\">\n          <Svg width={160} height={160}>\n            <Donut width={25} size={150} cx={80} cy={80} data={pieData} />\n          </Svg>\n          <a\n            href={`https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/Donut.js`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n      </div>\n      <div\n        className=\"complex flex items-center justify-around flex-wrap\"\n        style={{ maxWidth: \"800px\", minHeight: 160 }}\n      >\n        <Svg width={180} height={180}>\n          <Pie size={130} cx={90} cy={90} data={pieData} />\n          <Donut\n            width={20}\n            size={175}\n            cx={90}\n            cy={90}\n            stroke=\"#fff\"\n            data={pieData.map((pd) => pd.nested).flat()}\n          />\n        </Svg>\n      </div>\n      <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n        <h4>Line Chart</h4>\n        <div className=\"flex flex-column\">\n          <SparkLine width={800} height={100} data={sparkData} />\n          <a\n            href={`https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/SparkLine.js`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {t(\"common.source\")}\n          </a>\n        </div>\n      </div>\n      <div style={{ margin: 20, display: \"flex\", flexDirection: \"column\" }}>\n        <h4>Functioning clock</h4>\n        <Clock size={400} />\n        <a\n          href={`https://github.com/joemaddalone/react-svg-path-docs/blob/master/src/components/demos/complex/Clock.js`}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          {t(\"common.source\")}\n        </a>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Svg, RegPolygon, Circle, Square, PathMerge } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\nimport './MergeDemo.css';\n\nexport const MergeDemo = () => (\n  <>\n    <h1>{t('pages.pathMerge.title')}</h1>\n    <p>{t('pages.pathMerge.intro')}</p>\n    <p>{t('pages.pathMerge.compose')}</p>\n    <div>\n      <Svg width={200} height={200} className='nesting-example-1' scale>\n        <RegPolygon size={120} sides={4} cx={100} cy={100} />\n        <Circle size={55} cx={100} cy={100} />\n        <Square size={60} cx={100} cy={100} />\n      </Svg>\n      <div>\n        <code>\n          {`\n<RegPolygon size={120} sides={4} cx={100} cy={100} />\n<Circle size={55} cx={100} cy={100} />\n<Square size={60} cx={100} cy={100} />\n`.trim()}\n        </code>\n      </div>\n    </div>\n    <p>{t('pages.pathMerge.composeResult')}</p>\n    <code>\n      {`\n<path d=\"...RegPolygon path data\" />\n<path d=\"...Circle path data\" />\n<path d=\"...Square path data\" />\n`.trim()}\n    </code>\n    <p>{t('pages.pathMerge.wrapIn')}</p>\n    <div>\n      <Svg width={200} height={200} className='nesting-example-1' scale>\n        <PathMerge>\n          <RegPolygon size={120} sides={4} cx={100} cy={100} />\n          <Circle size={55} cx={100} cy={100} />\n          <Square size={60} cx={100} cy={100} />\n        </PathMerge>\n      </Svg>\n      <div>\n        <code>\n          {`\n<PathMerge>\n  <RegPolygon size={120} sides={4} cx={100} cy={100} />\n  <Circle size={55} cx={100} cy={100} />\n  <Square size={60} cx={100} cy={100} />\n</PathMerge>\n`.trim()}\n        </code>\n      </div>\n    </div>\n    <p>{t('pages.pathMerge.wrapInResult')}</p>\n    <p>{t('pages.pathMerge.nested')}</p>\n    <div>\n      <Svg width={200} height={200} className='nesting-example-1' scale>\n        <PathMerge>\n          <RegPolygon size={120} sides={4} cx={100} cy={100}>\n            <Circle size={55} />\n            <Square size={60} />\n            <Circle size={25} cy={58} />\n          </RegPolygon>\n          <Circle size={10} cx={100} cy={100} />\n        </PathMerge>\n      </Svg>\n      <div>\n        <code>\n          {`\n<PathMerge>\n  <RegPolygon size={120} sides={4} cx={100} cy={100}>\n    <Circle size={55} />\n    <Square size={60} />\n    <Circle size={25} cy={58} />\n  </RegPolygon>\n  <Circle size='10' cx={100} cy={100} />\n</PathMerge>\n`.trim()}\n        </code>\n      </div>\n    </div>\n  </>\n);\n","import React from 'react';\nimport { Svg, Circle, Rect } from 'react-svg-path';\nimport { translate as t } from '../../i18n/i18n';\nimport './Introduction.css';\n\nexport const Introduction = () => {\n  return (\n    <>\n      <h1>{t('pages.introduction.title')}</h1>\n      <p>{t('pages.introduction.intro')}</p>\n\n      <h2>{t('pages.introduction.installation')}</h2>\n      <code>npm i react-svg-path</code>\n\n      <h2>{'Overview'}</h2>\n      <p>{t('pages.introduction.overview')}</p>\n\n      <p>{t('pages.introduction.overviewExample')}</p>\n      <div>\n        <Svg width={100} height={100}>\n          <Circle size={50} fill='none' stroke='red'>\n            <Rect width={30} height={10} fill='none' stroke='red' />\n          </Circle>\n        </Svg>\n        <p>{t('pages.introduction.overviewExampleDescription')}</p>\n        <h4>{t('pages.introduction.startSvg')}</h4>\n        <code>\n          {`<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"></svg>`}\n        </code>\n        <h4>{t('pages.introduction.addSvgCircle')}</h4>\n        <code>\n          {`<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <circle cx={50} cy={50} r={25} fill=\"none\" stroke=\"red\" />\n</svg>`}\n        </code>\n        <svg width={100} height={100}>\n          <circle cx={50} cy={50} r={25} fill='none' stroke='red' />\n        </svg>\n        <h4>{t('pages.introduction.addSvgRect')}</h4>\n        <code>\n          {`<svg width={100} height={100}>\n  <circle cx={50} cy={50} r={25} fill=\"none\" stroke=\"red\" />\n  <rect x={35} y={45} width={30} height={10} fill=\"none\" stroke=\"red\"  />\n</svg>`}\n        </code>\n        <svg width={100} height={100}>\n          <circle cx={50} cy={50} r={25} fill='none' stroke='red' />\n          <rect x={35} y={45} width={30} height={10} fill='none' stroke='red' />\n        </svg>\n        <p>{t('pages.introduction.endSvg')}</p>\n        <h2>{t('pages.introduction.buildWithRSP')}</h2>\n        <code>{`<Svg width={100} height={100}>\n  <Circle size={50} fill='none' stroke='red'>\n    <Rect width={30} height={10} stroke='red' />\n  </Circle>\n</Svg>`}</code>\n        <Svg width={100} height={100}>\n          <Circle size={50} fill='none' stroke='red'>\n            <Rect width={30} height={10} fill='none' stroke='red' />\n          </Circle>\n        </Svg>\n        <p>{t('pages.introduction.benefit')}</p>\n        <p>{t('pages.introduction.learnMore')}</p>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Svg,\n  Polyline,\n  Quad,\n  Line,\n  MarkerArrow,\n  MarkerTriangle,\n  MarkerLine,\n  MarkerSquare\n} from 'react-svg-path';\nimport demos from '../../../docs/demos.mjs';\nimport { translate as t } from '../../../i18n/i18n';\n\nimport './MarkerDemo.css';\n\nconst genPolylineZag = (centerY, length = 10, offsetY = 5, offsetX = 10) => {\n  const ypoints = Array.from({ length }).map((p, i) => {\n    return i % 2 === 0 ? centerY - offsetY : centerY + offsetY;\n  });\n  const points = ypoints.map((y, i) => {\n    return [offsetX * i, y];\n  });\n\n  return points;\n};\n\nconst MarkerSelector = ({ label, onChange, id }) => {\n  return (\n    <div className='field'>\n      <label htmlFor={id}>{label}</label>\n      <select id={id} className='ui dropdown' onChange={onChange}>\n        <option value={null}>None</option>\n        <option value='marker-arrow'>&lt;MarkerArrow&gt;</option>\n        <option value='marker-triangle'>&lt;MarkerTriangle&gt;</option>\n        <option value='marker-line'>&lt;MarkerLine&gt;</option>\n        <option value='marker-square'>&lt;MarkerSquare&gt;</option>\n      </select>\n    </div>\n  );\n};\n\nexport const MarkerDemo = () => {\n  const [startMarker, setStartMarker] = useState(null);\n  const [endMarker, setEndMarker] = useState(null);\n  const [midMarker, setMidMarker] = useState(null);\n  const markerStart = (e) => {\n    setStartMarker(e.target.value);\n  };\n  const markerEnd = (e) => {\n    setEndMarker(e.target.value);\n  };\n  const markerMid = (e) => {\n    setMidMarker(e.target.value);\n  };\n  const quadDemo = { ...demos.curves.quad[0] };\n  delete quadDemo.svgDimensions;\n  return (\n    <>\n      <h1>{t('pages.markers.title')}</h1>\n      <p>{t('pages.markers.intro')}</p>\n      <div>\n        <Svg width={260} height={225} scale>\n          <MarkerArrow id='marker-arrow' />\n          <MarkerTriangle id='marker-triangle' />\n          <MarkerLine id='marker-line' strokeWidth={3} />\n          <MarkerSquare id='marker-square' size={8} />\n          <g transform='translate(10,10)'>\n            <Quad\n              {...quadDemo}\n              stroke='#222'\n              fill='none'\n              markerEnd={`url(#${endMarker})`}\n              markerStart={`url(#${startMarker})`}\n              markerMid={`url(#${midMarker})`}\n            />\n            <Line\n              sx={10}\n              sy={100}\n              ex={225}\n              ey={100}\n              stroke='#222'\n              markerEnd={`url(#${endMarker})`}\n              markerStart={`url(#${startMarker})`}\n            />\n            <Polyline\n              fill='none'\n              stroke='#222'\n              points={genPolylineZag(150, 6, 25, 45)}\n              markerEnd={`url(#${endMarker})`}\n              markerStart={`url(#${startMarker})`}\n            />\n          </g>\n        </Svg>\n        <div className='ui form' style={{ width: 250, marginLeft: 10 }}>\n          <MarkerSelector\n            id='start'\n            label={t('pages.markers.startLabel')}\n            onChange={markerStart}\n          />\n          <MarkerSelector\n            id='end'\n            label={t('pages.markers.endLabel')}\n            onChange={markerEnd}\n          />\n          <MarkerSelector\n            id='mid'\n            label={t('pages.markers.midLabel')}\n            onChange={markerMid}\n          />\n        </div>\n      </div>\n      <div>\n        <h2>{t('pages.markers.usage')}</h2>\n        <code>\n          {`<svg>\n  <Marker[Arrow|Line|Triangle|Square] id=\"my-marker-id\" />\n  <Line\n    sx={10}\n    sy={100}\n    ex={225}\n    ey={100}\n    markerStart=\"url(#my-marker-id)\"\n    markerEnd=\"url(#my-marker-id)\"\n/>\n</svg>`.trim()}\n        </code>\n      </div>\n      <div>\n        <h2>&lt;MarkerArrow></h2>\n        <p dangerouslySetInnerHTML={{ __html: t('pages.markers.arrow') }} />\n      </div>\n      <div>\n        <h2>&lt;MarkerTriangle></h2>\n        <p dangerouslySetInnerHTML={{ __html: t('pages.markers.triangle') }} />\n      </div>\n      <div>\n        <h2>&lt;MarkerSquare></h2>\n        <p dangerouslySetInnerHTML={{ __html: t('pages.markers.square') }} />\n      </div>\n      <div>\n        <h2>&lt;MarkerLine></h2>\n        <p dangerouslySetInnerHTML={{ __html: t('pages.markers.line') }} />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Svg, TextPath, Circle, Quad } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\nimport './TextPathDemo.css';\n\nexport const TextPathDemo = () => {\n  const exampleText = t('pages.textPath.exampleText');\n  return (\n    <>\n      <h1>{t('pages.textPath.title')}</h1>\n      <p>{t('pages.textPath.intro')}</p>\n      <div className='text-path '>\n        <h2>With existing components</h2>\n        <p>{t('pages.textPath.withCircle')}</p>\n        <Svg width={500} height={250} scale>\n          <TextPath id='my-path' path={<Circle cx={250} cy={125} size={125} />}>\n            {exampleText}\n          </TextPath>\n        </Svg>\n        <code>\n          {`\n<Svg width={500} height={250}>\n  <TextPath id='my-path' path={<Circle cx={250} cy={125} size={125} />}>\n    ${exampleText}\n  </TextPath>\n</Svg>`.trim()}\n        </code>\n        <p>{t('pages.textPath.withQuad')}</p>\n        <Svg width={500} height={200} scale>\n          <TextPath\n            startOffset={20}\n            path={\n              <Quad\n                sx={0}\n                sy={100}\n                cx={50}\n                cy={0}\n                ex={100}\n                ey={100}\n                t={[\n                  [100, 0],\n                  [100, 0],\n                  [100, 0],\n                  [100, 0]\n                ]}\n                fill='none'\n              />\n            }\n          >\n            {exampleText} {exampleText}\n          </TextPath>\n        </Svg>\n        <code>\n          {`\n<Svg width={500} height={200}>\n  <TextPath\n    startOffset={20}\n    path={\n      <Quad\n        sx={0}\n        sy={100}\n        cx={50}\n        cy={0}\n        ex={100}\n        ey={100}\n        t={[\n          [100, 0],\n          [100, 0],\n          [100, 0],\n          [100, 0]\n        ]}\n        fill='none'\n      />\n    }\n  >\n    ${exampleText}\n    ${exampleText}\n  </TextPath>\n</Svg>`.trim()}\n        </code>\n        <h2>{t('pages.textPath.withCustom')}</h2>\n        <p>{t('pages.textPath.withCustomDescription')}</p>\n        <Svg width={500} height={250} scale>\n          <TextPath\n            textLength={450}\n            path='M25,100 h150 q25 0 40 50 t50 50 t50 -50 v-100'\n          >\n            {'→'.repeat(25)}\n          </TextPath>\n        </Svg>\n        <code>\n          {`\n<Svg width={500} height={250}>\n  <TextPath\n    textLength={450}\n    path='M25 100 h150 q25 0 40 50 t50 50 t50 -50 v-100'\n  >\n    {\"→\".repeat(20)}\n  </TextPath>\n</Svg>`.trim()}\n        </code>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { translate as t } from '../../i18n/i18n';\nimport {\n  Svg,\n  Square,\n  Circle,\n  Text,\n  Line,\n  RadialLines,\n  MarkerSquare,\n  MarkerArrow,\n  Quad\n} from 'react-svg-path';\n\nexport const CenterEndDemo = () => {\n  return (\n    <>\n      <h1>{t('pages.centerEnd.title')}</h1>\n      <p dangerouslySetInnerHTML={{ __html: t('pages.centerEnd.intro') }} />\n      <div>\n        <Svg width={575} height={175} scale>\n          <MarkerSquare id='marker-s' size={10} color='#999' />\n          <MarkerArrow id='marker-a' size={10} color='red' />\n          <Square\n            fill='none'\n            cx={250}\n            cy={100}\n            size={75}\n            stroke='#222'\n            centerEnd={false}\n            markerEnd='url(#marker-s)'\n          >\n            <Circle size={10}>\n              <Line\n                ox={15}\n                ex={75}\n                ey={0}\n                relative\n                stroke='red'\n                markerStart='url(#marker-a)'\n              />\n              <Text ox={100} oy={4}>\n                {t('pages.centerEnd.circle')}\n              </Text>\n            </Circle>\n          </Square>\n          <Line\n            sx={150}\n            sy={60}\n            ex={200}\n            ey={60}\n            stroke='red'\n            markerEnd='url(#marker-a)'\n          >\n            <Text ox={-140} oy={4} attach='start'>\n              {t('pages.centerEnd.square')}\n            </Text>\n          </Line>\n        </Svg>\n      </div>\n      <div>\n        <code>\n          {`\n<Svg width={575} height={175}>\n  <MarkerSquare id='marker-s' size={10} color='#999' />\n  <MarkerArrow id='marker-a' size={10} color='red' />\n  <Square\n    fill='none'\n    cx={250}\n    cy={100}\n    size={75}\n    stroke='#222'\n    centerEnd={false}\n    markerEnd='url(#marker-s)'\n  >\n    <Circle size={10}>\n      <Line ox={15} ex={75} ey={0} relative stroke=\"red\" markerStart='url(#marker-a)' />\n      <Text ox={100} oy={4}>${t('pages.centerEnd.circle')}</Text>\n    </Circle>\n  </Square>\n  <Line\n    sx={150}\n    sy={60}\n    ex={200}\n    ey={60}\n    stroke='red'\n    markerEnd='url(#marker-a)'\n  >\n    <Text ox={-140} oy={4} attach='start'>${t('pages.centerEnd.square')}</Text>\n  </Line>\n</Svg>        `.trim()}\n        </code>\n      </div>\n      <div>\n        <h2>{t('pages.centerEnd.another')}</h2>\n        <Svg width={500} height={500} scale>\n          <MarkerSquare id='ms' size={10} color='red' />\n          <MarkerSquare id='mm' size={10} color='#999' />\n          <MarkerSquare id='me' size={10} color='blue' />\n          <MarkerArrow id='marker-explain-start' size={10} color='red' />\n          <MarkerArrow id='marker-explain-end' size={10} color='blue' />\n          <RadialLines\n            cx={250}\n            cy={250}\n            innerSize={75}\n            outerSize={200}\n            points={12}\n            stroke='#ccc'\n            centerEnd={false}\n            markerEnd='url(#me)'\n            markerMid='url(#mm)'\n            markerStart='url(#ms)'\n          >\n            <Quad\n              oy={-40}\n              cx={300}\n              cy={50}\n              ex={375}\n              ey={125}\n              stroke='red'\n              fill='none'\n              markerEnd='url(#marker-explain-start)'\n            >\n              <Text oy={15}>{t('pages.centerEnd.startingPoint')}</Text>\n            </Quad>\n            <Quad\n              oy={-90}\n              ox={-51}\n              cx={125}\n              cy={50}\n              ex={75}\n              ey={125}\n              stroke='blue'\n              fill='none'\n              markerEnd='url(#marker-explain-end)'\n            >\n              <Text ox={-50} oy={15}>\n                {t('pages.centerEnd.endingPoint')}\n              </Text>\n            </Quad>\n          </RadialLines>\n        </Svg>\n      </div>\n      <div>\n        <code>\n          {`\n<Svg width={500} height={500}>\n  <MarkerSquare id='ms' size={10} color='red' />\n  <MarkerSquare id='mm' size={10} color='#999' />\n  <MarkerSquare id='me' size={10} color='blue' />\n  <MarkerArrow id='marker-explain-start' size={10} color='red' />\n  <MarkerArrow id='marker-explain-end' size={10} color='blue' />\n  <RadialLines\n    cx={250}\n    cy={250}\n    innerSize={75}\n    outerSize={200}\n    points={12}\n    stroke='#ccc'\n    centerEnd={false}\n    markerEnd='url(#me)'\n    markerMid='url(#mm)'\n    markerStart='url(#ms)'\n  >\n    <Quad\n      oy={-40}\n      cx={300}\n      cy={50}\n      ex={375}\n      ey={125}\n      stroke='red'\n      fill='none'\n      markerEnd='url(#marker-explain-start)'\n    >\n      <Text oy={15}>${t('pages.centerEnd.startingPoint')}</Text>\n    </Quad>\n    <Quad\n      oy={-90}\n      ox={-51}\n      cx={125}\n      cy={50}\n      ex={75}\n      ey={125}\n      stroke='blue'\n      fill='none'\n      markerEnd='url(#marker-explain-end)'\n    >\n      <Text ox={-50} oy={15}>${t('pages.centerEnd.endingPoint')}</Text>\n    </Quad>\n  </RadialLines>\n</Svg>`.trim()}\n        </code>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Svg, Circle, Line, Text, Distance } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\nimport './SvgDemo.css';\n\nexport const SvgDemo = () => {\n  return (\n    <>\n      <h1>{t('pages.svg.title')}</h1>\n      <p dangerouslySetInnerHTML={{ __html: t('pages.svg.intro') }}></p>\n      <div>\n        <Svg width={100} height={100} />\n      </div>\n      <code>{`<Svg width={100} height={100} />}`}</code>\n      <div>\n        <h2>{t('pages.svg.nesting')}</h2>\n        <p>{t('pages.svg.nestingDescription')}</p>\n        <Svg width={500} height={250} className=\"svg-demo-svg\" scale>\n          <Circle size={25} fill='none' stroke='#000' />\n          <Line ox={12.5} ex={300} ey={125} stroke='red'>\n            <Text ox={5} oy={4} fill='red'>\n              {t('pages.svg.exampleText')}\n            </Text>\n          </Line>\n        </Svg>\n        <code>\n          {`\n<Svg width={500} height={250}>\n  <Circle size={25} fill='none' stroke='#000' />\n  <Line ox={12.5} ex={300} ey={125} stroke='red'>\n    <Text ox={5} oy={4} fill='red'>\n      ${t('pages.svg.exampleText')}\n    </Text>\n  </Line>\n</Svg>`.trim()}\n        </code>\n      </div>\n      <div>\n        <h2>{t('pages.svg.responsive')}</h2>\n        <p>{t('pages.svg.responsiveDescription')}</p>\n        <p>{t('pages.svg.notResponsiveExample')}</p>\n        <Svg width={1000} height={250} className=\"svg-demo-svg\">\n          <Distance\n            sx={0}\n            ex={1000}\n            ey={125}\n            markers='arrow'\n            stroke='#000'\n          />\n          <Circle\n            size={60}\n            fill='none'\n            stroke='#000'\n          />\n        </Svg>\n        <p>{t('pages.svg.responsiveExample')}</p>\n        <Svg width={1000} height={250} scale className=\"svg-demo-svg\">\n          <Distance\n            sx={0}\n            ex={1000}\n            ey={125}\n            markers='arrow'\n            stroke='#000'\n          />\n          <Circle\n            size={60}\n            fill='none'\n            stroke='#000'\n          />\n        </Svg>\n        <code>\n          {`\n<Svg width={1000} height={250} scale className=\"svg-demo-svg\">\n  <Distance\n    sx={0}\n    ex={1000}\n    ey={125}\n    markers='arrow'\n    stroke='#000'\n  />\n  <Circle\n    size={60}\n    fill='none'\n    stroke='#000'\n  />\n</Svg>`.trim()}\n        </code>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Svg, Distance } from 'react-svg-path';\nimport { translate as t } from '../../../i18n/i18n';\nimport './DistanceDemo.css';\n\nexport const DistanceDemo = () => {\n  return (\n    <>\n      <h1>{t('pages.distance.title')}</h1>\n      <p dangerouslySetInnerHTML={{ __html: t('pages.distance.intro') }}></p>\n      <div>\n        <h2>{t('pages.distance.pixelsDefault')}</h2>\n        <p>{t('pages.distance.pixelsDefaultDescription')}</p>\n        <Svg width={600} height={200} scale>\n          <Distance sx={0} sy={150} ex={600} ey={150} />\n          <Distance sx={150} sy={0} ex={150} ey={200} />\n          <Distance sx={400} sy={0} ex={600} ey={200} />\n        </Svg>\n        <code>\n          {`\n<Svg width={600} height={200}>\n  <Distance sx={0} sy={150} ex={600} ey={150} />\n  <Distance sx={150} sy={0} ex={150} ey={200} />\n  <Distance sx={400} sy={0} ex={600} ey={200} />\n</Svg>`.trim()}\n        </code>\n      </div>\n      <div>\n        <h2>{t('pages.distance.color')}</h2>\n        <p>{t('pages.distance.colorDescription')}</p>\n        <Svg width={600} height={200} scale>\n          <Distance sx={0} sy={150} ex={600} ey={150} color='red' />\n          <Distance sx={150} sy={0} ex={150} ey={200} color='green' />\n          <Distance sx={400} sy={0} ex={600} ey={200} color='blue' />\n        </Svg>\n        <code>\n          {`\n<Svg width={600} height={200}>\n  <Distance sx={0} sy={150} ex={600} ey={150} color='red' />\n  <Distance sx={150} sy={0} ex={150} ey={200} color='green' />\n  <Distance sx={400} sy={0} ex={600} ey={200} color='blue' />\n</Svg>`.trim()}\n        </code>\n      </div>\n      <div>\n        <h2>{t('pages.distance.dotted')}</h2>\n        <p>{t('pages.distance.dottedDescription')}</p>\n        <Svg width={600} height={200} scale>\n          <Distance sx={0} sy={150} ex={600} ey={150} dotted />\n          <Distance sx={150} sy={0} ex={150} ey={200} dotted />\n          <Distance sx={400} sy={0} ex={600} ey={200} dotted />\n        </Svg>\n        <code>\n          {`\n<Svg width={600} height={200}>\n  <Distance sx={0} sy={150} ex={600} ey={150} dotted />\n  <Distance sx={150} sy={0} ex={150} ey={200} dotted />\n  <Distance sx={400} sy={0} ex={600} ey={200} dotted />\n</Svg>`.trim()}\n        </code>\n      </div>\n      <div>\n        <h2>{t('pages.distance.text')}</h2>\n        <p>{t('pages.distance.textDescription')}</p>\n        <Svg width={600} height={200} scale>\n          <Distance sx={0} sy={150} ex={600} ey={150} text='world' />\n          <Distance sx={150} sy={0} ex={150} ey={200} text='hello' />\n          <Distance sx={400} sy={0} ex={600} ey={200} text='🔸' />\n        </Svg>\n        <code>\n          {`\n<Svg width={600} height={200}>\n  <Distance sx={0} sy={150} ex={600} ey={150} text=\"world\" />\n  <Distance sx={150} sy={0} ex={150} ey={200} text=\"hello\" />\n  <Distance sx={400} sy={0} ex={600} ey={200} text=\"🔸\" />\n</Svg>`.trim()}\n        </code>\n      </div>\n\n      <div>\n        <h2>{t('pages.distance.markers')}</h2>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: t('pages.distance.markersDescription')\n          }}\n        />\n        <Svg width={600} height={200} scale>\n          <Distance sx={0} sy={150} ex={600} ey={150} markerEnd='arrow' />\n          <Distance sx={150} sy={0} ex={150} ey={200} markerStart='triangle' />\n          <Distance sx={400} sy={0} ex={600} ey={200} markers='arrow' />\n        </Svg>\n        <code>\n          {`\n<Svg width={600} height={200}>\n  <Distance sx={0} sy={150} ex={600} ey={150} markerEnd='arrow' />\n  <Distance sx={150} sy={0} ex={150} ey={200} markerStart='triangle' />\n  <Distance sx={400} sy={0} ex={600} ey={200} markers='arrow' />\n</Svg>`.trim()}\n        </code>\n      </div>\n\n      <div>\n        <h2>{t('pages.distance.scale')}</h2>\n        <p>{t('pages.distance.scaleDescription')}</p>\n        <Svg width={600} height={200} scale>\n          <Distance\n            sx={0}\n            sy={150}\n            ex={600}\n            ey={150}\n            scale={0.3}\n            scaleUnit={'ft'}\n          />\n          <Distance\n            sx={150}\n            sy={0}\n            ex={150}\n            ey={200}\n            scale={0.3}\n            scaleUnit={'ft'}\n          />\n        </Svg>\n        <code>\n          {`\nconst svgWidth = 600;\nconst representedWidth = 180 // feet\nconst scale = representedWidth / svgWidth\nconst scaleUnit = 'ft'\n<Svg width={600} height={200}>\n  <Distance\n    sx={0}\n    sy={150}\n    ex={600}\n    ey={150}\n    scale={scale}\n    scaleUnit={scaleUnit}\n  />\n  <Distance\n    sx={150}\n    sy={0}\n    ex={150}\n    ey={200}\n    scale={scale}\n    scaleUnit={scaleUnit}\n  />\n</Svg>`.trim()}\n        </code>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { translate as t } from '../../i18n/i18n';\nimport Path, { Svg } from 'react-svg-path';\n\nconst Triangle = ({ x, y, w, h, ...rest }) => {\n  const p = new Path();\n  return p\n    .M(x, y)\n    .l(-w / 2, h)\n    .right(w)\n    .close()\n    .toComponent(rest);\n};\n\nexport const ToComponent = () => {\n  return (\n    <>\n      <h1>{t('pages.toComponent.title')}</h1>\n      <p>{t('pages.toComponent.description')}</p>\n      <h2>{t('common.example')}</h2>\n      <code>{`const Triangle = ({ x, y, w, h, ...rest }) => {\n  const p = new Path();\n  return p\n    .M(x, y)\n    .l(-w / 2, h)\n    .right(w)\n    .close()\n    .toComponent(rest);\n};`}</code>\n      <p>{t('pages.toComponent.description2')}</p>\n      <div>\n        <Svg width={500} height={200} scale>\n          <g transform='translate(125,0)'>\n            {['red', 'blue', 'green'].map((c, i) => (\n              <Triangle key={c} x={i * 100} y={25} w={150} h={150} fill={c} />\n            ))}\n          </g>\n        </Svg>\n      </div>\n      <code>\n        {`\n{['red', 'blue', 'green'].map((c, i) => (\n  <Triangle key={c} x={i * 100} y={25} w={150} h={150} fill={c} />\n))}`.trim()}\n      </code>\n    </>\n  );\n};\n","import React from 'react';\nimport { translate as t } from '../../i18n/i18n';\nconst pathCommands = {\n  primitives: [\n    { cmd: 'A', args: 'rx,ry,rotation,arc,sweep,ex,ey' },\n    { cmd: 'a', args: 'rx, ry,rotation,arc,sweep,ex,ey' },\n    { cmd: 'C', args: 'cx1,cy1,cx2,cy2,ex,ey' },\n    { cmd: 'c', args: 'cx1,cy1,cx2,cy2,ex,ey' },\n    { cmd: 'H', args: 'x' },\n    { cmd: 'h', args: 'x' },\n    { cmd: 'L', args: 'x,y' },\n    { cmd: 'l', args: 'x,y' },\n    { cmd: 'M', args: 'x,y' },\n    { cmd: 'm', args: 'x,y' },\n    { cmd: 'Q', args: 'cx,cy,ex,ey' },\n    { cmd: 'q', args: 'cx,cy,ex,ey' },\n    { cmd: 'S', args: 'cx,cy,ex,ey' },\n    { cmd: 's', args: 'cx,cy,ex,ey' },\n    { cmd: 'T', args: 'ex,ey' },\n    { cmd: 't', args: 'ex,ey' },\n    { cmd: 'V', args: 'y' },\n    { cmd: 'v', args: 'y' }\n  ],\n  friendly: [\n    {\n      cmd: 'arc',\n      args: 'rx,ry,rotation,arc,sweep,ex,ey,relative = false',\n      description: t('pages.path.commands.arc.description')\n    },\n\n    {\n      cmd: 'cCurve',\n      args: 'cx,cy,ex,ey,relative = false',\n      description: t('pages.path.commands.cCurve.description')\n    },\n\n    {\n      cmd: 'horizontalTo',\n      args: 'x,relative = false',\n      description: t('pages.path.commands.horizontalTo.description')\n    },\n\n    {\n      cmd: 'verticalTo',\n      args: 'x,relative = false',\n      description: t('pages.path.commands.verticalTo.description')\n    },\n\n    {\n      cmd: 'lineTo',\n      args: 'x,y,relative = false',\n      description: t('pages.path.commands.lineTo.description')\n    },\n\n    {\n      cmd: 'moveTo',\n      args: 'x,y,relative = false',\n      description: t('pages.path.commands.moveTo.description')\n    },\n\n    {\n      cmd: 'qCurve',\n      args: 'cx,cy,ex,ey,relative = false',\n      description: t('pages.path.commands.qCurve.description')\n    },\n\n    {\n      cmd: 'sCurveTo',\n      args: 'cx,cy,ex,ey,relative = false',\n      description: t('pages.path.commands.sCurveTo.description')\n    },\n\n    {\n      cmd: 'tCurveTo',\n      args: 'cx,cy,ex,ey,relative = false',\n      description: t('pages.path.commands.tCurveTo.description')\n    }\n  ],\n  helpers: [\n    {\n      cmd: 'down',\n      args: 'px',\n      description: t('pages.path.commands.down.description')\n    },\n    {\n      cmd: 'up',\n      args: 'px',\n      description: t('pages.path.commands.up.description')\n    },\n    {\n      cmd: 'right',\n      args: 'px',\n      description: t('pages.path.commands.right.description')\n    },\n    {\n      cmd: 'left',\n      args: 'px',\n      description: t('pages.path.commands.left.description')\n    },\n    {\n      cmd: 'close',\n      description: t('pages.path.commands.close.description')\n    }\n  ],\n  shapes: [\n    {\n      cmd: '.circle',\n      args: 'size, cx, cy',\n      description: t('pages.path.commands.circle.description')\n    },\n\n    {\n      cmd: '.ellipse',\n      args: 'width, height, cx, cy',\n      description: t('pages.path.commands.ellipse.description')\n    },\n\n    {\n      cmd: '.polygon',\n      args: '[points]',\n      description: t('pages.path.commands.polygon.description')\n    },\n\n    {\n      cmd: '.polygram',\n      args: 'size, points, cx, cy, vertexSkip = 2',\n      description: t('pages.path.commands.polygram.description')\n    },\n\n    {\n      cmd: '.polyline',\n      args: '[points], relative = false',\n      description: t('pages.path.commands.polyline.description')\n    },\n\n    {\n      cmd: '.radialLines',\n      args: 'outerSize, innerSize, points, cx, cy',\n      description: t('pages.path.commands.radialLines.description')\n    },\n\n    {\n      cmd: '.rect',\n      args: 'width, height, cx, cy',\n      description: t('pages.path.commands.rect.description')\n    },\n\n    {\n      cmd: '.regPolygon',\n      args: 'size, sides, cx, cy',\n      description: t('pages.path.commands.regPolygon.description')\n    },\n\n    {\n      cmd: '.sector',\n      args: 'cx, cy, size, startAngle, endAngle',\n      description: t('pages.path.commands.sector.description')\n    },\n\n    {\n      cmd: '.segment',\n      args: 'cx, cy, size, startAngle, endAngle',\n      description: t('pages.path.commands.segment.description')\n    },\n\n    {\n      cmd: '.square',\n      args: 'size, cx, cy',\n      description: t('pages.path.commands.square.description')\n    },\n\n    {\n      cmd: '.star',\n      args: 'outerSize, innerSize, points, cx, cy',\n      description: t('pages.path.commands.star.description')\n    },\n\n    {\n      cmd: '.triangle',\n      args: 'size, cx, cy',\n      description: t('pages.path.commands.triangle.description')\n    }\n  ]\n};\n\nexport const PathIntro = () => {\n  return (\n    <>\n      <h1>{t('pages.path.title')}</h1>\n      <p dangerouslySetInnerHTML={{ __html: t('pages.path.intro') }} />\n\n      <h2>{t('common.import')}</h2>\n      <code>import Path from 'react-svg-path'</code>\n\n      <h2>{t('common.example')}</h2>\n      <code>{`<path d=\"M0 0, L0 100\"></path>`}</code>\n\n      <p>{t('pages.path.example')}</p>\n\n      <code>\n        {`const path = new Path().M(0,0).L(0,100);\nconsole.log(path.toString()) // M0 0, L0 100`}\n      </code>\n\n      <h2>{t('pages.path.pathCommands')}</h2>\n      <p>{t('pages.path.pathCommandsIntro')}</p>\n      <ul>\n        {pathCommands.primitives.map(({ cmd, args }, index) => {\n          return (\n            <li key={index}>\n              <b>{cmd}</b>(<i>{args}</i>)\n            </li>\n          );\n        })}\n      </ul>\n      <p>{t('pages.path.pathHelpers')}</p>\n      <ul>\n        {pathCommands.friendly.map(({ cmd, args, description }, index) => {\n          return (\n            <li key={index}>\n              <b>{cmd}</b>(<i>{args}</i>)\n              <ul>\n                <li>{description}</li>\n              </ul>\n            </li>\n          );\n        })}\n      </ul>\n      <p>{t('pages.path.pathAdditionalHelpers')}</p>\n      <ul>\n        {pathCommands.helpers.map(({ cmd, args, description }, index) => {\n          return (\n            <li key={index}>\n              <b>{cmd}</b>(<i>{args}</i>)\n              <ul>\n                <li>{description}</li>\n              </ul>\n            </li>\n          );\n        })}\n      </ul>\n      <p>{t('pages.path.shapes')}</p>\n      <ul>\n        {pathCommands.shapes.map(({ cmd, args, description }, index) => {\n          return (\n            <li key={index}>\n              <b>{cmd}</b>(<i>{args}</i>)\n              <ul>\n                <li>{description}</li>\n              </ul>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\n// https://reacttraining.com/react-router/web/guides/scroll-restoration\nconst ScrollToTop = ({ cb, children, location: { pathname } }) => {\n  useEffect(() => {\n    const contentArea = document.querySelector('.content-area');\n    contentArea.scrollTop = 0;\n    cb && cb();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n\n  return children;\n};\n\nScrollToTop.propTypes = {\n  children: PropTypes.node,\n  location: PropTypes.object\n};\n\nexport default withRouter(ScrollToTop);\n","import React, { useState } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  NavLink\n} from 'react-router-dom';\nimport { basicShapes, curves } from './docs/docs.mjs';\nimport { Nav } from './components/Nav';\n/** demo builders */\nimport { BasicShapeDemo } from './components/demo-builders/BasicShapeDemo';\nimport { CurveDemo } from './components/demo-builders/CurveDemo';\n/** pages */\nimport { Nesting } from './components/pages/nesting';\nimport { Demos } from './components/pages/demos';\nimport { MergeDemo } from './components/pages/merge/MergeDemo';\nimport { Introduction } from './components/pages/Introduction';\nimport { MarkerDemo } from './components/pages/markers/MarkerDemo';\nimport { TextPathDemo } from './components/pages/textpath/TextPathDemo';\nimport { CenterEndDemo } from './components/pages/CenterEndDemo';\nimport { SvgDemo } from './components/pages/svg/SvgDemo';\nimport { DistanceDemo } from './components/pages/distance/DistanceDemo';\nimport { ToComponent } from './components/pages/ToComponent';\nimport { PathIntro } from './components/pages/PathIntro';\nimport ScrollToTop from './components/ScrollToTop';\nimport { Line, Svg } from 'react-svg-path';\n\nimport './App.css';\n\nconst App = () => {\n  const [overlayNav, setOverlayNav] = useState(false);\n  const shapesDemos = Object.keys(basicShapes);\n  const curveDemos = Object.keys(curves);\n\n  return (\n    <Router basename='/'>\n      <header className='app-header'>\n        <div className='flex items-center justify-center pointer'>\n          <Svg\n            className='nav-actuator'\n            width={25}\n            height={25}\n            style={{\n              backgroundColor: 'transparent',\n              outline: 0,\n              marginRight: 10,\n              marginLeft: -10,\n              cursor: 'pointer',\n              borderRadius: '3px',\n              border: '1px solid #999'\n            }}\n            onClick={() => {\n              console.log('onCLick!');\n              setOverlayNav((state) => !state);\n            }}\n          >\n            <Line\n              oy={-7}\n              ox={-10}\n              ex={20}\n              ey={0}\n              stroke='#ddd'\n              strokeWidth={4}\n              relative\n            />\n            <Line\n              ox={-10}\n              ex={20}\n              ey={0}\n              stroke='#ddd'\n              strokeWidth={4}\n              relative\n            />\n            <Line\n              oy={7}\n              ox={-10}\n              ex={20}\n              ey={0}\n              stroke='#ddd'\n              strokeWidth={4}\n              relative\n            />\n          </Svg>\n          <NavLink to='/' style={{ color: 'white' }}>\n            react-svg-path\n          </NavLink>\n        </div>\n        <a\n          style={{ color: 'white' }}\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://github.com/joemaddalone/react-svg-path'\n        >\n          github\n        </a>\n      </header>\n      <main className='app-main'>\n        <Nav overlay={overlayNav} />\n        <div className='content-area' tabIndex={0}>\n          <ScrollToTop cb={() => setOverlayNav(false)}>\n            <Route exact path='/' component={Introduction} />\n            <Route exact path={`/demos`} render={() => <Demos />} />\n            <Route exact path={`/nesting`} render={() => <Nesting />} />\n            <Route exact path={`/pathmerge`} render={() => <MergeDemo />} />\n            <Route exact path={`/path`} render={() => <PathIntro />} />\n            <Route exact path={`/tocomponent`} render={() => <ToComponent />} />\n            <Route exact path={`/markers`} render={() => <MarkerDemo />} />\n            <Route exact path={`/textpath`} render={() => <TextPathDemo />} />\n            <Route exact path={`/centerend`} render={() => <CenterEndDemo />} />\n            <Route exact path={`/distance`} render={() => <DistanceDemo />} />\n            <Route exact path={`/svg`} render={() => <SvgDemo />} />\n            <div className='basic-shapes'>\n              {shapesDemos.map((s, i) => (\n                <Route\n                  key={s}\n                  exact\n                  path={`/${s}`}\n                  render={() => <BasicShapeDemo shape={s} />}\n                />\n              ))}\n              {curveDemos.map((c, i) => (\n                <Route\n                  key={c}\n                  exact\n                  path={`/${c}`}\n                  render={() => <CurveDemo curve={c} />}\n                />\n              ))}\n            </div>\n          </ScrollToTop>\n          <blockquote style={{paddingTop: 120}} />\n        </div>\n      </main>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// eslint-disable-next-line no-unused-vars\nimport i18n from './i18n/i18n';\nimport './util/no-focus-event';\n\nif (process.env.NODE_ENV === 'development') {\n  const axe = require('react-axe');\n  axe(React, ReactDOM, 1000);\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}